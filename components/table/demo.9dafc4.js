(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{3367:function(kn,dn,l){kn.exports={ajax:l(4133),basic:l(4134),bordered:l(4135),"colspan-rowspan":l(4136),"custom-filter-panel":l(4137),"drag-sorting-handler":l(4139),"drag-sorting":l(4141),"dynamic-settings":l(4215),"edit-cell":l(4216),"edit-row":l(4217),"ellipsis-custom-tooltip":l(4218),ellipsis:l(4219),expand:l(4220),"filter-in-tree":l(4221),"filter-search":l(4222),"fixed-columns-header":l(4223),"fixed-columns":l(4224),"fixed-header":l(4225),"grouping-columns":l(4226),head:l(4227),jsx:l(4228),"multiple-sorter":l(4229),narrow:l(4230),"nest-table-border-debug":l(4231),"nested-table":l(4232),"order-column":l(4233),pagination:l(4234),"reset-filter":l(4235),"resizable-column":l(4236),responsive:l(4240),"row-selection-and-operation":l(4241),"row-selection-custom-debug":l(4242),"row-selection-custom":l(4243),"row-selection":l(4244),size:l(4245),sticky:l(4246),summary:l(4247),"tree-data":l(4248),"virtual-list":l(4249)}},3551:function(kn,dn,l){"use strict";(function(_){Object.defineProperty(dn,"__esModule",{value:!0});function Z(a){return typeof a=="object"&&!("toString"in a)?Object.prototype.toString.call(a).slice(8,-1):a}var U=typeof _=="object"&&!0;function C(a,n){if(!a)throw U?new Error("Invariant failed"):new Error(n())}dn.invariant=C;var g=Object.prototype.hasOwnProperty,k=Array.prototype.splice,r=Object.prototype.toString;function z(a){return r.call(a).slice(8,-1)}var B=Object.assign||function(a,n){return D(n).forEach(function(c){g.call(n,c)&&(a[c]=n[c])}),a},D=typeof Object.getOwnPropertySymbols=="function"?function(a){return Object.keys(a).concat(Object.getOwnPropertySymbols(a))}:function(a){return Object.keys(a)};function P(a){return Array.isArray(a)?B(a.constructor(a.length),a):z(a)==="Map"?new Map(a):z(a)==="Set"?new Set(a):a&&typeof a=="object"?B(Object.create(Object.getPrototypeOf(a)),a):a}var T=function(){function a(){this.commands=B({},H),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(n,c){return n===c},this.update.newContext=function(){return new a().update}}return Object.defineProperty(a.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(n){this.update.isEquals=n},enumerable:!0,configurable:!0}),a.prototype.extend=function(n,c){this.commands[n]=c},a.prototype.update=function(n,c){var y=this,J=typeof c=="function"?{$apply:c}:c;Array.isArray(n)&&Array.isArray(J)||C(!Array.isArray(J),function(){return"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."}),C(typeof J=="object"&&J!==null,function(){return"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the "+("following commands: "+Object.keys(y.commands).join(", ")+".")});var b=n;return D(J).forEach(function(p){if(g.call(y.commands,p)){var w=n===b;b=y.commands[p](J[p],b,J,n),w&&y.isEquals(b,n)&&(b=n)}else{var m=z(n)==="Map"?y.update(n.get(p),J[p]):y.update(n[p],J[p]),L=z(b)==="Map"?b.get(p):b[p];(!y.isEquals(m,L)||typeof m=="undefined"&&!g.call(n,p))&&(b===n&&(b=P(n)),z(b)==="Map"?b.set(p,m):b[p]=m)}}),b},a}();dn.Context=T;var H={$push:function(a,n,c){return Y(n,c,"$push"),a.length?n.concat(a):n},$unshift:function(a,n,c){return Y(n,c,"$unshift"),a.length?a.concat(n):n},$splice:function(a,n,c,y){return S(n,c),a.forEach(function(J){N(J),n===y&&J.length&&(n=P(y)),k.apply(n,J)}),n},$set:function(a,n,c){return t(c),a},$toggle:function(a,n){W(a,"$toggle");var c=a.length?P(n):n;return a.forEach(function(y){c[y]=!n[y]}),c},$unset:function(a,n,c,y){return W(a,"$unset"),a.forEach(function(J){Object.hasOwnProperty.call(n,J)&&(n===y&&(n=P(y)),delete n[J])}),n},$add:function(a,n,c,y){return h(n,"$add"),W(a,"$add"),z(n)==="Map"?a.forEach(function(J){var b=J[0],p=J[1];n===y&&n.get(b)!==p&&(n=P(y)),n.set(b,p)}):a.forEach(function(J){n===y&&!n.has(J)&&(n=P(y)),n.add(J)}),n},$remove:function(a,n,c,y){return h(n,"$remove"),W(a,"$remove"),a.forEach(function(J){n===y&&n.has(J)&&(n=P(y)),n.delete(J)}),n},$merge:function(a,n,c,y){return e(n,a),D(a).forEach(function(J){a[J]!==n[J]&&(n===y&&(n=P(y)),n[J]=a[J])}),n},$apply:function(a,n){return R(a),a(n)}},E=new T;dn.isEquals=E.update.isEquals,dn.extend=E.extend,dn.default=E.update,dn.default.default=kn.exports=B(dn.default,dn);function Y(a,n,c){C(Array.isArray(a),function(){return"update(): expected target of "+Z(c)+" to be an array; got "+Z(a)+"."}),W(n[c],c)}function W(a,n){C(Array.isArray(a),function(){return"update(): expected spec of "+Z(n)+" to be an array; got "+Z(a)+". Did you forget to wrap your parameter in an array?"})}function S(a,n){C(Array.isArray(a),function(){return"Expected $splice target to be an array; got "+Z(a)}),N(n.$splice)}function N(a){C(Array.isArray(a),function(){return"update(): expected spec of $splice to be an array of arrays; got "+Z(a)+". Did you forget to wrap your parameters in an array?"})}function R(a){C(typeof a=="function",function(){return"update(): expected spec of $apply to be a function; got "+Z(a)+"."})}function t(a){C(Object.keys(a).length===1,function(){return"Cannot have more than one key in an object with $set"})}function e(a,n){C(n&&typeof n=="object",function(){return"update(): $merge expects a spec of type 'object'; got "+Z(n)}),C(a&&typeof a=="object",function(){return"update(): $merge expects a target of type 'object'; got "+Z(a)})}function h(a,n){var c=z(a);C(c==="Map"||c==="Set",function(){return"update(): "+Z(n)+" expects a target of type Set or Map; got "+Z(c)})}}).call(this,l(462))},3576:function(kn,dn,l){"use strict";dn.__esModule=!0,dn.default=void 0;var _=r(l(0)),Z=l(3546),U=l(4238),C=l(3577),g=["children","className","draggableOpts","width","height","handle","handleSize","lockAspectRatio","axis","minConstraints","maxConstraints","onResize","onResizeStop","onResizeStart","resizeHandles","transformScale"];function k(W){if(typeof WeakMap!="function")return null;var S=new WeakMap,N=new WeakMap;return(k=function(t){return t?N:S})(W)}function r(W,S){if(!S&&W&&W.__esModule)return W;if(W===null||typeof W!="object"&&typeof W!="function")return{default:W};var N=k(S);if(N&&N.has(W))return N.get(W);var R={},t=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in W)if(e!=="default"&&Object.prototype.hasOwnProperty.call(W,e)){var h=t?Object.getOwnPropertyDescriptor(W,e):null;h&&(h.get||h.set)?Object.defineProperty(R,e,h):R[e]=W[e]}return R.default=W,N&&N.set(W,R),R}function z(){return z=Object.assign||function(W){for(var S=1;S<arguments.length;S++){var N=arguments[S];for(var R in N)Object.prototype.hasOwnProperty.call(N,R)&&(W[R]=N[R])}return W},z.apply(this,arguments)}function B(W,S){if(W==null)return{};var N={},R=Object.keys(W),t,e;for(e=0;e<R.length;e++)t=R[e],!(S.indexOf(t)>=0)&&(N[t]=W[t]);return N}function D(W,S){var N=Object.keys(W);if(Object.getOwnPropertySymbols){var R=Object.getOwnPropertySymbols(W);S&&(R=R.filter(function(t){return Object.getOwnPropertyDescriptor(W,t).enumerable})),N.push.apply(N,R)}return N}function P(W){for(var S=1;S<arguments.length;S++){var N=arguments[S]!=null?arguments[S]:{};S%2?D(Object(N),!0).forEach(function(R){T(W,R,N[R])}):Object.getOwnPropertyDescriptors?Object.defineProperties(W,Object.getOwnPropertyDescriptors(N)):D(Object(N)).forEach(function(R){Object.defineProperty(W,R,Object.getOwnPropertyDescriptor(N,R))})}return W}function T(W,S,N){return S in W?Object.defineProperty(W,S,{value:N,enumerable:!0,configurable:!0,writable:!0}):W[S]=N,W}function H(W,S){W.prototype=Object.create(S.prototype),W.prototype.constructor=W,E(W,S)}function E(W,S){return E=Object.setPrototypeOf||function(R,t){return R.__proto__=t,R},E(W,S)}var Y=function(W){H(S,W);function S(){for(var R,t=arguments.length,e=new Array(t),h=0;h<t;h++)e[h]=arguments[h];return R=W.call.apply(W,[this].concat(e))||this,R.handleRefs={},R.lastHandleRect=null,R.slack=null,R}var N=S.prototype;return N.componentWillUnmount=function(){this.resetData()},N.resetData=function(){this.lastHandleRect=this.slack=null},N.runConstraints=function(t,e){var h=this.props,a=h.minConstraints,n=h.maxConstraints,c=h.lockAspectRatio;if(!a&&!n&&!c)return[t,e];if(c){var y=this.props.width/this.props.height,J=t-this.props.width,b=e-this.props.height;Math.abs(J)>Math.abs(b*y)?e=t/y:t=e*y}var p=t,w=e,m=this.slack||[0,0],L=m[0],f=m[1];return t+=L,e+=f,a&&(t=Math.max(a[0],t),e=Math.max(a[1],e)),n&&(t=Math.min(n[0],t),e=Math.min(n[1],e)),this.slack=[L+(p-t),f+(w-e)],[t,e]},N.resizeHandler=function(t,e){var h=this;return function(a,n){var c=n.node,y=n.deltaX,J=n.deltaY;t==="onResizeStart"&&h.resetData();var b=(h.props.axis==="both"||h.props.axis==="x")&&e!=="n"&&e!=="s",p=(h.props.axis==="both"||h.props.axis==="y")&&e!=="e"&&e!=="w";if(!(!b&&!p)){var w=e[0],m=e[e.length-1],L=c.getBoundingClientRect();if(h.lastHandleRect!=null){if(m==="w"){var f=L.left-h.lastHandleRect.left;y+=f}if(w==="n"){var u=L.top-h.lastHandleRect.top;J+=u}}h.lastHandleRect=L,m==="w"&&(y=-y),w==="n"&&(J=-J);var O=h.props.width+(b?y/h.props.transformScale:0),K=h.props.height+(p?J/h.props.transformScale:0),Q=h.runConstraints(O,K);O=Q[0],K=Q[1];var j=O!==h.props.width||K!==h.props.height,G=typeof h.props[t]=="function"?h.props[t]:null,nn=t==="onResize"&&!j;G&&!nn&&(a.persist==null||a.persist(),G(a,{node:c,size:{width:O,height:K},handle:e})),t==="onResizeStop"&&h.resetData()}}},N.renderResizeHandle=function(t,e){var h=this.props.handle;if(!h)return _.createElement("span",{className:"react-resizable-handle react-resizable-handle-"+t,ref:e});if(typeof h=="function")return h(t,e);var a=typeof h.type=="string",n=P({ref:e},a?{}:{handleAxis:t});return _.cloneElement(h,n)},N.render=function(){var t=this,e=this.props,h=e.children,a=e.className,n=e.draggableOpts,c=e.width,y=e.height,J=e.handle,b=e.handleSize,p=e.lockAspectRatio,w=e.axis,m=e.minConstraints,L=e.maxConstraints,f=e.onResize,u=e.onResizeStop,O=e.onResizeStart,K=e.resizeHandles,Q=e.transformScale,j=B(e,g);return(0,U.cloneElement)(h,P(P({},j),{},{className:(a?a+" ":"")+"react-resizable",children:[].concat(h.props.children,K.map(function(G){var nn,an=(nn=t.handleRefs[G])!=null?nn:t.handleRefs[G]=_.createRef();return _.createElement(Z.DraggableCore,z({},n,{nodeRef:an,key:"resizableHandle-"+G,onStop:t.resizeHandler("onResizeStop",G),onStart:t.resizeHandler("onResizeStart",G),onDrag:t.resizeHandler("onResize",G)}),t.renderResizeHandle(G,an))}))}))},S}(_.Component);dn.default=Y,Y.propTypes=C.resizableProps,Y.defaultProps={axis:"both",handleSize:[20,20],lockAspectRatio:!1,minConstraints:[20,20],maxConstraints:[1/0,1/0],resizeHandles:["se"],transformScale:1}},3577:function(kn,dn,l){"use strict";dn.__esModule=!0,dn.resizableProps=void 0;var _=U(l(11)),Z=l(3546);function U(g){return g&&g.__esModule?g:{default:g}}var C={axis:_.default.oneOf(["both","x","y","none"]),className:_.default.string,children:_.default.element.isRequired,draggableOpts:_.default.shape({allowAnyClick:_.default.bool,cancel:_.default.string,children:_.default.node,disabled:_.default.bool,enableUserSelectHack:_.default.bool,offsetParent:_.default.node,grid:_.default.arrayOf(_.default.number),handle:_.default.string,nodeRef:_.default.object,onStart:_.default.func,onDrag:_.default.func,onStop:_.default.func,onMouseDown:_.default.func,scale:_.default.number}),height:_.default.number.isRequired,handle:_.default.oneOfType([_.default.node,_.default.func]),handleSize:_.default.arrayOf(_.default.number),lockAspectRatio:_.default.bool,maxConstraints:_.default.arrayOf(_.default.number),minConstraints:_.default.arrayOf(_.default.number),onResizeStop:_.default.func,onResizeStart:_.default.func,onResize:_.default.func,resizeHandles:_.default.arrayOf(_.default.oneOf(["s","w","e","n","sw","nw","se","ne"])),transformScale:_.default.number,width:_.default.number.isRequired};dn.resizableProps=C},4133:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8FD9\u4E2A\u4F8B\u5B50\u901A\u8FC7\u7B80\u5355\u7684 ajax \u8BFB\u53D6\u65B9\u5F0F\uFF0C\u6F14\u793A\u4E86\u5982\u4F55\u4ECE\u670D\u52A1\u7AEF\u8BFB\u53D6\u5E76\u5C55\u73B0\u6570\u636E\uFF0C\u5177\u6709\u7B5B\u9009\u3001\u6392\u5E8F\u7B49\u529F\u80FD\u4EE5\u53CA\u9875\u9762 loading \u6548\u679C\u3002\u5F00\u53D1\u8005\u53EF\u4EE5\u81EA\u884C\u63A5\u5165\u5176\u4ED6\u6570\u636E\u5904\u7406\u65B9\u5F0F\u3002"],["p","\u53E6\u5916\uFF0C\u672C\u4F8B\u4E5F\u5C55\u793A\u4E86\u7B5B\u9009\u6392\u5E8F\u529F\u80FD\u5982\u4F55\u4EA4\u7ED9\u670D\u52A1\u7AEF\u5B9E\u73B0\uFF0C\u5217\u4E0D\u9700\u8981\u6307\u5B9A\u5177\u4F53\u7684 ",["code","onFilter"]," \u548C ",["code","sorter"]," \u51FD\u6570\uFF0C\u800C\u662F\u5728\u628A\u7B5B\u9009\u548C\u6392\u5E8F\u7684\u53C2\u6570\u53D1\u5230\u670D\u52A1\u7AEF\u6765\u5904\u7406\u3002"],["p","\u5F53\u4F7F\u7528 ",["code","rowSelection"]," \u65F6\uFF0C\u8BF7\u8BBE\u7F6E ",["code","rowSelection.preserveSelectedRowKeys"]," \u5C5E\u6027\u4EE5\u4FDD\u7559 ",["code","key"],"\u3002"],["p",["strong","\u6CE8\u610F\uFF0C\u6B64\u793A\u4F8B\u4F7F\u7528 ",["a",{title:null,href:"https://randomuser.me"},"\u6A21\u62DF\u63A5\u53E3"],"\uFF0C\u5C55\u793A\u6570\u636E\u53EF\u80FD\u4E0D\u51C6\u786E\uFF0C\u8BF7\u6253\u5F00\u7F51\u7EDC\u9762\u677F\u67E5\u770B\u8BF7\u6C42\u3002"]],["blockquote",["p","\u{1F6CE}\uFE0F \u60F3\u8981 3 \u5206\u949F\u5B9E\u73B0\uFF1F\u8BD5\u8BD5 ",["a",{title:null,href:"https://procomponents.ant.design/components/table"},"ProTable"],"\uFF01"]]],"en-US":[["p","This example shows how to fetch and present data from a remote server, and how to implement filtering and sorting in server side by sending related parameters to server."],["p","Setting ",["code","rowSelection.preserveSelectedRowKeys"]," to keep the ",["code","key"]," when enable selection."],["p",["strong","Note, this example use ",["a",{title:null,href:"https://randomuser.me"},"Mock API"]," that you can look up in Network Console."]]]},meta:{order:10,title:{"en-US":"Ajax","zh-CN":"\u8FDC\u7A0B\u52A0\u8F7D\u6570\u636E"},filename:"components/table/demo/ajax.md",id:"components-table-demo-ajax"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TablePaginationConfig } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { FilterValue<span class="token punctuation">,</span> SorterResult } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import qs from <span class="token string">'qs'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useEffect<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  name<span class="token punctuation">:</span> {
    first<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
    last<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>
  gender<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  email<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  login<span class="token punctuation">:</span> {
    uuid<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>
}

interface Params {
  pagination<span class="token operator">?</span><span class="token punctuation">:</span> TablePaginationConfig<span class="token comment" spellcheck="true">;</span>
  sorter<span class="token operator">?</span><span class="token punctuation">:</span> SorterResult<span class="token operator">&lt;</span>any<span class="token operator">></span> | SorterResult<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  total<span class="token operator">?</span><span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  sortField<span class="token operator">?</span><span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  sortOrder<span class="token operator">?</span><span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> name <span class="token operator">=</span><span class="token operator">></span> \`\${name<span class="token punctuation">.</span>first} \${name<span class="token punctuation">.</span>last}\`<span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      { text<span class="token punctuation">:</span> <span class="token string">'Male'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'male'</span> }<span class="token punctuation">,</span>
      { text<span class="token punctuation">:</span> <span class="token string">'Female'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'female'</span> }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Email'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getRandomuserParams <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token punctuation">:</span> Params<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
  results<span class="token punctuation">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">,</span>
  page<span class="token punctuation">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?</span><span class="token punctuation">.</span>current<span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>params<span class="token punctuation">,</span>
}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationConfig<span class="token operator">></span><span class="token punctuation">(</span>{
    current<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    pageSize<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> fetchData <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token punctuation">:</span> Params <span class="token operator">=</span> {}<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span>\`https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>randomuser<span class="token punctuation">.</span>me<span class="token operator">/</span>api<span class="token operator">?</span>\${qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">getRandomuserParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span>}\`<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ results }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setData</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setPagination</span><span class="token punctuation">(</span>{
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>params<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span>
          total<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">200</span> is mock data<span class="token punctuation">,</span> you should read it from server
          <span class="token operator">/</span><span class="token operator">/</span> total<span class="token punctuation">:</span> data<span class="token punctuation">.</span>totalCount<span class="token punctuation">,</span>
        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">fetchData</span><span class="token punctuation">(</span>{ pagination }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleTableChange <span class="token operator">=</span> <span class="token punctuation">(</span>
    newPagination<span class="token punctuation">:</span> TablePaginationConfig<span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> FilterValue<span class="token operator">></span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">fetchData</span><span class="token punctuation">(</span>{
      sortField<span class="token punctuation">:</span> sorter<span class="token punctuation">.</span>field as string<span class="token punctuation">,</span>
      sortOrder<span class="token punctuation">:</span> sorter<span class="token punctuation">.</span>order as string<span class="token punctuation">,</span>
      pagination<span class="token punctuation">:</span> newPagination<span class="token punctuation">,</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>filters<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Table
      columns<span class="token operator">=</span>{columns}
      rowKey<span class="token operator">=</span>{record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>login<span class="token punctuation">.</span>uuid}
      dataSource<span class="token operator">=</span>{data}
      pagination<span class="token operator">=</span>{pagination}
      loading<span class="token operator">=</span>{loading}
      onChange<span class="token operator">=</span>{handleTableChange}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TablePaginationConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> FilterValue<span class="token punctuation">,</span> SorterResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">'qs'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token punctuation">{</span>
    first<span class="token operator">:</span> string<span class="token punctuation">;</span>
    last<span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  gender<span class="token operator">:</span> string<span class="token punctuation">;</span>
  email<span class="token operator">:</span> string<span class="token punctuation">;</span>
  login<span class="token operator">:</span> <span class="token punctuation">{</span>
    uuid<span class="token operator">:</span> string<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Params</span> <span class="token punctuation">{</span>
  pagination<span class="token operator">?</span><span class="token operator">:</span> TablePaginationConfig<span class="token punctuation">;</span>
  sorter<span class="token operator">?</span><span class="token operator">:</span> SorterResult<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">|</span> SorterResult<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  total<span class="token operator">?</span><span class="token operator">:</span> number<span class="token punctuation">;</span>
  sortField<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
  sortOrder<span class="token operator">?</span><span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> name <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token punctuation">.</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token punctuation">.</span>last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'Male'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'male'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'Female'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'female'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Email'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getRandomuserParams</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> Params<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  results<span class="token operator">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?.</span>pageSize<span class="token punctuation">,</span>
  page<span class="token operator">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?.</span>current<span class="token punctuation">,</span>
  <span class="token operator">...</span>params<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationConfig<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    current<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    pageSize<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> Params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://randomuser.me/api?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">getRandomuserParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> results <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token operator">...</span>params<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span>
          total<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token comment">// 200 is mock data, you should read it from server</span>
          <span class="token comment">// total: data.totalCount,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pagination <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
    newPagination<span class="token operator">:</span> TablePaginationConfig<span class="token punctuation">,</span>
    filters<span class="token operator">:</span> Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> FilterValue<span class="token operator">></span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      sortField<span class="token operator">:</span> sorter<span class="token punctuation">.</span>field <span class="token keyword">as</span> string<span class="token punctuation">,</span>
      sortOrder<span class="token operator">:</span> sorter<span class="token punctuation">.</span>order <span class="token keyword">as</span> string<span class="token punctuation">,</span>
      pagination<span class="token operator">:</span> newPagination<span class="token punctuation">,</span>
      <span class="token operator">...</span>filters<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>record <span class="token operator">=></span> record<span class="token punctuation">.</span>login<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pagination<span class="token punctuation">}</span></span>
      <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTableChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">'qs'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token punctuation">.</span>first<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token punctuation">.</span>last<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Male'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'male'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Female'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'female'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Email'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'email'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getRandomuserParams</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">results</span><span class="token operator">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?.</span>pageSize<span class="token punctuation">,</span>
  <span class="token literal-property property">page</span><span class="token operator">:</span> params<span class="token punctuation">.</span>pagination<span class="token operator">?.</span>current<span class="token punctuation">,</span>
  <span class="token operator">...</span>params<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>pagination<span class="token punctuation">,</span> setPagination<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">https://randomuser.me/api?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">getRandomuserParams</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> results <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setPagination</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token operator">...</span>params<span class="token punctuation">.</span>pagination<span class="token punctuation">,</span>
          <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 200 is mock data, you should read it from server</span>
          <span class="token comment">// total: data.totalCount,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      pagination<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTableChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newPagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">sortField</span><span class="token operator">:</span> sorter<span class="token punctuation">.</span>field<span class="token punctuation">,</span>
      <span class="token literal-property property">sortOrder</span><span class="token operator">:</span> sorter<span class="token punctuation">.</span>order<span class="token punctuation">,</span>
      <span class="token literal-property property">pagination</span><span class="token operator">:</span> newPagination<span class="token punctuation">,</span>
      <span class="token operator">...</span>filters<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>login<span class="token punctuation">.</span>uuid<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pagination<span class="token punctuation">}</span></span>
      <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTableChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(n){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(c){return typeof c}:function(c){return c&&typeof Symbol=="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c},C(n)}var g=l(12),k=D(l(3559)),r=B(l(0));function z(n){if(typeof WeakMap!="function")return null;var c=new WeakMap,y=new WeakMap;return(z=function(b){return b?y:c})(n)}function B(n,c){if(!c&&n&&n.__esModule)return n;if(n===null||C(n)!=="object"&&typeof n!="function")return{default:n};var y=z(c);if(y&&y.has(n))return y.get(n);var J={},b=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var p in n)if(p!=="default"&&Object.prototype.hasOwnProperty.call(n,p)){var w=b?Object.getOwnPropertyDescriptor(n,p):null;w&&(w.get||w.set)?Object.defineProperty(J,p,w):J[p]=n[p]}return J.default=n,y&&y.set(n,J),J}function D(n){return n&&n.__esModule?n:{default:n}}function P(n,c){return W(n)||Y(n,c)||H(n,c)||T()}function T(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function H(n,c){if(!!n){if(typeof n=="string")return E(n,c);var y=Object.prototype.toString.call(n).slice(8,-1);if(y==="Object"&&n.constructor&&(y=n.constructor.name),y==="Map"||y==="Set")return Array.from(n);if(y==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(y))return E(n,c)}}function E(n,c){(c==null||c>n.length)&&(c=n.length);for(var y=0,J=new Array(c);y<c;y++)J[y]=n[y];return J}function Y(n,c){var y=n==null?null:typeof Symbol!="undefined"&&n[Symbol.iterator]||n["@@iterator"];if(y!=null){var J=[],b=!0,p=!1,w,m;try{for(y=y.call(n);!(b=(w=y.next()).done)&&(J.push(w.value),!(c&&J.length===c));b=!0);}catch(L){p=!0,m=L}finally{try{!b&&y.return!=null&&y.return()}finally{if(p)throw m}}return J}}function W(n){if(Array.isArray(n))return n}function S(n,c){var y=Object.keys(n);if(Object.getOwnPropertySymbols){var J=Object.getOwnPropertySymbols(n);c&&(J=J.filter(function(b){return Object.getOwnPropertyDescriptor(n,b).enumerable})),y.push.apply(y,J)}return y}function N(n){for(var c=1;c<arguments.length;c++){var y=arguments[c]!=null?arguments[c]:{};c%2?S(Object(y),!0).forEach(function(J){R(n,J,y[J])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(y)):S(Object(y)).forEach(function(J){Object.defineProperty(n,J,Object.getOwnPropertyDescriptor(y,J))})}return n}function R(n,c,y){return c in n?Object.defineProperty(n,c,{value:y,enumerable:!0,configurable:!0,writable:!0}):n[c]=y,n}var t=[{title:"Name",dataIndex:"name",sorter:!0,render:function(c){return"".concat(c.first," ").concat(c.last)},width:"20%"},{title:"Gender",dataIndex:"gender",filters:[{text:"Male",value:"male"},{text:"Female",value:"female"}],width:"20%"},{title:"Email",dataIndex:"email"}],e=function(c){var y,J;return N({results:(y=c.pagination)===null||y===void 0?void 0:y.pageSize,page:(J=c.pagination)===null||J===void 0?void 0:J.current},c)},h=function(){var c=(0,r.useState)(),y=P(c,2),J=y[0],b=y[1],p=(0,r.useState)(!1),w=P(p,2),m=w[0],L=w[1],f=(0,r.useState)({current:1,pageSize:10}),u=P(f,2),O=u[0],K=u[1],Q=function(){var nn=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};L(!0),fetch("https://randomuser.me/api?".concat(k.default.stringify(e(nn)))).then(function(an){return an.json()}).then(function(an){var cn=an.results;b(cn),L(!1),K(N(N({},nn.pagination),{},{total:200}))})};(0,r.useEffect)(function(){Q({pagination:O})},[]);var j=function(nn,an,cn){Q(N({sortField:cn.field,sortOrder:cn.order,pagination:nn},an))};return r.default.createElement(g.Table,{columns:t,rowKey:function(nn){return nn.login.uuid},dataSource:J,pagination:O,loading:m,onChange:j})},a=h;return Z.createElement(a)}}},4134:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u7B80\u5355\u7684\u8868\u683C\uFF0C\u6700\u540E\u4E00\u5217\u662F\u5404\u79CD\u64CD\u4F5C\u3002"]],"en-US":[["p","Simple table with actions."]]},meta:{order:0,title:{"en-US":"Basic Usage","zh-CN":"\u57FA\u672C\u7528\u6CD5"},filename:"components/table/demo/basic.md",id:"components-table-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  tags<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> { tags }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;></span>
        {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> {
          let color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token punctuation">:</span> <span class="token string">'green'</span><span class="token comment" spellcheck="true">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> {
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token comment" spellcheck="true">;</span>
          }
          return <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Tag color<span class="token operator">=</span>{color} key<span class="token operator">=</span>{tag}<span class="token operator">></span>
              {tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}
            <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">)</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>Invite {record<span class="token punctuation">.</span>name}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  tags<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> <span class="token punctuation">{</span> tags <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">;</span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",key:"name",render:function(T){return g.default.createElement("a",null,T)}},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Tags",key:"tags",dataIndex:"tags",render:function(T,H){var E=H.tags;return g.default.createElement(g.default.Fragment,null,E.map(function(Y){var W=Y.length>5?"geekblue":"green";return Y==="loser"&&(W="volcano"),g.default.createElement(C.Tag,{color:W,key:Y},Y.toUpperCase())}))}},{title:"Action",key:"action",render:function(T,H){return g.default.createElement(C.Space,{size:"middle"},g.default.createElement("a",null,"Invite ",H.name),g.default.createElement("a",null,"Delete"))}}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z})},D=B;return Z.createElement(D)}}},4135:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u6DFB\u52A0\u8868\u683C\u8FB9\u6846\u7EBF\uFF0C\u9875\u5934\u548C\u9875\u811A\u3002"]],"en-US":[["p","Add border, title and footer for table."]]},meta:{order:12,title:{"en-US":"border, title and footer","zh-CN":"\u5E26\u8FB9\u6846"},filename:"components/table/demo/bordered.md",id:"components-table-demo-bordered"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  money<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Cash Assets'</span><span class="token punctuation">,</span>
    className<span class="token punctuation">:</span> <span class="token string">'column-money'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'money'</span><span class="token punctuation">,</span>
    align<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    money<span class="token punctuation">:</span> <span class="token string">'\uFFE5300,000.00'</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    money<span class="token punctuation">:</span> <span class="token string">'\uFFE51,256,000.00'</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    money<span class="token punctuation">:</span> <span class="token string">'\uFFE5120,000.00'</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span>{columns}
    dataSource<span class="token operator">=</span>{data}
    bordered
    title<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Header'</span>}
    footer<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Footer'</span>}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  money<span class="token operator">:</span> string<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Cash Assets'</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">'column-money'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'money'</span><span class="token punctuation">,</span>
    align<span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    money<span class="token operator">:</span> <span class="token string">'\uFFE5300,000.00'</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    money<span class="token operator">:</span> <span class="token string">'\uFFE51,256,000.00'</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    money<span class="token operator">:</span> <span class="token string">'\uFFE5120,000.00'</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">bordered</span>
    <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Header'</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Footer'</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Cash Assets'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">'column-money'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'money'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token string">'\uFFE5300,000.00'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token string">'\uFFE51,256,000.00'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">money</span><span class="token operator">:</span> <span class="token string">'\uFFE5120,000.00'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">bordered</span>
    <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Header'</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Footer'</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",render:function(T){return g.default.createElement("a",null,T)}},{title:"Cash Assets",className:"column-money",dataIndex:"money",align:"right"},{title:"Address",dataIndex:"address"}],z=[{key:"1",name:"John Brown",money:"\uFFE5300,000.00",address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",money:"\uFFE51,256,000.00",address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",money:"\uFFE5120,000.00",address:"Sidney No. 1 Lake Park"}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,bordered:!0,title:function(){return"Header"},footer:function(){return"Footer"}})},D=B;return Z.createElement(D)}}},4136:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8868\u5934\u53EA\u652F\u6301\u5217\u5408\u5E76\uFF0C\u4F7F\u7528 column \u91CC\u7684 colSpan \u8FDB\u884C\u8BBE\u7F6E\u3002"],["p","\u8868\u683C\u652F\u6301\u884C/\u5217\u5408\u5E76\uFF0C\u4F7F\u7528 render \u91CC\u7684\u5355\u5143\u683C\u5C5E\u6027 colSpan \u6216\u8005 rowSpan \u8BBE\u503C\u4E3A 0 \u65F6\uFF0C\u8BBE\u7F6E\u7684\u8868\u683C\u4E0D\u4F1A\u6E32\u67D3\u3002"]],"en-US":[["p","Table column title supports ",["code","colSpan"]," that set in ",["code","column"],"."],["p","Table cell supports ",["code","colSpan"]," and ",["code","rowSpan"]," that set in render return object. When each of them is set to ",["code","0"],", the cell will not be rendered."]]},meta:{order:15,version:"4.18.0",title:{"en-US":"colSpan and rowSpan","zh-CN":"\u8868\u683C\u884C/\u5217\u5408\u5E76"},filename:"components/table/demo/colspan-rowspan.md",id:"components-table-demo-colspan-rowspan"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  tel<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  phone<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token operator">/</span><span class="token operator">/</span> <span class="token keyword">In</span> the fifth row<span class="token punctuation">,</span> other columns are merged into first column
<span class="token operator">/</span><span class="token operator">/</span> by setting it's colSpan <span class="token keyword">to</span> be <span class="token number">0</span>
<span class="token keyword">const</span> sharedOnCell <span class="token operator">=</span> <span class="token punctuation">(</span>_<span class="token punctuation">:</span> DataType<span class="token punctuation">,</span> index<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span> {
    return { colSpan<span class="token punctuation">:</span> <span class="token number">0</span> }<span class="token comment" spellcheck="true">;</span>
  }

  return {}<span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
    onCell<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      colSpan<span class="token punctuation">:</span> <span class="token punctuation">(</span>index as number<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    onCell<span class="token punctuation">:</span> sharedOnCell<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Home phone'</span><span class="token punctuation">,</span>
    colSpan<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'tel'</span><span class="token punctuation">,</span>
    onCell<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span> {
        return { rowSpan<span class="token punctuation">:</span> <span class="token number">2</span> }<span class="token comment" spellcheck="true">;</span>
      }
      <span class="token operator">/</span><span class="token operator">/</span> These two are merged into above cell
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span> {
        return { rowSpan<span class="token punctuation">:</span> <span class="token number">0</span> }<span class="token comment" spellcheck="true">;</span>
      }
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">)</span> {
        return { colSpan<span class="token punctuation">:</span> <span class="token number">0</span> }<span class="token comment" spellcheck="true">;</span>
      }

      return {}<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Phone'</span><span class="token punctuation">,</span>
    colSpan<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'phone'</span><span class="token punctuation">,</span>
    onCell<span class="token punctuation">:</span> sharedOnCell<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    onCell<span class="token punctuation">:</span> sharedOnCell<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    tel<span class="token punctuation">:</span> <span class="token string">'0571-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token punctuation">:</span> <span class="token number">18889898989</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    tel<span class="token punctuation">:</span> <span class="token string">'0571-22098333'</span><span class="token punctuation">,</span>
    phone<span class="token punctuation">:</span> <span class="token number">18889898888</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    tel<span class="token punctuation">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    tel<span class="token punctuation">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jake White'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    tel<span class="token punctuation">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token punctuation">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Dublin No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} bordered <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  tel<span class="token operator">:</span> string<span class="token punctuation">;</span>
  phone<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// In the fifth row, other columns are merged into first column</span>
<span class="token comment">// by setting it's colSpan to be 0</span>
<span class="token keyword">const</span> <span class="token function-variable function">sharedOnCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span>_<span class="token operator">:</span> DataType<span class="token punctuation">,</span> index<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> colSpan<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      colSpan<span class="token operator">:</span> <span class="token punctuation">(</span>index <span class="token keyword">as</span> number<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    onCell<span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Home phone'</span><span class="token punctuation">,</span>
    colSpan<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'tel'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> rowSpan<span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// These two are merged into above cell</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> rowSpan<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> colSpan<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Phone'</span><span class="token punctuation">,</span>
    colSpan<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'phone'</span><span class="token punctuation">,</span>
    onCell<span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    onCell<span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    tel<span class="token operator">:</span> <span class="token string">'0571-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token operator">:</span> <span class="token number">18889898989</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    tel<span class="token operator">:</span> <span class="token string">'0571-22098333'</span><span class="token punctuation">,</span>
    phone<span class="token operator">:</span> <span class="token number">18889898888</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    tel<span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    tel<span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jake White'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    tel<span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    phone<span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Dublin No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token comment">// In the fifth row, other columns are merged into first column</span>
<span class="token comment">// by setting it's colSpan to be 0</span>
<span class="token keyword">const</span> <span class="token function-variable function">sharedOnCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">colSpan</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">colSpan</span><span class="token operator">:</span> index <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onCell</span><span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Home phone'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colSpan</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'tel'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">rowSpan</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token comment">// These two are merged into above cell</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">rowSpan</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">colSpan</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Phone'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colSpan</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'phone'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onCell</span><span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onCell</span><span class="token operator">:</span> sharedOnCell<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">'0571-22098909'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token number">18889898989</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">'0571-22098333'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token number">18889898888</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jake White'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tel</span><span class="token operator">:</span> <span class="token string">'0575-22098909'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">phone</span><span class="token operator">:</span> <span class="token number">18900010002</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Dublin No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=function(H,E){return E===4?{colSpan:0}:{}},z=[{title:"Name",dataIndex:"name",render:function(H){return g.default.createElement("a",null,H)},onCell:function(H,E){return{colSpan:E<4?1:5}}},{title:"Age",dataIndex:"age",onCell:r},{title:"Home phone",colSpan:2,dataIndex:"tel",onCell:function(H,E){return E===2?{rowSpan:2}:E===3?{rowSpan:0}:E===4?{colSpan:0}:{}}},{title:"Phone",colSpan:0,dataIndex:"phone",onCell:r},{title:"Address",dataIndex:"address",onCell:r}],B=[{key:"1",name:"John Brown",age:32,tel:"0571-22098909",phone:18889898989,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",tel:"0571-22098333",phone:18889898888,age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,tel:"0575-22098909",phone:18900010002,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:18,tel:"0575-22098909",phone:18900010002,address:"London No. 2 Lake Park"},{key:"5",name:"Jake White",age:18,tel:"0575-22098909",phone:18900010002,address:"Dublin No. 2 Lake Park"}],D=function(){return g.default.createElement(C.Table,{columns:z,dataSource:B,bordered:!0})},P=D;return Z.createElement(P)}}},4137:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","filterDropdown"]," \u81EA\u5B9A\u4E49\u7684\u5217\u7B5B\u9009\u529F\u80FD\uFF0C\u5E76\u5B9E\u73B0\u4E00\u4E2A\u641C\u7D22\u5217\u7684\u793A\u4F8B\u3002"],["p","\u7ED9\u51FD\u6570 ",["code","clearFilters"]," \u6DFB\u52A0 ",["code","boolean"]," \u7C7B\u578B\u53C2\u6570 ",["code","closeDropdown"],"\uFF0C\u662F\u5426\u5173\u95ED\u7B5B\u9009\u83DC\u5355\uFF0C\u9ED8\u8BA4\u4E3A ",["code","true"],"\u3002\u6DFB\u52A0 ",["code","boolean"]," \u7C7B\u578B\u53C2\u6570 ",["code","confirm"],"\uFF0C\u6E05\u9664\u7B5B\u9009\u65F6\u662F\u5426\u63D0\u4EA4\u5DF2\u9009\u9879\uFF0C\u9ED8\u8BA4 ",["code","true"],"\u3002"]],"en-US":[["p","Implement a customized column search example via ",["code","filterDropdown"],"."],["p","Add the ",["code","boolean"]," type parameter ",["code","closeDropdown"]," to the function ",["code","clearFilters"],". Whether to close the filter menu is ",["code","true"]," by default. Add the ",["code","boolean"]," type parameter ",["code","confirm"]," to clear whether to submit the option during filtering. The default is ",["code","true"],"."]]},meta:{order:9,title:{"en-US":"Customized filter panel","zh-CN":"\u81EA\u5B9A\u4E49\u7B5B\u9009\u83DC\u5355"},filename:"components/table/demo/custom-filter-panel.md",id:"components-table-demo-custom-filter-panel"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { SearchOutlined } from <span class="token string">'infra-design-icons'</span><span class="token comment" spellcheck="true">;</span>
import type { InputRef } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> ColumnType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { FilterConfirmProps } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import Highlighter from <span class="token string">'react-highlight-words'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

type DataIndex <span class="token operator">=</span> keyof DataType<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchText<span class="token punctuation">,</span> setSearchText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchedColumn<span class="token punctuation">,</span> setSearchedColumn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> searchInput <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>InputRef<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleSearch <span class="token operator">=</span> <span class="token punctuation">(</span>
    selectedKeys<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    confirm<span class="token punctuation">:</span> <span class="token punctuation">(</span>param<span class="token operator">?</span><span class="token punctuation">:</span> FilterConfirmProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> DataIndex<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleReset <span class="token operator">=</span> <span class="token punctuation">(</span>clearFilters<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">clearFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> getColumnSearchProps <span class="token operator">=</span> <span class="token punctuation">(</span>dataIndex<span class="token punctuation">:</span> DataIndex<span class="token punctuation">)</span><span class="token punctuation">:</span> ColumnType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    filterDropdown<span class="token punctuation">:</span> <span class="token punctuation">(</span>{ setSelectedKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> clearFilters }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ padding<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>
        <span class="token operator">&lt;</span>Input
          ref<span class="token operator">=</span>{searchInput}
          placeholder<span class="token operator">=</span>{\`Search \${dataIndex}\`}
          value<span class="token operator">=</span>{selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>}
          onChange<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>}
          onPressEnter<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys as string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span>}
          style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> display<span class="token punctuation">:</span> <span class="token string">'block'</span> }}
        <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>Space<span class="token operator">></span>
          <span class="token operator">&lt;</span>Button
            type<span class="token operator">=</span><span class="token string">"primary"</span>
            onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys as string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span>}
            icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>SearchOutlined <span class="token operator">/</span><span class="token operator">></span>}
            size<span class="token operator">=</span><span class="token string">"small"</span>
            style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token number">90</span> }}
          <span class="token operator">></span>
            Search
          <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span>Button
            onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> clearFilters <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token function">handleReset</span><span class="token punctuation">(</span>clearFilters<span class="token punctuation">)</span>}
            size<span class="token operator">=</span><span class="token string">"small"</span>
            style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token number">90</span> }}
          <span class="token operator">></span>
            Reset
          <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span>Button
            type<span class="token operator">=</span><span class="token string">"link"</span>
            size<span class="token operator">=</span><span class="token string">"small"</span>
            onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
              <span class="token function">confirm</span><span class="token punctuation">(</span>{ closeDropdown<span class="token punctuation">:</span> <span class="token boolean">false</span> }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
              <span class="token function">setSearchText</span><span class="token punctuation">(</span><span class="token punctuation">(</span>selectedKeys as string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
              <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
            }}
          <span class="token operator">></span>
            Filter
          <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    filterIcon<span class="token punctuation">:</span> <span class="token punctuation">(</span>filtered<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>SearchOutlined style<span class="token operator">=</span>{{ color<span class="token punctuation">:</span> filtered <span class="token operator">?</span> <span class="token string">'#2673dd'</span> <span class="token punctuation">:</span> undefined }} <span class="token operator">/</span><span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
      record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span>
        <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value as string<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    onFilterDropdownVisibleChange<span class="token punctuation">:</span> visible <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> {
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> searchInput<span class="token punctuation">.</span>current<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }
    }<span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span>
      searchedColumn <span class="token operator">==</span><span class="token operator">=</span> dataIndex <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Highlighter
          highlightStyle<span class="token operator">=</span>{{ backgroundColor<span class="token punctuation">:</span> <span class="token string">'#ffc069'</span><span class="token punctuation">,</span> padding<span class="token punctuation">:</span> <span class="token number">0</span> }}
          searchWords<span class="token operator">=</span>{<span class="token punctuation">[</span>searchText<span class="token punctuation">]</span>}
          autoEscape
          textToHighlight<span class="token operator">=</span>{text <span class="token operator">?</span> text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token string">''</span>}
        <span class="token operator">/</span><span class="token operator">></span>
      <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>
        text
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'address'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortDirections<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">,</span> <span class="token string">'ascend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> SearchOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> InputRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> ColumnType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> FilterConfirmProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Highlighter <span class="token keyword">from</span> <span class="token string">'react-highlight-words'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type DataIndex <span class="token operator">=</span> keyof DataType<span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchText<span class="token punctuation">,</span> setSearchText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchedColumn<span class="token punctuation">,</span> setSearchedColumn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> searchInput <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>InputRef<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
    selectedKeys<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">confirm</span><span class="token operator">:</span> <span class="token punctuation">(</span>param<span class="token operator">?</span><span class="token operator">:</span> FilterConfirmProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> DataIndex<span class="token punctuation">,</span>
  <span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleReset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">clearFilters</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">clearFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> getColumnSearchProps <span class="token operator">=</span> <span class="token punctuation">(</span>dataIndex<span class="token operator">:</span> DataIndex<span class="token punctuation">)</span><span class="token operator">:</span> ColumnType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">filterDropdown</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> setSelectedKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> clearFilters <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>
          <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>searchInput<span class="token punctuation">}</span></span>
          <span class="token attr-name">placeholder</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Search </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys <span class="token keyword">as</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span> display<span class="token operator">:</span> <span class="token string">'block'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys <span class="token keyword">as</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">90</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Search
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> clearFilters <span class="token operator">&amp;&amp;</span> <span class="token function">handleReset</span><span class="token punctuation">(</span>clearFilters<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">90</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Reset
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link<span class="token punctuation">"</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span> closeDropdown<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">setSearchText</span><span class="token punctuation">(</span><span class="token punctuation">(</span>selectedKeys <span class="token keyword">as</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Filter
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">filterIcon</span><span class="token operator">:</span> <span class="token punctuation">(</span>filtered<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> color<span class="token operator">:</span> filtered <span class="token operator">?</span> <span class="token string">'#2673dd'</span> <span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span>
      record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span>
        <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilterDropdownVisibleChange</span><span class="token operator">:</span> visible <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> searchInput<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span>
      searchedColumn <span class="token operator">===</span> dataIndex <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Highlighter</span></span>
          <span class="token attr-name">highlightStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> backgroundColor<span class="token operator">:</span> <span class="token string">'#ffc069'</span><span class="token punctuation">,</span> padding<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">searchWords</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>searchText<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">autoEscape</span>
          <span class="token attr-name">textToHighlight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>text <span class="token operator">?</span> text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        text
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'address'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortDirections<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">,</span> <span class="token string">'ascend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> SearchOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Highlighter <span class="token keyword">from</span> <span class="token string">'react-highlight-words'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchText<span class="token punctuation">,</span> setSearchText<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>searchedColumn<span class="token punctuation">,</span> setSearchedColumn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> searchInput <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSearch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleReset</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">clearFilters</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">clearFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSearchText</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">getColumnSearchProps</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dataIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">filterDropdown</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> setSelectedKeys<span class="token punctuation">,</span> selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> clearFilters <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>
          <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>searchInput<span class="token punctuation">}</span></span>
          <span class="token attr-name">placeholder</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Search </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>dataIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setSelectedKeys</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token punctuation">[</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
            <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">'block'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleSearch</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">,</span> confirm<span class="token punctuation">,</span> dataIndex<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
              <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Search
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> clearFilters <span class="token operator">&amp;&amp;</span> <span class="token function">handleReset</span><span class="token punctuation">(</span>clearFilters<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
              <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Reset
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link<span class="token punctuation">"</span></span>
            <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
            <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">closeDropdown</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">setSearchText</span><span class="token punctuation">(</span>selectedKeys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">setSearchedColumn</span><span class="token punctuation">(</span>dataIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            Filter
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">filterIcon</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">filtered</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SearchOutlined</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> filtered <span class="token operator">?</span> <span class="token string">'#2673dd'</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span>
      record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilterDropdownVisibleChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">visible</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>visible<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> searchInput<span class="token punctuation">.</span>current<span class="token operator">?.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span>
      searchedColumn <span class="token operator">===</span> dataIndex <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Highlighter</span></span>
          <span class="token attr-name">highlightStyle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">'#ffc069'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">searchWords</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>searchText<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">autoEscape</span>
          <span class="token attr-name">textToHighlight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>text <span class="token operator">?</span> text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        text
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'20%'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">getColumnSearchProps</span><span class="token punctuation">(</span><span class="token string">'address'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      <span class="token literal-property property">sortDirections</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">,</span> <span class="token string">'ascend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(n){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(c){return typeof c}:function(c){return c&&typeof Symbol=="function"&&c.constructor===Symbol&&c!==Symbol.prototype?"symbol":typeof c},C(n)}var g=l(26),k=l(12),r=P(l(0)),z=B(l(4138));function B(n){return n&&n.__esModule?n:{default:n}}function D(n){if(typeof WeakMap!="function")return null;var c=new WeakMap,y=new WeakMap;return(D=function(b){return b?y:c})(n)}function P(n,c){if(!c&&n&&n.__esModule)return n;if(n===null||C(n)!=="object"&&typeof n!="function")return{default:n};var y=D(c);if(y&&y.has(n))return y.get(n);var J={},b=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var p in n)if(p!=="default"&&Object.prototype.hasOwnProperty.call(n,p)){var w=b?Object.getOwnPropertyDescriptor(n,p):null;w&&(w.get||w.set)?Object.defineProperty(J,p,w):J[p]=n[p]}return J.default=n,y&&y.set(n,J),J}function T(n,c){var y=Object.keys(n);if(Object.getOwnPropertySymbols){var J=Object.getOwnPropertySymbols(n);c&&(J=J.filter(function(b){return Object.getOwnPropertyDescriptor(n,b).enumerable})),y.push.apply(y,J)}return y}function H(n){for(var c=1;c<arguments.length;c++){var y=arguments[c]!=null?arguments[c]:{};c%2?T(Object(y),!0).forEach(function(J){E(n,J,y[J])}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(y)):T(Object(y)).forEach(function(J){Object.defineProperty(n,J,Object.getOwnPropertyDescriptor(y,J))})}return n}function E(n,c,y){return c in n?Object.defineProperty(n,c,{value:y,enumerable:!0,configurable:!0,writable:!0}):n[c]=y,n}function Y(n,c){return t(n)||R(n,c)||S(n,c)||W()}function W(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function S(n,c){if(!!n){if(typeof n=="string")return N(n,c);var y=Object.prototype.toString.call(n).slice(8,-1);if(y==="Object"&&n.constructor&&(y=n.constructor.name),y==="Map"||y==="Set")return Array.from(n);if(y==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(y))return N(n,c)}}function N(n,c){(c==null||c>n.length)&&(c=n.length);for(var y=0,J=new Array(c);y<c;y++)J[y]=n[y];return J}function R(n,c){var y=n==null?null:typeof Symbol!="undefined"&&n[Symbol.iterator]||n["@@iterator"];if(y!=null){var J=[],b=!0,p=!1,w,m;try{for(y=y.call(n);!(b=(w=y.next()).done)&&(J.push(w.value),!(c&&J.length===c));b=!0);}catch(L){p=!0,m=L}finally{try{!b&&y.return!=null&&y.return()}finally{if(p)throw m}}return J}}function t(n){if(Array.isArray(n))return n}var e=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Joe Black",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Jim Green",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],h=function(){var c=(0,r.useState)(""),y=Y(c,2),J=y[0],b=y[1],p=(0,r.useState)(""),w=Y(p,2),m=w[0],L=w[1],f=(0,r.useRef)(null),u=function(G,nn,an){nn(),b(G[0]),L(an)},O=function(G){G(),b("")},K=function(G){return{filterDropdown:function(an){var cn=an.setSelectedKeys,mn=an.selectedKeys,gn=an.confirm,fn=an.clearFilters;return r.default.createElement("div",{style:{padding:8}},r.default.createElement(k.Input,{ref:f,placeholder:"Search ".concat(G),value:mn[0],onChange:function(wn){return cn(wn.target.value?[wn.target.value]:[])},onPressEnter:function(){return u(mn,gn,G)},style:{marginBottom:8,display:"block"}}),r.default.createElement(k.Space,null,r.default.createElement(k.Button,{type:"primary",onClick:function(){return u(mn,gn,G)},icon:r.default.createElement(g.SearchOutlined,null),size:"small",style:{width:90}},"Search"),r.default.createElement(k.Button,{onClick:function(){return fn&&O(fn)},size:"small",style:{width:90}},"Reset"),r.default.createElement(k.Button,{type:"link",size:"small",onClick:function(){gn({closeDropdown:!1}),b(mn[0]),L(G)}},"Filter")))},filterIcon:function(an){return r.default.createElement(g.SearchOutlined,{style:{color:an?"#2673dd":void 0}})},onFilter:function(an,cn){return cn[G].toString().toLowerCase().includes(an.toLowerCase())},onFilterDropdownVisibleChange:function(an){an&&setTimeout(function(){var cn;return(cn=f.current)===null||cn===void 0?void 0:cn.select()},100)},render:function(an){return m===G?r.default.createElement(z.default,{highlightStyle:{backgroundColor:"#ffc069",padding:0},searchWords:[J],autoEscape:!0,textToHighlight:an?an.toString():""}):an}}},Q=[H({title:"Name",dataIndex:"name",key:"name",width:"30%"},K("name")),H({title:"Age",dataIndex:"age",key:"age",width:"20%"},K("age")),H(H({title:"Address",dataIndex:"address",key:"address"},K("address")),{},{sorter:function(G,nn){return G.address.length-nn.address.length},sortDirections:["descend","ascend"]})];return r.default.createElement(k.Table,{columns:Q,dataSource:e})},a=h;return Z.createElement(a)}}},4138:function(kn,dn,l){kn.exports=function(_){var Z={};function U(C){if(Z[C])return Z[C].exports;var g=Z[C]={exports:{},id:C,loaded:!1};return _[C].call(g.exports,g,g.exports,U),g.loaded=!0,g.exports}return U.m=_,U.c=Z,U.p="",U(0)}([function(_,Z,U){_.exports=U(1)},function(_,Z,U){"use strict";Object.defineProperty(Z,"__esModule",{value:!0});function C(r){return r&&r.__esModule?r:{default:r}}var g=U(2),k=C(g);Z.default=k.default,_.exports=Z.default},function(_,Z,U){"use strict";Object.defineProperty(Z,"__esModule",{value:!0});var C=Object.assign||function(E){for(var Y=1;Y<arguments.length;Y++){var W=arguments[Y];for(var S in W)Object.prototype.hasOwnProperty.call(W,S)&&(E[S]=W[S])}return E};Z.default=H;function g(E){return E&&E.__esModule?E:{default:E}}function k(E,Y){var W={};for(var S in E)Y.indexOf(S)>=0||!Object.prototype.hasOwnProperty.call(E,S)||(W[S]=E[S]);return W}var r=U(3),z=U(4),B=g(z),D=U(14),P=U(15),T=g(P);H.propTypes={activeClassName:B.default.string,activeIndex:B.default.number,activeStyle:B.default.object,autoEscape:B.default.bool,className:B.default.string,findChunks:B.default.func,highlightClassName:B.default.oneOfType([B.default.object,B.default.string]),highlightStyle:B.default.object,highlightTag:B.default.oneOfType([B.default.node,B.default.func,B.default.string]),sanitize:B.default.func,searchWords:B.default.arrayOf(B.default.oneOfType([B.default.string,B.default.instanceOf(RegExp)])).isRequired,textToHighlight:B.default.string.isRequired,unhighlightClassName:B.default.string,unhighlightStyle:B.default.object};function H(E){var Y=E.activeClassName,W=Y===void 0?"":Y,S=E.activeIndex,N=S===void 0?-1:S,R=E.activeStyle,t=E.autoEscape,e=E.caseSensitive,h=e===void 0?!1:e,a=E.className,n=E.findChunks,c=E.highlightClassName,y=c===void 0?"":c,J=E.highlightStyle,b=J===void 0?{}:J,p=E.highlightTag,w=p===void 0?"mark":p,m=E.sanitize,L=E.searchWords,f=E.textToHighlight,u=E.unhighlightClassName,O=u===void 0?"":u,K=E.unhighlightStyle,Q=k(E,["activeClassName","activeIndex","activeStyle","autoEscape","caseSensitive","className","findChunks","highlightClassName","highlightStyle","highlightTag","sanitize","searchWords","textToHighlight","unhighlightClassName","unhighlightStyle"]),j=(0,r.findAll)({autoEscape:t,caseSensitive:h,findChunks:n,sanitize:m,searchWords:L,textToHighlight:f}),G=w,nn=-1,an="",cn=void 0,mn=function(yn){var wn={};for(var Cn in yn)wn[Cn.toLowerCase()]=yn[Cn];return wn},gn=(0,T.default)(mn);return(0,D.createElement)("span",C({className:a},Q,{children:j.map(function(fn,yn){var wn=f.substr(fn.start,fn.end-fn.start);if(fn.highlight){nn++;var Cn=void 0;typeof y=="object"?h?Cn=y[wn]:(y=gn(y),Cn=y[wn.toLowerCase()]):Cn=y;var Pn=nn===+N;an=Cn+" "+(Pn?W:""),cn=Pn===!0&&R!=null?Object.assign({},b,R):b;var Ln={children:wn,className:an,key:yn,style:cn};return typeof G!="string"&&(Ln.highlightIndex=nn),(0,D.createElement)(G,Ln)}else return(0,D.createElement)("span",{children:wn,className:O,key:yn,style:K})})}))}_.exports=Z.default},function(_,Z){_.exports=function(U){var C={};function g(k){if(C[k])return C[k].exports;var r=C[k]={exports:{},id:k,loaded:!1};return U[k].call(r.exports,r,r.exports,g),r.loaded=!0,r.exports}return g.m=U,g.c=C,g.p="",g(0)}([function(U,C,g){U.exports=g(1)},function(U,C,g){"use strict";Object.defineProperty(C,"__esModule",{value:!0});var k=g(2);Object.defineProperty(C,"combineChunks",{enumerable:!0,get:function(){return k.combineChunks}}),Object.defineProperty(C,"fillInChunks",{enumerable:!0,get:function(){return k.fillInChunks}}),Object.defineProperty(C,"findAll",{enumerable:!0,get:function(){return k.findAll}}),Object.defineProperty(C,"findChunks",{enumerable:!0,get:function(){return k.findChunks}})},function(U,C){"use strict";Object.defineProperty(C,"__esModule",{value:!0});var g=C.findAll=function(T){var H=T.autoEscape,E=T.caseSensitive,Y=E===void 0?!1:E,W=T.findChunks,S=W===void 0?r:W,N=T.sanitize,R=T.searchWords,t=T.textToHighlight;return z({chunksToHighlight:k({chunks:S({autoEscape:H,caseSensitive:Y,sanitize:N,searchWords:R,textToHighlight:t})}),totalLength:t?t.length:0})},k=C.combineChunks=function(T){var H=T.chunks;return H=H.sort(function(E,Y){return E.start-Y.start}).reduce(function(E,Y){if(E.length===0)return[Y];var W=E.pop();if(Y.start<=W.end){var S=Math.max(W.end,Y.end);E.push({start:W.start,end:S})}else E.push(W,Y);return E},[]),H},r=function(T){var H=T.autoEscape,E=T.caseSensitive,Y=T.sanitize,W=Y===void 0?B:Y,S=T.searchWords,N=T.textToHighlight;return N=W(N),S.filter(function(R){return R}).reduce(function(R,t){t=W(t),H&&(t=D(t));for(var e=new RegExp(t,E?"g":"gi"),h=void 0;h=e.exec(N);){var a=h.index,n=e.lastIndex;n>a&&R.push({start:a,end:n}),h.index==e.lastIndex&&e.lastIndex++}return R},[])};C.findChunks=r;var z=C.fillInChunks=function(T){var H=T.chunksToHighlight,E=T.totalLength,Y=[],W=function(R,t,e){t-R>0&&Y.push({start:R,end:t,highlight:e})};if(H.length===0)W(0,E,!1);else{var S=0;H.forEach(function(N){W(S,N.start,!1),W(N.start,N.end,!0),S=N.end}),W(S,E,!1)}return Y};function B(P){return P}function D(P){return P.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}}])},function(_,Z,U){(function(C){if(C.env.NODE_ENV!=="production"){var g=typeof Symbol=="function"&&Symbol.for&&Symbol.for("react.element")||60103,k=function(z){return typeof z=="object"&&z!==null&&z.$$typeof===g},r=!0;_.exports=U(6)(k,r)}else _.exports=U(13)()}).call(Z,U(5))},function(_,Z){var U=_.exports={},C,g;function k(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}(function(){try{typeof setTimeout=="function"?C=setTimeout:C=k}catch(N){C=k}try{typeof clearTimeout=="function"?g=clearTimeout:g=r}catch(N){g=r}})();function z(N){if(C===setTimeout)return setTimeout(N,0);if((C===k||!C)&&setTimeout)return C=setTimeout,setTimeout(N,0);try{return C(N,0)}catch(R){try{return C.call(null,N,0)}catch(t){return C.call(this,N,0)}}}function B(N){if(g===clearTimeout)return clearTimeout(N);if((g===r||!g)&&clearTimeout)return g=clearTimeout,clearTimeout(N);try{return g(N)}catch(R){try{return g.call(null,N)}catch(t){return g.call(this,N)}}}var D=[],P=!1,T,H=-1;function E(){!P||!T||(P=!1,T.length?D=T.concat(D):H=-1,D.length&&Y())}function Y(){if(!P){var N=z(E);P=!0;for(var R=D.length;R;){for(T=D,D=[];++H<R;)T&&T[H].run();H=-1,R=D.length}T=null,P=!1,B(N)}}U.nextTick=function(N){var R=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)R[t-1]=arguments[t];D.push(new W(N,R)),D.length===1&&!P&&z(Y)};function W(N,R){this.fun=N,this.array=R}W.prototype.run=function(){this.fun.apply(null,this.array)},U.title="browser",U.browser=!0,U.env={},U.argv=[],U.version="",U.versions={};function S(){}U.on=S,U.addListener=S,U.once=S,U.off=S,U.removeListener=S,U.removeAllListeners=S,U.emit=S,U.prependListener=S,U.prependOnceListener=S,U.listeners=function(N){return[]},U.binding=function(N){throw new Error("process.binding is not supported")},U.cwd=function(){return"/"},U.chdir=function(N){throw new Error("process.chdir is not supported")},U.umask=function(){return 0}},function(_,Z,U){(function(C){"use strict";var g=U(7),k=U(8),r=U(9),z=U(10),B=U(11),D=U(12);_.exports=function(P,T){var H=typeof Symbol=="function"&&Symbol.iterator,E="@@iterator";function Y(j){var G=j&&(H&&j[H]||j[E]);if(typeof G=="function")return G}var W="<<anonymous>>",S={array:e("array"),bool:e("boolean"),func:e("function"),number:e("number"),object:e("object"),string:e("string"),symbol:e("symbol"),any:h(),arrayOf:a,element:n(),instanceOf:c,node:p(),objectOf:J,oneOf:y,oneOfType:b,shape:w,exact:m};function N(j,G){return j===G?j!==0||1/j===1/G:j!==j&&G!==G}function R(j){this.message=j,this.stack=""}R.prototype=Error.prototype;function t(j){if(C.env.NODE_ENV!=="production")var G={},nn=0;function an(mn,gn,fn,yn,wn,Cn,Pn){if(yn=yn||W,Cn=Cn||fn,Pn!==B){if(T)k(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");else if(C.env.NODE_ENV!=="production"&&typeof console!="undefined"){var Ln=yn+":"+fn;!G[Ln]&&nn<3&&(r(!1,"You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.",Cn,yn),G[Ln]=!0,nn++)}}return gn[fn]==null?mn?gn[fn]===null?new R("The "+wn+" `"+Cn+"` is marked as required "+("in `"+yn+"`, but its value is `null`.")):new R("The "+wn+" `"+Cn+"` is marked as required in "+("`"+yn+"`, but its value is `undefined`.")):null:j(gn,fn,yn,wn,Cn)}var cn=an.bind(null,!1);return cn.isRequired=an.bind(null,!0),cn}function e(j){function G(nn,an,cn,mn,gn,fn){var yn=nn[an],wn=u(yn);if(wn!==j){var Cn=O(yn);return new R("Invalid "+mn+" `"+gn+"` of type "+("`"+Cn+"` supplied to `"+cn+"`, expected ")+("`"+j+"`."))}return null}return t(G)}function h(){return t(g.thatReturnsNull)}function a(j){function G(nn,an,cn,mn,gn){if(typeof j!="function")return new R("Property `"+gn+"` of component `"+cn+"` has invalid PropType notation inside arrayOf.");var fn=nn[an];if(!Array.isArray(fn)){var yn=u(fn);return new R("Invalid "+mn+" `"+gn+"` of type "+("`"+yn+"` supplied to `"+cn+"`, expected an array."))}for(var wn=0;wn<fn.length;wn++){var Cn=j(fn,wn,cn,mn,gn+"["+wn+"]",B);if(Cn instanceof Error)return Cn}return null}return t(G)}function n(){function j(G,nn,an,cn,mn){var gn=G[nn];if(!P(gn)){var fn=u(gn);return new R("Invalid "+cn+" `"+mn+"` of type "+("`"+fn+"` supplied to `"+an+"`, expected a single ReactElement."))}return null}return t(j)}function c(j){function G(nn,an,cn,mn,gn){if(!(nn[an]instanceof j)){var fn=j.name||W,yn=Q(nn[an]);return new R("Invalid "+mn+" `"+gn+"` of type "+("`"+yn+"` supplied to `"+cn+"`, expected ")+("instance of `"+fn+"`."))}return null}return t(G)}function y(j){if(!Array.isArray(j))return C.env.NODE_ENV!=="production"&&r(!1,"Invalid argument supplied to oneOf, expected an instance of array."),g.thatReturnsNull;function G(nn,an,cn,mn,gn){for(var fn=nn[an],yn=0;yn<j.length;yn++)if(N(fn,j[yn]))return null;var wn=JSON.stringify(j);return new R("Invalid "+mn+" `"+gn+"` of value `"+fn+"` "+("supplied to `"+cn+"`, expected one of "+wn+"."))}return t(G)}function J(j){function G(nn,an,cn,mn,gn){if(typeof j!="function")return new R("Property `"+gn+"` of component `"+cn+"` has invalid PropType notation inside objectOf.");var fn=nn[an],yn=u(fn);if(yn!=="object")return new R("Invalid "+mn+" `"+gn+"` of type "+("`"+yn+"` supplied to `"+cn+"`, expected an object."));for(var wn in fn)if(fn.hasOwnProperty(wn)){var Cn=j(fn,wn,cn,mn,gn+"."+wn,B);if(Cn instanceof Error)return Cn}return null}return t(G)}function b(j){if(!Array.isArray(j))return C.env.NODE_ENV!=="production"&&r(!1,"Invalid argument supplied to oneOfType, expected an instance of array."),g.thatReturnsNull;for(var G=0;G<j.length;G++){var nn=j[G];if(typeof nn!="function")return r(!1,"Invalid argument supplied to oneOfType. Expected an array of check functions, but received %s at index %s.",K(nn),G),g.thatReturnsNull}function an(cn,mn,gn,fn,yn){for(var wn=0;wn<j.length;wn++){var Cn=j[wn];if(Cn(cn,mn,gn,fn,yn,B)==null)return null}return new R("Invalid "+fn+" `"+yn+"` supplied to "+("`"+gn+"`."))}return t(an)}function p(){function j(G,nn,an,cn,mn){return L(G[nn])?null:new R("Invalid "+cn+" `"+mn+"` supplied to "+("`"+an+"`, expected a ReactNode."))}return t(j)}function w(j){function G(nn,an,cn,mn,gn){var fn=nn[an],yn=u(fn);if(yn!=="object")return new R("Invalid "+mn+" `"+gn+"` of type `"+yn+"` "+("supplied to `"+cn+"`, expected `object`."));for(var wn in j){var Cn=j[wn];if(!!Cn){var Pn=Cn(fn,wn,cn,mn,gn+"."+wn,B);if(Pn)return Pn}}return null}return t(G)}function m(j){function G(nn,an,cn,mn,gn){var fn=nn[an],yn=u(fn);if(yn!=="object")return new R("Invalid "+mn+" `"+gn+"` of type `"+yn+"` "+("supplied to `"+cn+"`, expected `object`."));var wn=z({},nn[an],j);for(var Cn in wn){var Pn=j[Cn];if(!Pn)return new R("Invalid "+mn+" `"+gn+"` key `"+Cn+"` supplied to `"+cn+"`.\nBad object: "+JSON.stringify(nn[an],null,"  ")+`
Valid keys: `+JSON.stringify(Object.keys(j),null,"  "));var Ln=Pn(fn,Cn,cn,mn,gn+"."+Cn,B);if(Ln)return Ln}return null}return t(G)}function L(j){switch(typeof j){case"number":case"string":case"undefined":return!0;case"boolean":return!j;case"object":if(Array.isArray(j))return j.every(L);if(j===null||P(j))return!0;var G=Y(j);if(G){var nn=G.call(j),an;if(G!==j.entries){for(;!(an=nn.next()).done;)if(!L(an.value))return!1}else for(;!(an=nn.next()).done;){var cn=an.value;if(cn&&!L(cn[1]))return!1}}else return!1;return!0;default:return!1}}function f(j,G){return j==="symbol"||G["@@toStringTag"]==="Symbol"||typeof Symbol=="function"&&G instanceof Symbol}function u(j){var G=typeof j;return Array.isArray(j)?"array":j instanceof RegExp?"object":f(G,j)?"symbol":G}function O(j){if(typeof j=="undefined"||j===null)return""+j;var G=u(j);if(G==="object"){if(j instanceof Date)return"date";if(j instanceof RegExp)return"regexp"}return G}function K(j){var G=O(j);switch(G){case"array":case"object":return"an "+G;case"boolean":case"date":case"regexp":return"a "+G;default:return G}}function Q(j){return!j.constructor||!j.constructor.name?W:j.constructor.name}return S.checkPropTypes=D,S.PropTypes=S,S}}).call(Z,U(5))},function(_,Z){"use strict";function U(g){return function(){return g}}var C=function(){};C.thatReturns=U,C.thatReturnsFalse=U(!1),C.thatReturnsTrue=U(!0),C.thatReturnsNull=U(null),C.thatReturnsThis=function(){return this},C.thatReturnsArgument=function(g){return g},_.exports=C},function(_,Z,U){(function(C){"use strict";var g=function(z){};C.env.NODE_ENV!=="production"&&(g=function(z){if(z===void 0)throw new Error("invariant requires an error message argument")});function k(r,z,B,D,P,T,H,E){if(g(z),!r){var Y;if(z===void 0)Y=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var W=[B,D,P,T,H,E],S=0;Y=new Error(z.replace(/%s/g,function(){return W[S++]})),Y.name="Invariant Violation"}throw Y.framesToPop=1,Y}}_.exports=k}).call(Z,U(5))},function(_,Z,U){(function(C){"use strict";var g=U(7),k=g;if(C.env.NODE_ENV!=="production"){var r=function(B){for(var D=arguments.length,P=Array(D>1?D-1:0),T=1;T<D;T++)P[T-1]=arguments[T];var H=0,E="Warning: "+B.replace(/%s/g,function(){return P[H++]});typeof console!="undefined"&&console.error(E);try{throw new Error(E)}catch(Y){}};k=function(B,D){if(D===void 0)throw new Error("`warning(condition, format, ...args)` requires a warning message argument");if(D.indexOf("Failed Composite propType: ")!==0&&!B){for(var P=arguments.length,T=Array(P>2?P-2:0),H=2;H<P;H++)T[H-2]=arguments[H];r.apply(void 0,[D].concat(T))}}}_.exports=k}).call(Z,U(5))},function(_,Z){/*
object-assign
(c) Sindre Sorhus
@license MIT
*/"use strict";var U=Object.getOwnPropertySymbols,C=Object.prototype.hasOwnProperty,g=Object.prototype.propertyIsEnumerable;function k(z){if(z==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(z)}function r(){try{if(!Object.assign)return!1;var z=new String("abc");if(z[5]="de",Object.getOwnPropertyNames(z)[0]==="5")return!1;for(var B={},D=0;D<10;D++)B["_"+String.fromCharCode(D)]=D;var P=Object.getOwnPropertyNames(B).map(function(H){return B[H]});if(P.join("")!=="0123456789")return!1;var T={};return"abcdefghijklmnopqrst".split("").forEach(function(H){T[H]=H}),Object.keys(Object.assign({},T)).join("")==="abcdefghijklmnopqrst"}catch(H){return!1}}_.exports=r()?Object.assign:function(z,B){for(var D,P=k(z),T,H=1;H<arguments.length;H++){D=Object(arguments[H]);for(var E in D)C.call(D,E)&&(P[E]=D[E]);if(U){T=U(D);for(var Y=0;Y<T.length;Y++)g.call(D,T[Y])&&(P[T[Y]]=D[T[Y]])}}return P}},function(_,Z){"use strict";var U="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";_.exports=U},function(_,Z,U){(function(C){"use strict";if(C.env.NODE_ENV!=="production")var g=U(8),k=U(9),r=U(11),z={};function B(D,P,T,H,E){if(C.env.NODE_ENV!=="production"){for(var Y in D)if(D.hasOwnProperty(Y)){var W;try{g(typeof D[Y]=="function","%s: %s type `%s` is invalid; it must be a function, usually from the `prop-types` package, but received `%s`.",H||"React class",T,Y,typeof D[Y]),W=D[Y](P,Y,H,T,null,r)}catch(N){W=N}if(k(!W||W instanceof Error,"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",H||"React class",T,Y,typeof W),W instanceof Error&&!(W.message in z)){z[W.message]=!0;var S=E?E():"";k(!1,"Failed %s type: %s%s",T,W.message,S!=null?S:"")}}}}_.exports=B}).call(Z,U(5))},function(_,Z,U){"use strict";var C=U(7),g=U(8),k=U(11);_.exports=function(){function r(D,P,T,H,E,Y){Y!==k&&g(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}r.isRequired=r;function z(){return r}var B={array:r,bool:r,func:r,number:r,object:r,string:r,symbol:r,any:r,arrayOf:z,element:r,instanceOf:z,node:r,objectOf:z,oneOf:z,oneOfType:z,shape:z,exact:z};return B.checkPropTypes=C,B.PropTypes=B,B}},function(_,Z){_.exports=l(0)},function(_,Z){"use strict";var U=function(k,r){return k===r};function C(g){var k=arguments.length>1&&arguments[1]!==void 0?arguments[1]:U,r=void 0,z=[],B=void 0,D=!1,P=function(E,Y){return k(E,z[Y])},T=function(){for(var E=arguments.length,Y=Array(E),W=0;W<E;W++)Y[W]=arguments[W];return D&&r===this&&Y.length===z.length&&Y.every(P)||(D=!0,r=this,z=Y,B=g.apply(this,Y)),B};return T}_.exports=C}])},4139:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4E5F\u53EF\u4EE5\u4F7F\u7528 ",["a",{title:null,href:"https://github.com/clauderic/react-sortable-hoc"},"react-sortable-hoc"]," \u6765\u5B9E\u73B0\u4E00\u4E2A\u62D6\u62FD\u64CD\u4F5C\u5217\u3002"]],"en-US":[["p","Alternatively you can implement drag sorting with handler using ",["a",{title:null,href:"https://github.com/clauderic/react-sortable-hoc"},"react-sortable-hoc"],"."]]},meta:{order:27,title:{"en-US":"Drag sorting with handler","zh-CN":"\u62D6\u62FD\u624B\u67C4\u5217"},filename:"components/table/demo/drag-sorting-handler.md",id:"components-table-demo-drag-sorting-handler"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { arrayMoveImmutable } from <span class="token string">'array-move'</span><span class="token comment" spellcheck="true">;</span>
import { MenuOutlined } from <span class="token string">'infra-design-icons'</span><span class="token comment" spellcheck="true">;</span>
import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import type { SortableContainerProps<span class="token punctuation">,</span> SortEnd } from <span class="token string">'react-sortable-hoc'</span><span class="token comment" spellcheck="true">;</span>
import { SortableContainer<span class="token punctuation">,</span> SortableElement<span class="token punctuation">,</span> SortableHandle } from <span class="token string">'react-sortable-hoc'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> DragHandle <span class="token operator">=</span> <span class="token function">SortableHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>MenuOutlined style<span class="token operator">=</span>{{ cursor<span class="token punctuation">:</span> <span class="token string">'grab'</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">'#999'</span> }} <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Sort'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'sort'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    className<span class="token punctuation">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>DragHandle <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    className<span class="token punctuation">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> SortableItem <span class="token operator">=</span> <span class="token function">SortableElement</span><span class="token punctuation">(</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>tr {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">const</span> SortableBody <span class="token operator">=</span> <span class="token function">SortableContainer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>props<span class="token punctuation">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLTableSectionElement<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>tbody {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onSortEnd <span class="token operator">=</span> <span class="token punctuation">(</span>{ oldIndex<span class="token punctuation">,</span> newIndex }<span class="token punctuation">:</span> SortEnd<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldIndex !<span class="token operator">==</span> newIndex<span class="token punctuation">)</span> {
      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>el<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> !!el<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Sorted items: '</span><span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> DraggableContainer <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">:</span> SortableContainerProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>SortableBody
      useDragHandle
      disableAutoscroll
      helperClass<span class="token operator">=</span><span class="token string">"row-dragging"</span>
      onSortEnd<span class="token operator">=</span>{onSortEnd}
      {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> DraggableBodyRow<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ className<span class="token punctuation">,</span> style<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token operator">/</span><span class="token operator">/</span> function findIndex base on Table rowKey props <span class="token operator">and</span> should always be a right array index
    <span class="token keyword">const</span> index <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>x <span class="token operator">=</span><span class="token operator">></span> x<span class="token punctuation">.</span>index <span class="token operator">==</span><span class="token operator">=</span> restProps<span class="token punctuation">[</span><span class="token string">'data-row-key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    return <span class="token operator">&lt;</span>SortableItem index<span class="token operator">=</span>{index} {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Table
      pagination<span class="token operator">=</span>{<span class="token boolean">false</span>}
      dataSource<span class="token operator">=</span>{dataSource}
      columns<span class="token operator">=</span>{columns}
      rowKey<span class="token operator">=</span><span class="token string">"index"</span>
      components<span class="token operator">=</span>{{
        body<span class="token punctuation">:</span> {
          wrapper<span class="token punctuation">:</span> DraggableContainer<span class="token punctuation">,</span>
          row<span class="token punctuation">:</span> DraggableBodyRow<span class="token punctuation">,</span>
        }<span class="token punctuation">,</span>
      }}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'array-move'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MenuOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> SortableContainerProps<span class="token punctuation">,</span> SortEnd <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-sortable-hoc'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SortableContainer<span class="token punctuation">,</span> SortableElement<span class="token punctuation">,</span> SortableHandle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-sortable-hoc'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  index<span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> DragHandle <span class="token operator">=</span> <span class="token function">SortableHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuOutlined</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> cursor<span class="token operator">:</span> <span class="token string">'grab'</span><span class="token punctuation">,</span> color<span class="token operator">:</span> <span class="token string">'#999'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Sort'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'sort'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragHandle</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    index<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> SortableItem <span class="token operator">=</span> <span class="token function">SortableElement</span><span class="token punctuation">(</span><span class="token punctuation">(</span>props<span class="token operator">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> SortableBody <span class="token operator">=</span> <span class="token function">SortableContainer</span><span class="token punctuation">(</span><span class="token punctuation">(</span>props<span class="token operator">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLTableSectionElement<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex <span class="token punctuation">}</span><span class="token operator">:</span> SortEnd<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldIndex <span class="token operator">!==</span> newIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span>el<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span><span class="token operator">!</span>el<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Sorted items: '</span><span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">DraggableContainer</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> SortableContainerProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SortableBody</span></span>
      <span class="token attr-name">useDragHandle</span>
      <span class="token attr-name">disableAutoscroll</span>
      <span class="token attr-name">helperClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row-dragging<span class="token punctuation">"</span></span>
      <span class="token attr-name">onSortEnd</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSortEnd<span class="token punctuation">}</span></span>
      <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> DraggableBodyRow<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> className<span class="token punctuation">,</span> style<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// function findIndex base on Table rowKey props and should always be a right array index</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>x <span class="token operator">=></span> x<span class="token punctuation">.</span>index <span class="token operator">===</span> restProps<span class="token punctuation">[</span><span class="token string">'data-row-key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SortableItem</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>
      <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        body<span class="token operator">:</span> <span class="token punctuation">{</span>
          wrapper<span class="token operator">:</span> DraggableContainer<span class="token punctuation">,</span>
          row<span class="token operator">:</span> DraggableBodyRow<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> arrayMoveImmutable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'array-move'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> MenuOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> SortableContainer<span class="token punctuation">,</span> SortableElement<span class="token punctuation">,</span> SortableHandle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-sortable-hoc'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> DragHandle <span class="token operator">=</span> <span class="token function">SortableHandle</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">MenuOutlined</span></span>
    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">'grab'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'#999'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Sort'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'sort'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
    <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragHandle</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">'drag-visible'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">index</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> SortableItem <span class="token operator">=</span> <span class="token function">SortableElement</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> SortableBody <span class="token operator">=</span> <span class="token function">SortableContainer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSortEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> oldIndex<span class="token punctuation">,</span> newIndex <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldIndex <span class="token operator">!==</span> newIndex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token function">arrayMoveImmutable</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> oldIndex<span class="token punctuation">,</span> newIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
        <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span><span class="token operator">!</span>el<span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Sorted items: '</span><span class="token punctuation">,</span> newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">DraggableContainer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SortableBody</span></span>
      <span class="token attr-name">useDragHandle</span>
      <span class="token attr-name">disableAutoscroll</span>
      <span class="token attr-name">helperClass</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row-dragging<span class="token punctuation">"</span></span>
      <span class="token attr-name">onSortEnd</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSortEnd<span class="token punctuation">}</span></span>
      <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">DraggableBodyRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> className<span class="token punctuation">,</span> style<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token comment">// function findIndex base on Table rowKey props and should always be a right array index</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=></span> x<span class="token punctuation">.</span>index <span class="token operator">===</span> restProps<span class="token punctuation">[</span><span class="token string">'data-row-key'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">SortableItem</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>
      <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">wrapper</span><span class="token operator">:</span> DraggableContainer<span class="token punctuation">,</span>
          <span class="token literal-property property">row</span><span class="token operator">:</span> DraggableBodyRow<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(p){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(w){return typeof w}:function(w){return w&&typeof Symbol=="function"&&w.constructor===Symbol&&w!==Symbol.prototype?"symbol":typeof w},C(p)}var g=l(4140),k=l(26),r=l(12),z=T(l(0)),B=l(4418),D=["className","style"];function P(p){if(typeof WeakMap!="function")return null;var w=new WeakMap,m=new WeakMap;return(P=function(f){return f?m:w})(p)}function T(p,w){if(!w&&p&&p.__esModule)return p;if(p===null||C(p)!=="object"&&typeof p!="function")return{default:p};var m=P(w);if(m&&m.has(p))return m.get(p);var L={},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in p)if(u!=="default"&&Object.prototype.hasOwnProperty.call(p,u)){var O=f?Object.getOwnPropertyDescriptor(p,u):null;O&&(O.get||O.set)?Object.defineProperty(L,u,O):L[u]=p[u]}return L.default=p,m&&m.set(p,L),L}function H(p,w){if(p==null)return{};var m=E(p,w),L,f;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(p);for(f=0;f<u.length;f++)L=u[f],!(w.indexOf(L)>=0)&&(!Object.prototype.propertyIsEnumerable.call(p,L)||(m[L]=p[L]))}return m}function E(p,w){if(p==null)return{};var m={},L=Object.keys(p),f,u;for(u=0;u<L.length;u++)f=L[u],!(w.indexOf(f)>=0)&&(m[f]=p[f]);return m}function Y(){return Y=Object.assign?Object.assign.bind():function(p){for(var w=1;w<arguments.length;w++){var m=arguments[w];for(var L in m)Object.prototype.hasOwnProperty.call(m,L)&&(p[L]=m[L])}return p},Y.apply(this,arguments)}function W(p,w){return e(p)||t(p,w)||N(p,w)||S()}function S(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function N(p,w){if(!!p){if(typeof p=="string")return R(p,w);var m=Object.prototype.toString.call(p).slice(8,-1);if(m==="Object"&&p.constructor&&(m=p.constructor.name),m==="Map"||m==="Set")return Array.from(p);if(m==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m))return R(p,w)}}function R(p,w){(w==null||w>p.length)&&(w=p.length);for(var m=0,L=new Array(w);m<w;m++)L[m]=p[m];return L}function t(p,w){var m=p==null?null:typeof Symbol!="undefined"&&p[Symbol.iterator]||p["@@iterator"];if(m!=null){var L=[],f=!0,u=!1,O,K;try{for(m=m.call(p);!(f=(O=m.next()).done)&&(L.push(O.value),!(w&&L.length===w));f=!0);}catch(Q){u=!0,K=Q}finally{try{!f&&m.return!=null&&m.return()}finally{if(u)throw K}}return L}}function e(p){if(Array.isArray(p))return p}var h=(0,B.SortableHandle)(function(){return z.default.createElement(k.MenuOutlined,{style:{cursor:"grab",color:"#999"}})}),a=[{title:"Sort",dataIndex:"sort",width:30,className:"drag-visible",render:function(){return z.default.createElement(h,null)}},{title:"Name",dataIndex:"name",className:"drag-visible"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],n=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park",index:0},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park",index:1},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",index:2}],c=(0,B.SortableElement)(function(p){return z.default.createElement("tr",p)}),y=(0,B.SortableContainer)(function(p){return z.default.createElement("tbody",p)}),J=function(){var w=(0,z.useState)(n),m=W(w,2),L=m[0],f=m[1],u=function(j){var G=j.oldIndex,nn=j.newIndex;if(G!==nn){var an=(0,g.arrayMoveImmutable)(L.slice(),G,nn).filter(function(cn){return!!cn});console.log("Sorted items: ",an),f(an)}},O=function(j){return z.default.createElement(y,Y({useDragHandle:!0,disableAutoscroll:!0,helperClass:"row-dragging",onSortEnd:u},j))},K=function(j){var G=j.className,nn=j.style,an=H(j,D),cn=L.findIndex(function(mn){return mn.index===an["data-row-key"]});return z.default.createElement(c,Y({index:cn},an))};return z.default.createElement(r.Table,{pagination:!1,dataSource:L,columns:a,rowKey:"index",components:{body:{wrapper:O,row:K}}})},b=J;return Z.createElement(b)},style:`.row-dragging {
  background: #fafafa;
  border: 1px solid #ccc;
}

.row-dragging td {
  padding: 16px;
}

.row-dragging .drag-visible {
  visibility: visible;
}`,highlightedStyle:`<span class="token selector"><span class="token class">.row-dragging</span> </span><span class="token punctuation">{</span>
  <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#fafafa</span><span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#ccc</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.row-dragging</span> td </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">16</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.row-dragging</span> <span class="token class">.drag-visible</span> </span><span class="token punctuation">{</span>
  <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4140:function(kn,dn,l){"use strict";l.r(dn),l.d(dn,"arrayMoveMutable",function(){return _}),l.d(dn,"arrayMoveImmutable",function(){return Z});function _(U,C,g){const k=C<0?U.length+C:C;if(k>=0&&k<U.length){const r=g<0?U.length+g:g,[z]=U.splice(C,1);U.splice(r,0,z)}}function Z(U,C,g){return U=[...U],_(U,C,g),U}},4141:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4F7F\u7528\u81EA\u5B9A\u4E49\u5143\u7D20\uFF0C\u6211\u4EEC\u53EF\u4EE5\u96C6\u6210 ",["a",{title:null,href:"https://github.com/react-dnd/react-dnd"},"react-dnd"]," \u6765\u5B9E\u73B0\u62D6\u62FD\u6392\u5E8F\u3002"]],"en-US":[["p","By using ",["code","components"],", we can integrate table with ",["a",{title:null,href:"https://github.com/react-dnd/react-dnd"},"react-dnd"]," to implement drag sorting function."]]},meta:{order:26,title:{"en-US":"Drag sorting","zh-CN":"\u62D6\u62FD\u6392\u5E8F"},filename:"components/table/demo/drag-sorting.md",id:"components-table-demo-drag-sorting"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import update from <span class="token string">'immutability-helper'</span><span class="token comment" spellcheck="true">;</span>
import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import { DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop } from <span class="token string">'react-dnd'</span><span class="token comment" spellcheck="true">;</span>
import { HTML5Backend } from <span class="token string">'react-dnd-html5-backend'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface DraggableBodyRowProps extends React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span> {
  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  moveRow<span class="token punctuation">:</span> <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DraggableBodyRow'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> DraggableBodyRow <span class="token operator">=</span> <span class="token punctuation">(</span>{
  index<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  className<span class="token punctuation">,</span>
  style<span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps
}<span class="token punctuation">:</span> DraggableBodyRowProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>{ isOver<span class="token punctuation">,</span> dropClassName }<span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span>{
    accept<span class="token punctuation">:</span> type<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> { index<span class="token punctuation">:</span> dragIndex } <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> || {}<span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">==</span><span class="token operator">=</span> index<span class="token punctuation">)</span> {
        return {}<span class="token comment" spellcheck="true">;</span>
      }
      return {
        isOver<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token punctuation">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token punctuation">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      }<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    drop<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> { index<span class="token punctuation">:</span> number }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span>{
    type<span class="token punctuation">,</span>
    item<span class="token punctuation">:</span> { index }<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      isDragging<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>tr
      ref<span class="token operator">=</span>{ref}
      className<span class="token operator">=</span>{\`\${className}\${isOver <span class="token operator">?</span> dropClassName <span class="token punctuation">:</span> <span class="token string">''</span>}\`}
      style<span class="token operator">=</span>{{ cursor<span class="token punctuation">:</span> <span class="token string">'move'</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>style }}
      {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> components <span class="token operator">=</span> {
    body<span class="token punctuation">:</span> {
      row<span class="token punctuation">:</span> DraggableBodyRow<span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> data<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setData</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> {
          <span class="token variable">$splice</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        }<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>DndProvider backend<span class="token operator">=</span>{HTML5Backend}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        columns<span class="token operator">=</span>{columns}
        dataSource<span class="token operator">=</span>{data}
        components<span class="token operator">=</span>{components}
        onRow<span class="token operator">=</span>{<span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">const</span> attr <span class="token operator">=</span> {
            index<span class="token punctuation">,</span>
            moveRow<span class="token punctuation">,</span>
          }<span class="token comment" spellcheck="true">;</span>
          return attr as React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
        }}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>DndProvider<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">DraggableBodyRowProps</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>HTMLAttributes</span><span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span> <span class="token punctuation">{</span>
  index<span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token function-variable function">moveRow</span><span class="token operator">:</span> <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DraggableBodyRow'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">DraggableBodyRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  index<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  className<span class="token punctuation">,</span>
  style<span class="token punctuation">,</span>
  <span class="token operator">...</span>restProps
<span class="token punctuation">}</span><span class="token operator">:</span> DraggableBodyRowProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLTableRowElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    accept<span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        isOver<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> <span class="token punctuation">{</span> index<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    item<span class="token operator">:</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      isDragging<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>className<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> cursor<span class="token operator">:</span> <span class="token string">'move'</span><span class="token punctuation">,</span> <span class="token operator">...</span>style <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>
    body<span class="token operator">:</span> <span class="token punctuation">{</span>
      row<span class="token operator">:</span> DraggableBodyRow<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> data<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setData</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          $splice<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>
        <span class="token attr-name">onRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> attr <span class="token operator">=</span> <span class="token punctuation">{</span>
            index<span class="token punctuation">,</span>
            moveRow<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> attr <span class="token keyword">as</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DraggableBodyRow'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">DraggableBodyRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> className<span class="token punctuation">,</span> style<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">accept</span><span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">index</span><span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isOver</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dropClassName</span><span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      index<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">isDragging</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>className<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">'move'</span><span class="token punctuation">,</span>
        <span class="token operator">...</span>style<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">row</span><span class="token operator">:</span> DraggableBodyRow<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">dragIndex<span class="token punctuation">,</span> hoverIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> data<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setData</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">$splice</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>
        <span class="token attr-name">onRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> attr <span class="token operator">=</span> <span class="token punctuation">{</span>
            index<span class="token punctuation">,</span>
            moveRow<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> attr<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(m){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(L){return typeof L}:function(L){return L&&typeof Symbol=="function"&&L.constructor===Symbol&&L!==Symbol.prototype?"symbol":typeof L},C(m)}var g=H(l(3551)),k=l(12),r=T(l(0)),z=l(3552),B=l(3553),D=["index","moveRow","className","style"];function P(m){if(typeof WeakMap!="function")return null;var L=new WeakMap,f=new WeakMap;return(P=function(O){return O?f:L})(m)}function T(m,L){if(!L&&m&&m.__esModule)return m;if(m===null||C(m)!=="object"&&typeof m!="function")return{default:m};var f=P(L);if(f&&f.has(m))return f.get(m);var u={},O=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var K in m)if(K!=="default"&&Object.prototype.hasOwnProperty.call(m,K)){var Q=O?Object.getOwnPropertyDescriptor(m,K):null;Q&&(Q.get||Q.set)?Object.defineProperty(u,K,Q):u[K]=m[K]}return u.default=m,f&&f.set(m,u),u}function H(m){return m&&m.__esModule?m:{default:m}}function E(){return E=Object.assign?Object.assign.bind():function(m){for(var L=1;L<arguments.length;L++){var f=arguments[L];for(var u in f)Object.prototype.hasOwnProperty.call(f,u)&&(m[u]=f[u])}return m},E.apply(this,arguments)}function Y(m,L){var f=Object.keys(m);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(m);L&&(u=u.filter(function(O){return Object.getOwnPropertyDescriptor(m,O).enumerable})),f.push.apply(f,u)}return f}function W(m){for(var L=1;L<arguments.length;L++){var f=arguments[L]!=null?arguments[L]:{};L%2?Y(Object(f),!0).forEach(function(u){S(m,u,f[u])}):Object.getOwnPropertyDescriptors?Object.defineProperties(m,Object.getOwnPropertyDescriptors(f)):Y(Object(f)).forEach(function(u){Object.defineProperty(m,u,Object.getOwnPropertyDescriptor(f,u))})}return m}function S(m,L,f){return L in m?Object.defineProperty(m,L,{value:f,enumerable:!0,configurable:!0,writable:!0}):m[L]=f,m}function N(m,L){return a(m)||h(m,L)||t(m,L)||R()}function R(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function t(m,L){if(!!m){if(typeof m=="string")return e(m,L);var f=Object.prototype.toString.call(m).slice(8,-1);if(f==="Object"&&m.constructor&&(f=m.constructor.name),f==="Map"||f==="Set")return Array.from(m);if(f==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f))return e(m,L)}}function e(m,L){(L==null||L>m.length)&&(L=m.length);for(var f=0,u=new Array(L);f<L;f++)u[f]=m[f];return u}function h(m,L){var f=m==null?null:typeof Symbol!="undefined"&&m[Symbol.iterator]||m["@@iterator"];if(f!=null){var u=[],O=!0,K=!1,Q,j;try{for(f=f.call(m);!(O=(Q=f.next()).done)&&(u.push(Q.value),!(L&&u.length===L));O=!0);}catch(G){K=!0,j=G}finally{try{!O&&f.return!=null&&f.return()}finally{if(K)throw j}}return u}}function a(m){if(Array.isArray(m))return m}function n(m,L){if(m==null)return{};var f=c(m,L),u,O;if(Object.getOwnPropertySymbols){var K=Object.getOwnPropertySymbols(m);for(O=0;O<K.length;O++)u=K[O],!(L.indexOf(u)>=0)&&(!Object.prototype.propertyIsEnumerable.call(m,u)||(f[u]=m[u]))}return f}function c(m,L){if(m==null)return{};var f={},u=Object.keys(m),O,K;for(K=0;K<u.length;K++)O=u[K],!(L.indexOf(O)>=0)&&(f[O]=m[O]);return f}var y="DraggableBodyRow",J=function(L){var f=L.index,u=L.moveRow,O=L.className,K=L.style,Q=n(L,D),j=(0,r.useRef)(null),G=(0,z.useDrop)({accept:y,collect:function(Pn){var Ln=Pn.getItem()||{},Tn=Ln.index;return Tn===f?{}:{isOver:Pn.isOver(),dropClassName:Tn<f?" drop-over-downward":" drop-over-upward"}},drop:function(Pn){u(Pn.index,f)}}),nn=N(G,2),an=nn[0],cn=an.isOver,mn=an.dropClassName,gn=nn[1],fn=(0,z.useDrag)({type:y,item:{index:f},collect:function(Pn){return{isDragging:Pn.isDragging()}}}),yn=N(fn,2),wn=yn[1];return gn(wn(j)),r.default.createElement("tr",E({ref:j,className:"".concat(O).concat(cn?mn:""),style:W({cursor:"move"},K)},Q))},b=[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"}],p=function(){var L=(0,r.useState)([{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}]),f=N(L,2),u=f[0],O=f[1],K={body:{row:J}},Q=(0,r.useCallback)(function(j,G){var nn=u[j];O((0,g.default)(u,{$splice:[[j,1],[G,0,nn]]}))},[u]);return r.default.createElement(z.DndProvider,{backend:B.HTML5Backend},r.default.createElement(k.Table,{columns:b,dataSource:u,components:K,onRow:function(G,nn){var an={index:nn,moveRow:Q};return an}}))},w=p;return Z.createElement(w)},style:`#components-table-demo-drag-sorting tr.drop-over-downward td {
  border-bottom: 2px dashed #2673dd;
}

#components-table-demo-drag-sorting tr.drop-over-upward td {
  border-top: 2px dashed #2673dd;
}`,highlightedStyle:`<span class="token selector"><span class="token id">#components-table-demo-drag-sorting</span> tr<span class="token class">.drop-over-downward</span> td </span><span class="token punctuation">{</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token hexcode">#2673dd</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token id">#components-table-demo-drag-sorting</span> tr<span class="token class">.drop-over-upward</span> td </span><span class="token punctuation">{</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token hexcode">#2673dd</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4215:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u9009\u62E9\u4E0D\u540C\u914D\u7F6E\u7EC4\u5408\u67E5\u770B\u6548\u679C\u3002"]],"en-US":[["p","Select different settings to see the result."]]},meta:{order:100,title:{"en-US":"Dynamic Settings","zh-CN":"\u52A8\u6001\u63A7\u5236\u8868\u683C\u5C5E\u6027"},filename:"components/table/demo/dynamic-settings.md",id:"components-table-demo-dynamic-settings"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { DownOutlined } from <span class="token string">'infra-design-icons'</span><span class="token comment" spellcheck="true">;</span>
import type { RadioChangeEvent } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> <span class="token keyword">Switch</span><span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { SizeType } from <span class="token string">'infrad/lib/config-provider/SizeContext'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TableProps } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { ExpandableConfig<span class="token punctuation">,</span> TableRowSelection } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  description<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

type TablePaginationPosition <span class="token operator">=</span>
  | <span class="token string">'topLeft'</span>
  | <span class="token string">'topCenter'</span>
  | <span class="token string">'topRight'</span>
  | <span class="token string">'bottomLeft'</span>
  | <span class="token string">'bottomCenter'</span>
  | <span class="token string">'bottomRight'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value as string<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>
          <span class="token operator">&lt;</span>Space<span class="token operator">></span>
            More actions
            <span class="token operator">&lt;</span>DownOutlined <span class="token operator">/</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">1</span><span class="token comment" spellcheck="true">; i &lt;= 10; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token function">Number</span><span class="token punctuation">(</span>\`\${i}<span class="token number">2</span>\`<span class="token punctuation">)</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`New York No<span class="token punctuation">.</span> \${i} Lake Park\`<span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> \`My name is John Brown<span class="token punctuation">,</span> I am \${i}<span class="token number">2</span> years old<span class="token punctuation">,</span> living <span class="token keyword">in</span> New York No<span class="token punctuation">.</span> \${i} Lake Park<span class="token punctuation">.</span>\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> defaultExpandable <span class="token operator">=</span> { expandedRowRender<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>p<span class="token operator">></span>{record<span class="token punctuation">.</span>description}<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span> }<span class="token comment" spellcheck="true">;</span>
<span class="token keyword">const</span> defaultTitle <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Here is title'</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">const</span> defaultFooter <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'Here is footer'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bordered<span class="token punctuation">,</span> setBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>size<span class="token punctuation">,</span> setSize<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>SizeType<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'large'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>expandable<span class="token punctuation">,</span> setExpandable<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>ExpandableConfig<span class="token operator">&lt;</span>DataType<span class="token operator">></span> | undefined<span class="token operator">></span><span class="token punctuation">(</span>
    defaultExpandable<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showTitle<span class="token punctuation">,</span> setShowTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showHeader<span class="token punctuation">,</span> setShowHeader<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showfooter<span class="token punctuation">,</span> setShowFooter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>rowSelection<span class="token punctuation">,</span> setRowSelection<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> | undefined<span class="token operator">></span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>hasData<span class="token punctuation">,</span> setHasData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableLayout<span class="token punctuation">,</span> setTableLayout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>undefined<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition | <span class="token string">'none'</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ellipsis<span class="token punctuation">,</span> setEllipsis<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>yScroll<span class="token punctuation">,</span> setYScroll<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>xScroll<span class="token punctuation">,</span> setXScroll<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string | undefined<span class="token operator">></span><span class="token punctuation">(</span>undefined<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleBorderChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setBordered</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleLoadingChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setLoading</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleSizeChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setSize</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleTableLayoutChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setTableLayout</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleExpandChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setExpandable</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> defaultExpandable <span class="token punctuation">:</span> undefined<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleEllipsisChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setEllipsis</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleTitleChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setShowTitle</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleHeaderChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setShowHeader</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleFooterChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setShowFooter</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleRowSelectionChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setRowSelection</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> {} <span class="token punctuation">:</span> undefined<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleYScrollChange <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setYScroll</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleXScrollChange <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setXScroll</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleDataChange <span class="token operator">=</span> <span class="token punctuation">(</span>newHasData<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setHasData</span><span class="token punctuation">(</span>newHasData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> scroll<span class="token punctuation">:</span> { x<span class="token operator">?</span><span class="token punctuation">:</span> number | string<span class="token comment" spellcheck="true">; y?: number | string } = {};</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>yScroll<span class="token punctuation">)</span> {
    scroll<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">240</span><span class="token comment" spellcheck="true">;</span>
  }
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll<span class="token punctuation">)</span> {
    scroll<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">'100vw'</span><span class="token comment" spellcheck="true">;</span>
  }

  <span class="token keyword">const</span> tableColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span> ellipsis }<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'fixed'</span><span class="token punctuation">)</span> {
    tableColumns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>
    tableColumns<span class="token punctuation">[</span>tableColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token string">'right'</span><span class="token comment" spellcheck="true">;</span>
  }

  <span class="token keyword">const</span> tableProps<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> {
    bordered<span class="token punctuation">,</span>
    loading<span class="token punctuation">,</span>
    size<span class="token punctuation">,</span>
    expandable<span class="token punctuation">,</span>
    title<span class="token punctuation">:</span> showTitle <span class="token operator">?</span> defaultTitle <span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>
    showHeader<span class="token punctuation">,</span>
    footer<span class="token punctuation">:</span> showfooter <span class="token operator">?</span> defaultFooter <span class="token punctuation">:</span> undefined<span class="token punctuation">,</span>
    rowSelection<span class="token punctuation">,</span>
    scroll<span class="token punctuation">,</span>
    tableLayout<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Form
        layout<span class="token operator">=</span><span class="token string">"inline"</span>
        className<span class="token operator">=</span><span class="token string">"components-table-demo-control-bar"</span>
        style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Bordered"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{bordered} onChange<span class="token operator">=</span>{handleBorderChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"loading"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{loading} onChange<span class="token operator">=</span>{handleLoadingChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Title"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{showTitle} onChange<span class="token operator">=</span>{handleTitleChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Column Header"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{showHeader} onChange<span class="token operator">=</span>{handleHeaderChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Footer"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{showfooter} onChange<span class="token operator">=</span>{handleFooterChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Expandable"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{!!expandable} onChange<span class="token operator">=</span>{handleExpandChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Checkbox"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{!!rowSelection} onChange<span class="token operator">=</span>{handleRowSelectionChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Fixed Header"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{!!yScroll} onChange<span class="token operator">=</span>{handleYScrollChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Has Data"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{!!hasData} onChange<span class="token operator">=</span>{handleDataChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Ellipsis"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{!!ellipsis} onChange<span class="token operator">=</span>{handleEllipsisChange} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Size"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group value<span class="token operator">=</span>{size} onChange<span class="token operator">=</span>{handleSizeChange}<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"large"</span><span class="token operator">></span>Large<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>Middle<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"small"</span><span class="token operator">></span>Small<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Table Scroll"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group value<span class="token operator">=</span>{xScroll} onChange<span class="token operator">=</span>{handleXScrollChange}<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span>{undefined}<span class="token operator">></span>Unset<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"scroll"</span><span class="token operator">></span>Scroll<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"fixed"</span><span class="token operator">></span>Fixed Columns<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Table Layout"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group value<span class="token operator">=</span>{tableLayout} onChange<span class="token operator">=</span>{handleTableLayoutChange}<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span>{undefined}<span class="token operator">></span>Unset<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"fixed"</span><span class="token operator">></span>Fixed<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Pagination Top"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group
            value<span class="token operator">=</span>{top}
            onChange<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> {
              <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
            }}
          <span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"topLeft"</span><span class="token operator">></span>TopLeft<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"topCenter"</span><span class="token operator">></span>TopCenter<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"topRight"</span><span class="token operator">></span>TopRight<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"none"</span><span class="token operator">></span>None<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Pagination Bottom"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group
            value<span class="token operator">=</span>{bottom}
            onChange<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> {
              <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
            }}
          <span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"bottomLeft"</span><span class="token operator">></span>BottomLeft<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"bottomCenter"</span><span class="token operator">></span>BottomCenter<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"bottomRight"</span><span class="token operator">></span>BottomRight<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
            <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Button value<span class="token operator">=</span><span class="token string">"none"</span><span class="token operator">></span>None<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Button<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>tableProps}
        pagination<span class="token operator">=</span>{{ position<span class="token punctuation">:</span> <span class="token punctuation">[</span>top as TablePaginationPosition<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span> }}
        columns<span class="token operator">=</span>{tableColumns}
        dataSource<span class="token operator">=</span>{hasData <span class="token operator">?</span> data <span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>}
        scroll<span class="token operator">=</span>{scroll}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RadioChangeEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> SizeType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/config-provider/SizeContext'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ExpandableConfig<span class="token punctuation">,</span> TableRowSelection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> number<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  description<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type TablePaginationPosition <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">'topLeft'</span>
  <span class="token operator">|</span> <span class="token string">'topCenter'</span>
  <span class="token operator">|</span> <span class="token string">'topRight'</span>
  <span class="token operator">|</span> <span class="token string">'bottomLeft'</span>
  <span class="token operator">|</span> <span class="token string">'bottomCenter'</span>
  <span class="token operator">|</span> <span class="token string">'bottomRight'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value <span class="token keyword">as</span> string<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
            More actions
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My name is John Brown, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2 years old, living in New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> defaultExpandable <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">defaultTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Here is title'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">defaultFooter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Here is footer'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bordered<span class="token punctuation">,</span> setBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>size<span class="token punctuation">,</span> setSize<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>SizeType<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'large'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>expandable<span class="token punctuation">,</span> setExpandable<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>ExpandableConfig<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">(</span>
    defaultExpandable<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showTitle<span class="token punctuation">,</span> setShowTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showHeader<span class="token punctuation">,</span> setShowHeader<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showfooter<span class="token punctuation">,</span> setShowFooter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>rowSelection<span class="token punctuation">,</span> setRowSelection<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>hasData<span class="token punctuation">,</span> setHasData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableLayout<span class="token punctuation">,</span> setTableLayout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition <span class="token operator">|</span> <span class="token string">'none'</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ellipsis<span class="token punctuation">,</span> setEllipsis<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>yScroll<span class="token punctuation">,</span> setYScroll<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>xScroll<span class="token punctuation">,</span> setXScroll<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleBorderChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setBordered</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleLoadingChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setSize</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTableLayoutChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setTableLayout</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleExpandChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setExpandable</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> defaultExpandable <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleEllipsisChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEllipsis</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTitleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowTitle</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleHeaderChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowHeader</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleFooterChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowFooter</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleRowSelectionChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setRowSelection</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleYScrollChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>enable<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setYScroll</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleXScrollChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> RadioChangeEvent<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setXScroll</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleDataChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>newHasData<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setHasData</span><span class="token punctuation">(</span>newHasData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> scroll<span class="token operator">:</span> <span class="token punctuation">{</span> x<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">|</span> string<span class="token punctuation">;</span> y<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">|</span> string <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>yScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scroll<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">240</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scroll<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">'100vw'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> tableColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> ellipsis <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll <span class="token operator">===</span> <span class="token string">'fixed'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tableColumns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    tableColumns<span class="token punctuation">[</span>tableColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> tableProps<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    bordered<span class="token punctuation">,</span>
    loading<span class="token punctuation">,</span>
    size<span class="token punctuation">,</span>
    expandable<span class="token punctuation">,</span>
    title<span class="token operator">:</span> showTitle <span class="token operator">?</span> defaultTitle <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    showHeader<span class="token punctuation">,</span>
    footer<span class="token operator">:</span> showfooter <span class="token operator">?</span> defaultFooter <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    rowSelection<span class="token punctuation">,</span>
    scroll<span class="token punctuation">,</span>
    tableLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleBorderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleLoadingChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showTitle<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTitleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showHeader<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleHeaderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showfooter<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleFooterChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Expandable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>expandable<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleExpandChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleRowSelectionChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>yScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleYScrollChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Has Data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>hasData<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleDataChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Ellipsis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>ellipsis<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleEllipsisChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSizeChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Table Scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleXScrollChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Scroll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Table Layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTableLayoutChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Pagination Top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>top<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopLeft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topCenter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopCenter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopRight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Pagination Bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottom<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomLeft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomCenter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomCenter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomRight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>tableProps<span class="token punctuation">}</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> position<span class="token operator">:</span> <span class="token punctuation">[</span>top <span class="token keyword">as</span> TablePaginationPosition<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hasData <span class="token operator">?</span> data <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
            More actions
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">My name is John Brown, I am </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">2 years old, living in New York No. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> Lake Park.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> defaultExpandable <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">defaultTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Here is title'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">defaultFooter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'Here is footer'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bordered<span class="token punctuation">,</span> setBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>size<span class="token punctuation">,</span> setSize<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'large'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>expandable<span class="token punctuation">,</span> setExpandable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>defaultExpandable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showTitle<span class="token punctuation">,</span> setShowTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showHeader<span class="token punctuation">,</span> setShowHeader<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>showfooter<span class="token punctuation">,</span> setShowFooter<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>rowSelection<span class="token punctuation">,</span> setRowSelection<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>hasData<span class="token punctuation">,</span> setHasData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableLayout<span class="token punctuation">,</span> setTableLayout<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>ellipsis<span class="token punctuation">,</span> setEllipsis<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>yScroll<span class="token punctuation">,</span> setYScroll<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>xScroll<span class="token punctuation">,</span> setXScroll<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleBorderChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setBordered</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleLoadingChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSizeChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setSize</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTableLayoutChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setTableLayout</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleExpandChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setExpandable</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> defaultExpandable <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleEllipsisChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEllipsis</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleTitleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowTitle</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleHeaderChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowHeader</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleFooterChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setShowFooter</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleRowSelectionChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setRowSelection</span><span class="token punctuation">(</span>enable <span class="token operator">?</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleYScrollChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">enable</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setYScroll</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleXScrollChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setXScroll</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleDataChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newHasData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setHasData</span><span class="token punctuation">(</span>newHasData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> scroll <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>yScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scroll<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">240</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    scroll<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token string">'100vw'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> tableColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> ellipsis <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>xScroll <span class="token operator">===</span> <span class="token string">'fixed'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tableColumns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    tableColumns<span class="token punctuation">[</span>tableColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fixed <span class="token operator">=</span> <span class="token string">'right'</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> tableProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    bordered<span class="token punctuation">,</span>
    loading<span class="token punctuation">,</span>
    size<span class="token punctuation">,</span>
    expandable<span class="token punctuation">,</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> showTitle <span class="token operator">?</span> defaultTitle <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    showHeader<span class="token punctuation">,</span>
    <span class="token literal-property property">footer</span><span class="token operator">:</span> showfooter <span class="token operator">?</span> defaultFooter <span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    rowSelection<span class="token punctuation">,</span>
    scroll<span class="token punctuation">,</span>
    tableLayout<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleBorderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loading<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleLoadingChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showTitle<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTitleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showHeader<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleHeaderChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>showfooter<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleFooterChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Expandable<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>expandable<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleExpandChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleRowSelectionChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>yScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleYScrollChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Has Data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>hasData<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleDataChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Ellipsis<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span><span class="token operator">!</span>ellipsis<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleEllipsisChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Size<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>size<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSizeChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Large<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Middle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Small<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Table Scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>xScroll<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleXScrollChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>scroll<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Scroll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed Columns<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Table Layout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableLayout<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleTableLayoutChange<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">undefined</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Unset<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fixed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fixed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Pagination Top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>top<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopLeft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topCenter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopCenter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>TopRight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Pagination Bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
            <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottom<span class="token punctuation">}</span></span>
            <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
              <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomLeft<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomCenter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomCenter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bottomRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BottomRight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Button</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>None<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Button</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>tableProps<span class="token punctuation">}</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>hasData <span class="token operator">?</span> data <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(b){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(p){return typeof p}:function(p){return p&&typeof Symbol=="function"&&p.constructor===Symbol&&p!==Symbol.prototype?"symbol":typeof p},C(b)}var g=l(26),k=l(12),r=B(l(0));function z(b){if(typeof WeakMap!="function")return null;var p=new WeakMap,w=new WeakMap;return(z=function(L){return L?w:p})(b)}function B(b,p){if(!p&&b&&b.__esModule)return b;if(b===null||C(b)!=="object"&&typeof b!="function")return{default:b};var w=z(p);if(w&&w.has(b))return w.get(b);var m={},L=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in b)if(f!=="default"&&Object.prototype.hasOwnProperty.call(b,f)){var u=L?Object.getOwnPropertyDescriptor(b,f):null;u&&(u.get||u.set)?Object.defineProperty(m,f,u):m[f]=b[f]}return m.default=b,w&&w.set(b,m),m}function D(){return D=Object.assign?Object.assign.bind():function(b){for(var p=1;p<arguments.length;p++){var w=arguments[p];for(var m in w)Object.prototype.hasOwnProperty.call(w,m)&&(b[m]=w[m])}return b},D.apply(this,arguments)}function P(b,p){var w=Object.keys(b);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(b);p&&(m=m.filter(function(L){return Object.getOwnPropertyDescriptor(b,L).enumerable})),w.push.apply(w,m)}return w}function T(b){for(var p=1;p<arguments.length;p++){var w=arguments[p]!=null?arguments[p]:{};p%2?P(Object(w),!0).forEach(function(m){H(b,m,w[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(b,Object.getOwnPropertyDescriptors(w)):P(Object(w)).forEach(function(m){Object.defineProperty(b,m,Object.getOwnPropertyDescriptor(w,m))})}return b}function H(b,p,w){return p in b?Object.defineProperty(b,p,{value:w,enumerable:!0,configurable:!0,writable:!0}):b[p]=w,b}function E(b,p){return R(b)||N(b,p)||W(b,p)||Y()}function Y(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function W(b,p){if(!!b){if(typeof b=="string")return S(b,p);var w=Object.prototype.toString.call(b).slice(8,-1);if(w==="Object"&&b.constructor&&(w=b.constructor.name),w==="Map"||w==="Set")return Array.from(b);if(w==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(w))return S(b,p)}}function S(b,p){(p==null||p>b.length)&&(p=b.length);for(var w=0,m=new Array(p);w<p;w++)m[w]=b[w];return m}function N(b,p){var w=b==null?null:typeof Symbol!="undefined"&&b[Symbol.iterator]||b["@@iterator"];if(w!=null){var m=[],L=!0,f=!1,u,O;try{for(w=w.call(b);!(L=(u=w.next()).done)&&(m.push(u.value),!(p&&m.length===p));L=!0);}catch(K){f=!0,O=K}finally{try{!L&&w.return!=null&&w.return()}finally{if(f)throw O}}return m}}function R(b){if(Array.isArray(b))return b}for(var t=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age",sorter:function(p,w){return p.age-w.age}},{title:"Address",dataIndex:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],onFilter:function(p,w){return w.address.indexOf(p)===0}},{title:"Action",key:"action",sorter:!0,render:function(){return r.default.createElement(k.Space,{size:"middle"},r.default.createElement("a",null,"Delete"),r.default.createElement("a",null,r.default.createElement(k.Space,null,"More actions",r.default.createElement(g.DownOutlined,null))))}}],e=[],h=1;h<=10;h++)e.push({key:h,name:"John Brown",age:Number("".concat(h,"2")),address:"New York No. ".concat(h," Lake Park"),description:"My name is John Brown, I am ".concat(h,"2 years old, living in New York No. ").concat(h," Lake Park.")});var a={expandedRowRender:function(p){return r.default.createElement("p",null,p.description)}},n=function(){return"Here is title"},c=function(){return"Here is footer"},y=function(){var p=(0,r.useState)(!1),w=E(p,2),m=w[0],L=w[1],f=(0,r.useState)(!1),u=E(f,2),O=u[0],K=u[1],Q=(0,r.useState)("large"),j=E(Q,2),G=j[0],nn=j[1],an=(0,r.useState)(a),cn=E(an,2),mn=cn[0],gn=cn[1],fn=(0,r.useState)(!1),yn=E(fn,2),wn=yn[0],Cn=yn[1],Pn=(0,r.useState)(!0),Ln=E(Pn,2),Tn=Ln[0],An=Ln[1],En=(0,r.useState)(!0),Mn=E(En,2),Jn=Mn[0],q=Mn[1],x=(0,r.useState)({}),M=E(x,2),I=M[0],d=M[1],o=(0,r.useState)(!0),i=E(o,2),v=i[0],A=i[1],V=(0,r.useState)(void 0),sn=E(V,2),tn=sn[0],s=sn[1],pn=(0,r.useState)("none"),X=E(pn,2),F=X[0],on=X[1],en=(0,r.useState)("bottomRight"),ln=E(en,2),hn=ln[0],xn=ln[1],$=(0,r.useState)(!1),rn=E($,2),un=rn[0],bn=rn[1],Sn=(0,r.useState)(!1),vn=E(Sn,2),On=vn[0],In=vn[1],Dn=(0,r.useState)(void 0),jn=E(Dn,2),Nn=jn[0],Rn=jn[1],Bn=function(zn){L(zn)},Fn=function(zn){K(zn)},Kn=function(zn){nn(zn.target.value)},Un=function(zn){s(zn.target.value)},Gn=function(zn){gn(zn?a:void 0)},Yn=function(zn){bn(zn)},$n=function(zn){Cn(zn)},Hn=function(zn){An(zn)},qn=function(zn){q(zn)},_n=function(zn){d(zn?{}:void 0)},Vn=function(zn){In(zn)},ns=function(zn){Rn(zn.target.value)},ss=function(zn){A(zn)},Qn={};On&&(Qn.y=240),Nn&&(Qn.x="100vw");var Xn=t.map(function(Wn){return T(T({},Wn),{},{ellipsis:un})});Nn==="fixed"&&(Xn[0].fixed=!0,Xn[Xn.length-1].fixed="right");var Zn={bordered:m,loading:O,size:G,expandable:mn,title:wn?n:void 0,showHeader:Tn,footer:Jn?c:void 0,rowSelection:I,scroll:Qn,tableLayout:tn};return r.default.createElement(r.default.Fragment,null,r.default.createElement(k.Form,{layout:"inline",className:"components-table-demo-control-bar",style:{marginBottom:16}},r.default.createElement(k.Form.Item,{label:"Bordered"},r.default.createElement(k.Switch,{checked:m,onChange:Bn})),r.default.createElement(k.Form.Item,{label:"loading"},r.default.createElement(k.Switch,{checked:O,onChange:Fn})),r.default.createElement(k.Form.Item,{label:"Title"},r.default.createElement(k.Switch,{checked:wn,onChange:$n})),r.default.createElement(k.Form.Item,{label:"Column Header"},r.default.createElement(k.Switch,{checked:Tn,onChange:Hn})),r.default.createElement(k.Form.Item,{label:"Footer"},r.default.createElement(k.Switch,{checked:Jn,onChange:qn})),r.default.createElement(k.Form.Item,{label:"Expandable"},r.default.createElement(k.Switch,{checked:!!mn,onChange:Gn})),r.default.createElement(k.Form.Item,{label:"Checkbox"},r.default.createElement(k.Switch,{checked:!!I,onChange:_n})),r.default.createElement(k.Form.Item,{label:"Fixed Header"},r.default.createElement(k.Switch,{checked:!!On,onChange:Vn})),r.default.createElement(k.Form.Item,{label:"Has Data"},r.default.createElement(k.Switch,{checked:!!v,onChange:ss})),r.default.createElement(k.Form.Item,{label:"Ellipsis"},r.default.createElement(k.Switch,{checked:!!un,onChange:Yn})),r.default.createElement(k.Form.Item,{label:"Size"},r.default.createElement(k.Radio.Group,{value:G,onChange:Kn},r.default.createElement(k.Radio.Button,{value:"large"},"Large"),r.default.createElement(k.Radio.Button,{value:"middle"},"Middle"),r.default.createElement(k.Radio.Button,{value:"small"},"Small"))),r.default.createElement(k.Form.Item,{label:"Table Scroll"},r.default.createElement(k.Radio.Group,{value:Nn,onChange:ns},r.default.createElement(k.Radio.Button,{value:void 0},"Unset"),r.default.createElement(k.Radio.Button,{value:"scroll"},"Scroll"),r.default.createElement(k.Radio.Button,{value:"fixed"},"Fixed Columns"))),r.default.createElement(k.Form.Item,{label:"Table Layout"},r.default.createElement(k.Radio.Group,{value:tn,onChange:Un},r.default.createElement(k.Radio.Button,{value:void 0},"Unset"),r.default.createElement(k.Radio.Button,{value:"fixed"},"Fixed"))),r.default.createElement(k.Form.Item,{label:"Pagination Top"},r.default.createElement(k.Radio.Group,{value:F,onChange:function(zn){on(zn.target.value)}},r.default.createElement(k.Radio.Button,{value:"topLeft"},"TopLeft"),r.default.createElement(k.Radio.Button,{value:"topCenter"},"TopCenter"),r.default.createElement(k.Radio.Button,{value:"topRight"},"TopRight"),r.default.createElement(k.Radio.Button,{value:"none"},"None"))),r.default.createElement(k.Form.Item,{label:"Pagination Bottom"},r.default.createElement(k.Radio.Group,{value:hn,onChange:function(zn){xn(zn.target.value)}},r.default.createElement(k.Radio.Button,{value:"bottomLeft"},"BottomLeft"),r.default.createElement(k.Radio.Button,{value:"bottomCenter"},"BottomCenter"),r.default.createElement(k.Radio.Button,{value:"bottomRight"},"BottomRight"),r.default.createElement(k.Radio.Button,{value:"none"},"None")))),r.default.createElement(k.Table,D({},Zn,{pagination:{position:[F,hn]},columns:Xn,dataSource:v?e:[],scroll:Qn})))},J=y;return Z.createElement(J)},style:`
.components-table-demo-control-bar .ant-form-item {
  margin-right: 16px;
  margin-bottom: 8px;
}
`}},4216:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5E26\u5355\u5143\u683C\u7F16\u8F91\u529F\u80FD\u7684\u8868\u683C\u3002\u5F53\u914D\u5408 ",["code","shouldCellUpdate"]," \u4F7F\u7528\u65F6\u8BF7\u6CE8\u610F",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/29243"},"\u95ED\u5305\u95EE\u9898"],"\u3002"]],"en-US":[["p","Table with editable cells. When work with ",["code","shouldCellUpdate"],", please take care of ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/29243"},"closure"],"."]]},meta:{order:23,title:{"en-US":"Editable Cells","zh-CN":"\u53EF\u7F16\u8F91\u5355\u5143\u683C"},filename:"components/table/demo/edit-cell.md",id:"components-table-demo-edit-cell"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import type { InputRef } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { FormInstance } from <span class="token string">'infrad/lib/form'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useContext<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token operator">&lt;</span>FormInstance<span class="token operator">&lt;</span>any<span class="token operator">></span> | <span class="token keyword">null</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

interface Item {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface EditableRowProps {
  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> EditableRow<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableRowProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ index<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Form form<span class="token operator">=</span>{form} component<span class="token operator">=</span>{<span class="token boolean">false</span>}<span class="token operator">></span>
      <span class="token operator">&lt;</span>EditableContext<span class="token punctuation">.</span>Provider value<span class="token operator">=</span>{form}<span class="token operator">></span>
        <span class="token operator">&lt;</span>tr {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>EditableContext<span class="token punctuation">.</span>Provider<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

interface EditableCellProps {
  title<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>
  editable<span class="token punctuation">:</span> boolean<span class="token comment" spellcheck="true">;</span>
  children<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>
  dataIndex<span class="token punctuation">:</span> keyof Item<span class="token comment" spellcheck="true">;</span>
  record<span class="token punctuation">:</span> Item<span class="token comment" spellcheck="true">;</span>
  handleSave<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> EditableCell<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{
  title<span class="token punctuation">,</span>
  editable<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  handleSave<span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps
}<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>InputRef<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span>!<span class="token comment" spellcheck="true">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> {
      inputRef<span class="token punctuation">.</span>current!<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> toggleEdit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setEditing</span><span class="token punctuation">(</span>!editing<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span>{ <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span> }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> save <span class="token operator">=</span> async <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    try {
      <span class="token keyword">const</span> values <span class="token operator">=</span> await form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">handleSave</span><span class="token punctuation">(</span>{ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>record<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>values }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } catch <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Save failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  let childNode <span class="token operator">=</span> children<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> {
    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item
        style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}
        name<span class="token operator">=</span>{dataIndex}
        rules<span class="token operator">=</span>{<span class="token punctuation">[</span>
          {
            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            message<span class="token punctuation">:</span> \`\${title} is required<span class="token punctuation">.</span>\`<span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span>}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Input ref<span class="token operator">=</span>{inputRef} onPressEnter<span class="token operator">=</span>{save} onBlur<span class="token operator">=</span>{save} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
    <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"editable-cell-value-wrap"</span> style<span class="token operator">=</span>{{ paddingRight<span class="token punctuation">:</span> <span class="token number">24</span> }} onClick<span class="token operator">=</span>{toggleEdit}<span class="token operator">></span>
        {children}
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }

  return <span class="token operator">&lt;</span>td {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps}<span class="token operator">></span>{childNode}<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

type EditableTableProps <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span>typeof Table<span class="token operator">></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

type ColumnTypes <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>EditableTableProps<span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> undefined<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      key<span class="token punctuation">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Edward King 0'</span><span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> <span class="token string">'London, Park Lane no. 0'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Edward King 1'</span><span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> <span class="token string">'London, Park Lane no. 1'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleDelete <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> newData <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> item<span class="token punctuation">.</span>key !<span class="token operator">==</span> key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> defaultColumns<span class="token punctuation">:</span> <span class="token punctuation">(</span>ColumnTypes<span class="token punctuation">[</span>number<span class="token punctuation">]</span> <span class="token operator">&amp;</span> { editable<span class="token operator">?</span><span class="token punctuation">:</span> boolean<span class="token comment" spellcheck="true">; dataIndex: string })[] = [</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">:</span> { key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
        dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>Popconfirm title<span class="token operator">=</span><span class="token string">"Sure to delete?"</span> onConfirm<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span>}<span class="token operator">></span>
            <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Popconfirm<span class="token operator">></span>
        <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleAdd <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> newData<span class="token punctuation">:</span> DataType <span class="token operator">=</span> {
      key<span class="token punctuation">:</span> count<span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> \`Edward King \${count}\`<span class="token punctuation">,</span>
      age<span class="token punctuation">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token punctuation">:</span> \`London<span class="token punctuation">,</span> Park Lane no<span class="token punctuation">.</span> \${count}\`<span class="token punctuation">,</span>
    }<span class="token comment" spellcheck="true">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleSave <span class="token operator">=</span> <span class="token punctuation">(</span>row<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>dataSource<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> row<span class="token punctuation">.</span>key <span class="token operator">==</span><span class="token operator">=</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> {
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>row<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> components <span class="token operator">=</span> {
    body<span class="token punctuation">:</span> {
      row<span class="token punctuation">:</span> EditableRow<span class="token punctuation">,</span>
      cell<span class="token punctuation">:</span> EditableCell<span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> defaultColumns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> {
      return col<span class="token comment" spellcheck="true">;</span>
    }
    return {
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>col<span class="token punctuation">,</span>
      onCell<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
        record<span class="token punctuation">,</span>
        editable<span class="token punctuation">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        title<span class="token punctuation">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        handleSave<span class="token punctuation">,</span>
      }<span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span>{handleAdd} type<span class="token operator">=</span><span class="token string">"primary"</span> style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token operator">></span>
        Add a row
      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        components<span class="token operator">=</span>{components}
        rowClassName<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'editable-row'</span>}
        bordered
        dataSource<span class="token operator">=</span>{dataSource}
        columns<span class="token operator">=</span>{columns as ColumnTypes}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> type <span class="token punctuation">{</span> InputRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> FormInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/form'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useContext<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span>createContext<span class="token operator">&lt;</span>FormInstance<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> string<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">EditableRowProps</span> <span class="token punctuation">{</span>
  index<span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> EditableRow<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>EditableRowProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> index<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EditableContext.Provider</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">EditableCellProps</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
  editable<span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
  dataIndex<span class="token operator">:</span> keyof Item<span class="token punctuation">;</span>
  record<span class="token operator">:</span> Item<span class="token punctuation">;</span>
  <span class="token function-variable function">handleSave</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> EditableCell<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  title<span class="token punctuation">,</span>
  editable<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  handleSave<span class="token punctuation">,</span>
  <span class="token operator">...</span>restProps
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>InputRef<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">toggleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEditing</span><span class="token punctuation">(</span><span class="token operator">!</span>editing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token operator">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">handleSave</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record<span class="token punctuation">,</span> <span class="token operator">...</span>values <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Save failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> childNode <span class="token operator">=</span> children<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>
        <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is required.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span> <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token attr-name">onBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editable-cell-value-wrap<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> paddingRight<span class="token operator">:</span> <span class="token number">24</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleEdit<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>childNode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

type EditableTableProps <span class="token operator">=</span> Parameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Table<span class="token operator">></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> string<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type ColumnTypes <span class="token operator">=</span> Exclude<span class="token operator">&lt;</span>EditableTableProps<span class="token punctuation">[</span><span class="token string">'columns'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token operator">></span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Edward King 0'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">'London, Park Lane no. 0'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Edward King 1'</span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token string">'London, Park Lane no. 1'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span>key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>item <span class="token operator">=></span> item<span class="token punctuation">.</span>key <span class="token operator">!==</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> defaultColumns<span class="token operator">:</span> <span class="token punctuation">(</span>ColumnTypes<span class="token punctuation">[</span>number<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> editable<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">;</span> dataIndex<span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token operator">:</span> <span class="token punctuation">{</span> key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>
        dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sure to delete?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData<span class="token operator">:</span> DataType <span class="token operator">=</span> <span class="token punctuation">{</span>
      key<span class="token operator">:</span> count<span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      age<span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSave</span> <span class="token operator">=</span> <span class="token punctuation">(</span>row<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=></span> row<span class="token punctuation">.</span>key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>item<span class="token punctuation">,</span>
      <span class="token operator">...</span>row<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>
    body<span class="token operator">:</span> <span class="token punctuation">{</span>
      row<span class="token operator">:</span> EditableRow<span class="token punctuation">,</span>
      cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> defaultColumns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> col<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>col<span class="token punctuation">,</span>
      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        record<span class="token punctuation">,</span>
        editable<span class="token operator">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        handleSave<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleAdd<span class="token punctuation">}</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        Add a row
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'editable-row'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns <span class="token keyword">as</span> ColumnTypes<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useContext<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> EditableContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">EditableRow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> index<span class="token punctuation">,</span> <span class="token operator">...</span>props <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EditableContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">EditableContext.Provider</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">EditableCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>
  title<span class="token punctuation">,</span>
  editable<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  handleSave<span class="token punctuation">,</span>
  <span class="token operator">...</span>restProps
<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editing<span class="token punctuation">,</span> setEditing<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> inputRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token function">useContext</span><span class="token punctuation">(</span>EditableContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>editing<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      inputRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>editing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">toggleEdit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEditing</span><span class="token punctuation">(</span><span class="token operator">!</span>editing<span class="token punctuation">)</span><span class="token punctuation">;</span>
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token operator">:</span> record<span class="token punctuation">[</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> values <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">toggleEdit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">handleSave</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>record<span class="token punctuation">,</span> <span class="token operator">...</span>values <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Save failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> childNode <span class="token operator">=</span> children<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    childNode <span class="token operator">=</span> editing <span class="token operator">?</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>
        <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is required.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>inputRef<span class="token punctuation">}</span></span> <span class="token attr-name">onPressEnter</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token attr-name">onBlur</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>save<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editable-cell-value-wrap<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">paddingRight</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>toggleEdit<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>children<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>childNode<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'0'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Edward King 0'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London, Park Lane no. 0'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Edward King 1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London, Park Lane no. 1'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> dataSource<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>key <span class="token operator">!==</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> defaultColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span>
        dataSource<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sure to delete?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">handleDelete</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleAdd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> count<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">'32'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>count<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">,</span> newData<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleSave</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">row</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>dataSource<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> row<span class="token punctuation">.</span>key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> <span class="token operator">...</span>row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setDataSource</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">row</span><span class="token operator">:</span> EditableRow<span class="token punctuation">,</span>
      <span class="token literal-property property">cell</span><span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> columns <span class="token operator">=</span> defaultColumns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">col</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> col<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>col<span class="token punctuation">,</span>
      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        record<span class="token punctuation">,</span>
        <span class="token literal-property property">editable</span><span class="token operator">:</span> col<span class="token punctuation">.</span>editable<span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        handleSave<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleAdd<span class="token punctuation">}</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Add a row
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>components<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowClassName</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'editable-row'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(u){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(O){return typeof O}:function(O){return O&&typeof Symbol=="function"&&O.constructor===Symbol&&O!==Symbol.prototype?"symbol":typeof O},C(u)}var g=l(12),k=D(l(0)),r=["index"],z=["title","editable","children","dataIndex","record","handleSave"];function B(u){if(typeof WeakMap!="function")return null;var O=new WeakMap,K=new WeakMap;return(B=function(j){return j?K:O})(u)}function D(u,O){if(!O&&u&&u.__esModule)return u;if(u===null||C(u)!=="object"&&typeof u!="function")return{default:u};var K=B(O);if(K&&K.has(u))return K.get(u);var Q={},j=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var G in u)if(G!=="default"&&Object.prototype.hasOwnProperty.call(u,G)){var nn=j?Object.getOwnPropertyDescriptor(u,G):null;nn&&(nn.get||nn.set)?Object.defineProperty(Q,G,nn):Q[G]=u[G]}return Q.default=u,K&&K.set(u,Q),Q}function P(u){return E(u)||H(u)||a(u)||T()}function T(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function H(u){if(typeof Symbol!="undefined"&&u[Symbol.iterator]!=null||u["@@iterator"]!=null)return Array.from(u)}function E(u){if(Array.isArray(u))return n(u)}function Y(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */Y=function(){return u};var u={},O=Object.prototype,K=O.hasOwnProperty,Q=typeof Symbol=="function"?Symbol:{},j=Q.iterator||"@@iterator",G=Q.asyncIterator||"@@asyncIterator",nn=Q.toStringTag||"@@toStringTag";function an(d,o,i){return Object.defineProperty(d,o,{value:i,enumerable:!0,configurable:!0,writable:!0}),d[o]}try{an({},"")}catch(d){an=function(i,v,A){return i[v]=A}}function cn(d,o,i,v){var A=o&&o.prototype instanceof fn?o:fn,V=Object.create(A.prototype),sn=new x(v||[]);return V._invoke=function(tn,s,pn){var X="suspendedStart";return function(F,on){if(X==="executing")throw new Error("Generator is already running");if(X==="completed"){if(F==="throw")throw on;return I()}for(pn.method=F,pn.arg=on;;){var en=pn.delegate;if(en){var ln=Mn(en,pn);if(ln){if(ln===gn)continue;return ln}}if(pn.method==="next")pn.sent=pn._sent=pn.arg;else if(pn.method==="throw"){if(X==="suspendedStart")throw X="completed",pn.arg;pn.dispatchException(pn.arg)}else pn.method==="return"&&pn.abrupt("return",pn.arg);X="executing";var hn=mn(tn,s,pn);if(hn.type==="normal"){if(X=pn.done?"completed":"suspendedYield",hn.arg===gn)continue;return{value:hn.arg,done:pn.done}}hn.type==="throw"&&(X="completed",pn.method="throw",pn.arg=hn.arg)}}}(d,i,sn),V}function mn(d,o,i){try{return{type:"normal",arg:d.call(o,i)}}catch(v){return{type:"throw",arg:v}}}u.wrap=cn;var gn={};function fn(){}function yn(){}function wn(){}var Cn={};an(Cn,j,function(){return this});var Pn=Object.getPrototypeOf,Ln=Pn&&Pn(Pn(M([])));Ln&&Ln!==O&&K.call(Ln,j)&&(Cn=Ln);var Tn=wn.prototype=fn.prototype=Object.create(Cn);function An(d){["next","throw","return"].forEach(function(o){an(d,o,function(i){return this._invoke(o,i)})})}function En(d,o){function i(A,V,sn,tn){var s=mn(d[A],d,V);if(s.type!=="throw"){var pn=s.arg,X=pn.value;return X&&C(X)=="object"&&K.call(X,"__await")?o.resolve(X.__await).then(function(F){i("next",F,sn,tn)},function(F){i("throw",F,sn,tn)}):o.resolve(X).then(function(F){pn.value=F,sn(pn)},function(F){return i("throw",F,sn,tn)})}tn(s.arg)}var v;this._invoke=function(A,V){function sn(){return new o(function(tn,s){i(A,V,tn,s)})}return v=v?v.then(sn,sn):sn()}}function Mn(d,o){var i=d.iterator[o.method];if(i===void 0){if(o.delegate=null,o.method==="throw"){if(d.iterator.return&&(o.method="return",o.arg=void 0,Mn(d,o),o.method==="throw"))return gn;o.method="throw",o.arg=new TypeError("The iterator does not provide a 'throw' method")}return gn}var v=mn(i,d.iterator,o.arg);if(v.type==="throw")return o.method="throw",o.arg=v.arg,o.delegate=null,gn;var A=v.arg;return A?A.done?(o[d.resultName]=A.value,o.next=d.nextLoc,o.method!=="return"&&(o.method="next",o.arg=void 0),o.delegate=null,gn):A:(o.method="throw",o.arg=new TypeError("iterator result is not an object"),o.delegate=null,gn)}function Jn(d){var o={tryLoc:d[0]};1 in d&&(o.catchLoc=d[1]),2 in d&&(o.finallyLoc=d[2],o.afterLoc=d[3]),this.tryEntries.push(o)}function q(d){var o=d.completion||{};o.type="normal",delete o.arg,d.completion=o}function x(d){this.tryEntries=[{tryLoc:"root"}],d.forEach(Jn,this),this.reset(!0)}function M(d){if(d){var o=d[j];if(o)return o.call(d);if(typeof d.next=="function")return d;if(!isNaN(d.length)){var i=-1,v=function A(){for(;++i<d.length;)if(K.call(d,i))return A.value=d[i],A.done=!1,A;return A.value=void 0,A.done=!0,A};return v.next=v}}return{next:I}}function I(){return{value:void 0,done:!0}}return yn.prototype=wn,an(Tn,"constructor",wn),an(wn,"constructor",yn),yn.displayName=an(wn,nn,"GeneratorFunction"),u.isGeneratorFunction=function(d){var o=typeof d=="function"&&d.constructor;return!!o&&(o===yn||(o.displayName||o.name)==="GeneratorFunction")},u.mark=function(d){return Object.setPrototypeOf?Object.setPrototypeOf(d,wn):(d.__proto__=wn,an(d,nn,"GeneratorFunction")),d.prototype=Object.create(Tn),d},u.awrap=function(d){return{__await:d}},An(En.prototype),an(En.prototype,G,function(){return this}),u.AsyncIterator=En,u.async=function(d,o,i,v,A){A===void 0&&(A=Promise);var V=new En(cn(d,o,i,v),A);return u.isGeneratorFunction(o)?V:V.next().then(function(sn){return sn.done?sn.value:V.next()})},An(Tn),an(Tn,nn,"Generator"),an(Tn,j,function(){return this}),an(Tn,"toString",function(){return"[object Generator]"}),u.keys=function(d){var o=[];for(var i in d)o.push(i);return o.reverse(),function v(){for(;o.length;){var A=o.pop();if(A in d)return v.value=A,v.done=!1,v}return v.done=!0,v}},u.values=M,x.prototype={constructor:x,reset:function(o){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(q),!o)for(var i in this)i.charAt(0)==="t"&&K.call(this,i)&&!isNaN(+i.slice(1))&&(this[i]=void 0)},stop:function(){this.done=!0;var o=this.tryEntries[0].completion;if(o.type==="throw")throw o.arg;return this.rval},dispatchException:function(o){if(this.done)throw o;var i=this;function v(pn,X){return sn.type="throw",sn.arg=o,i.next=pn,X&&(i.method="next",i.arg=void 0),!!X}for(var A=this.tryEntries.length-1;A>=0;--A){var V=this.tryEntries[A],sn=V.completion;if(V.tryLoc==="root")return v("end");if(V.tryLoc<=this.prev){var tn=K.call(V,"catchLoc"),s=K.call(V,"finallyLoc");if(tn&&s){if(this.prev<V.catchLoc)return v(V.catchLoc,!0);if(this.prev<V.finallyLoc)return v(V.finallyLoc)}else if(tn){if(this.prev<V.catchLoc)return v(V.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<V.finallyLoc)return v(V.finallyLoc)}}}},abrupt:function(o,i){for(var v=this.tryEntries.length-1;v>=0;--v){var A=this.tryEntries[v];if(A.tryLoc<=this.prev&&K.call(A,"finallyLoc")&&this.prev<A.finallyLoc){var V=A;break}}V&&(o==="break"||o==="continue")&&V.tryLoc<=i&&i<=V.finallyLoc&&(V=null);var sn=V?V.completion:{};return sn.type=o,sn.arg=i,V?(this.method="next",this.next=V.finallyLoc,gn):this.complete(sn)},complete:function(o,i){if(o.type==="throw")throw o.arg;return o.type==="break"||o.type==="continue"?this.next=o.arg:o.type==="return"?(this.rval=this.arg=o.arg,this.method="return",this.next="end"):o.type==="normal"&&i&&(this.next=i),gn},finish:function(o){for(var i=this.tryEntries.length-1;i>=0;--i){var v=this.tryEntries[i];if(v.finallyLoc===o)return this.complete(v.completion,v.afterLoc),q(v),gn}},catch:function(o){for(var i=this.tryEntries.length-1;i>=0;--i){var v=this.tryEntries[i];if(v.tryLoc===o){var A=v.completion;if(A.type==="throw"){var V=A.arg;q(v)}return V}}throw new Error("illegal catch attempt")},delegateYield:function(o,i,v){return this.delegate={iterator:M(o),resultName:i,nextLoc:v},this.method==="next"&&(this.arg=void 0),gn}},u}function W(u,O){var K=Object.keys(u);if(Object.getOwnPropertySymbols){var Q=Object.getOwnPropertySymbols(u);O&&(Q=Q.filter(function(j){return Object.getOwnPropertyDescriptor(u,j).enumerable})),K.push.apply(K,Q)}return K}function S(u){for(var O=1;O<arguments.length;O++){var K=arguments[O]!=null?arguments[O]:{};O%2?W(Object(K),!0).forEach(function(Q){t(u,Q,K[Q])}):Object.getOwnPropertyDescriptors?Object.defineProperties(u,Object.getOwnPropertyDescriptors(K)):W(Object(K)).forEach(function(Q){Object.defineProperty(u,Q,Object.getOwnPropertyDescriptor(K,Q))})}return u}function N(u,O,K,Q,j,G,nn){try{var an=u[G](nn),cn=an.value}catch(mn){K(mn);return}an.done?O(cn):Promise.resolve(cn).then(Q,j)}function R(u){return function(){var O=this,K=arguments;return new Promise(function(Q,j){var G=u.apply(O,K);function nn(cn){N(G,Q,j,nn,an,"next",cn)}function an(cn){N(G,Q,j,nn,an,"throw",cn)}nn(void 0)})}}function t(u,O,K){return O in u?Object.defineProperty(u,O,{value:K,enumerable:!0,configurable:!0,writable:!0}):u[O]=K,u}function e(u,O){return y(u)||c(u,O)||a(u,O)||h()}function h(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function a(u,O){if(!!u){if(typeof u=="string")return n(u,O);var K=Object.prototype.toString.call(u).slice(8,-1);if(K==="Object"&&u.constructor&&(K=u.constructor.name),K==="Map"||K==="Set")return Array.from(u);if(K==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(K))return n(u,O)}}function n(u,O){(O==null||O>u.length)&&(O=u.length);for(var K=0,Q=new Array(O);K<O;K++)Q[K]=u[K];return Q}function c(u,O){var K=u==null?null:typeof Symbol!="undefined"&&u[Symbol.iterator]||u["@@iterator"];if(K!=null){var Q=[],j=!0,G=!1,nn,an;try{for(K=K.call(u);!(j=(nn=K.next()).done)&&(Q.push(nn.value),!(O&&Q.length===O));j=!0);}catch(cn){G=!0,an=cn}finally{try{!j&&K.return!=null&&K.return()}finally{if(G)throw an}}return Q}}function y(u){if(Array.isArray(u))return u}function J(u,O){if(u==null)return{};var K=b(u,O),Q,j;if(Object.getOwnPropertySymbols){var G=Object.getOwnPropertySymbols(u);for(j=0;j<G.length;j++)Q=G[j],!(O.indexOf(Q)>=0)&&(!Object.prototype.propertyIsEnumerable.call(u,Q)||(K[Q]=u[Q]))}return K}function b(u,O){if(u==null)return{};var K={},Q=Object.keys(u),j,G;for(G=0;G<Q.length;G++)j=Q[G],!(O.indexOf(j)>=0)&&(K[j]=u[j]);return K}var p=k.default.createContext(null),w=function(O){var K=O.index,Q=J(O,r),j=g.Form.useForm(),G=e(j,1),nn=G[0];return k.default.createElement(g.Form,{form:nn,component:!1},k.default.createElement(p.Provider,{value:nn},k.default.createElement("tr",Q)))},m=function(O){var K=O.title,Q=O.editable,j=O.children,G=O.dataIndex,nn=O.record,an=O.handleSave,cn=J(O,z),mn=(0,k.useState)(!1),gn=e(mn,2),fn=gn[0],yn=gn[1],wn=(0,k.useRef)(null),Cn=(0,k.useContext)(p);(0,k.useEffect)(function(){fn&&wn.current.focus()},[fn]);var Pn=function(){yn(!fn),Cn.setFieldsValue(t({},G,nn[G]))},Ln=function(){var An=R(Y().mark(function En(){var Mn;return Y().wrap(function(q){for(;;)switch(q.prev=q.next){case 0:return q.prev=0,q.next=3,Cn.validateFields();case 3:Mn=q.sent,Pn(),an(S(S({},nn),Mn)),q.next=11;break;case 8:q.prev=8,q.t0=q.catch(0),console.log("Save failed:",q.t0);case 11:case"end":return q.stop()}},En,null,[[0,8]])}));return function(){return An.apply(this,arguments)}}(),Tn=j;return Q&&(Tn=fn?k.default.createElement(g.Form.Item,{style:{margin:0},name:G,rules:[{required:!0,message:"".concat(K," is required.")}]},k.default.createElement(g.Input,{ref:wn,onPressEnter:Ln,onBlur:Ln})):k.default.createElement("div",{className:"editable-cell-value-wrap",style:{paddingRight:24},onClick:Pn},j)),k.default.createElement("td",cn,Tn)},L=function(){var O=(0,k.useState)([{key:"0",name:"Edward King 0",age:"32",address:"London, Park Lane no. 0"},{key:"1",name:"Edward King 1",age:"32",address:"London, Park Lane no. 1"}]),K=e(O,2),Q=K[0],j=K[1],G=(0,k.useState)(2),nn=e(G,2),an=nn[0],cn=nn[1],mn=function(Ln){var Tn=Q.filter(function(An){return An.key!==Ln});j(Tn)},gn=[{title:"name",dataIndex:"name",width:"30%",editable:!0},{title:"age",dataIndex:"age"},{title:"address",dataIndex:"address"},{title:"operation",dataIndex:"operation",render:function(Ln,Tn){return Q.length>=1?k.default.createElement(g.Popconfirm,{title:"Sure to delete?",onConfirm:function(){return mn(Tn.key)}},k.default.createElement("a",null,"Delete")):null}}],fn=function(){var Ln={key:an,name:"Edward King ".concat(an),age:"32",address:"London, Park Lane no. ".concat(an)};j([].concat(P(Q),[Ln])),cn(an+1)},yn=function(Ln){var Tn=P(Q),An=Tn.findIndex(function(Mn){return Ln.key===Mn.key}),En=Tn[An];Tn.splice(An,1,S(S({},En),Ln)),j(Tn)},wn={body:{row:w,cell:m}},Cn=gn.map(function(Pn){return Pn.editable?S(S({},Pn),{},{onCell:function(Tn){return{record:Tn,editable:Pn.editable,dataIndex:Pn.dataIndex,title:Pn.title,handleSave:yn}}}):Pn});return k.default.createElement("div",null,k.default.createElement(g.Button,{onClick:fn,type:"primary",style:{marginBottom:16}},"Add a row"),k.default.createElement(g.Table,{components:wn,rowClassName:function(){return"editable-row"},bordered:!0,dataSource:Q,columns:Cn}))},f=L;return Z.createElement(f)},style:`.editable-cell {
  position: relative;
}

.editable-cell-value-wrap {
  padding: 5px 12px;
  cursor: pointer;
}

.editable-row:hover .editable-cell-value-wrap {
  padding: 4px 11px;
  border: 1px solid #d9d9d9;
  border-radius: 2px;
}

[data-theme='dark'] .editable-row:hover .editable-cell-value-wrap {
  border: 1px solid #434343;
}`,highlightedStyle:`<span class="token selector"><span class="token class">.editable-cell</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">5</span>px <span class="token number">12</span>px<span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.editable-row</span><span class="token pseudo-class">:hover</span> <span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">4</span>px <span class="token number">11</span>px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#d9d9d9</span><span class="token punctuation">;</span>
  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token attribute">[data-theme='dark']</span> <span class="token class">.editable-row</span><span class="token pseudo-class">:hover</span> <span class="token class">.editable-cell-value-wrap</span> </span><span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#434343</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4217:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5E26\u884C\u7F16\u8F91\u529F\u80FD\u7684\u8868\u683C\u3002"],["blockquote",["p","\u{1F6CE}\uFE0F \u60F3\u8981 3 \u5206\u949F\u5B9E\u73B0\uFF1F\u8BD5\u8BD5 ",["a",{title:null,href:"https://procomponents.ant.design/components/editable-table"},"ProTable \u7684\u53EF\u7F16\u8F91\u8868\u683C"],"\uFF01"]]],"en-US":[["p","Table with editable rows."]]},meta:{order:24,title:{"en-US":"Editable Rows","zh-CN":"\u53EF\u7F16\u8F91\u884C"},filename:"components/table/demo/edit-row.md",id:"components-table-demo-edit-row"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Typography } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface Item {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> originData<span class="token punctuation">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>
  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edrward \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London Park no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}
interface EditableCellProps extends React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span> {
  editing<span class="token punctuation">:</span> boolean<span class="token comment" spellcheck="true">;</span>
  dataIndex<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  title<span class="token punctuation">:</span> any<span class="token comment" spellcheck="true">;</span>
  inputType<span class="token punctuation">:</span> <span class="token string">'number'</span> | <span class="token string">'text'</span><span class="token comment" spellcheck="true">;</span>
  record<span class="token punctuation">:</span> Item<span class="token comment" spellcheck="true">;</span>
  index<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  children<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> EditableCell<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC<span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span>{
  editing<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  title<span class="token punctuation">,</span>
  inputType<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps
}<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'number'</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>InputNumber <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>Input <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>td {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps}<span class="token operator">></span>
      {editing <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item
          name<span class="token operator">=</span>{dataIndex}
          style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}
          rules<span class="token operator">=</span>{<span class="token punctuation">[</span>
            {
              required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              message<span class="token punctuation">:</span> \`Please Input \${title}!\`<span class="token punctuation">,</span>
            }<span class="token punctuation">,</span>
          <span class="token punctuation">]</span>}
        <span class="token operator">></span>
          {inputNode}
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
      <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>
        children
      <span class="token punctuation">)</span>}
    <span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> isEditing <span class="token operator">=</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>key <span class="token operator">==</span><span class="token operator">=</span> editingKey<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> edit <span class="token operator">=</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> Partial<span class="token operator">&lt;</span>Item<span class="token operator">></span> <span class="token operator">&amp;</span> { key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span>{ name<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> age<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> address<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>record }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> cancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> save <span class="token operator">=</span> async <span class="token punctuation">(</span>key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    try {
      <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">(</span>await form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> as Item<span class="token comment" spellcheck="true">;</span>

      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> key <span class="token operator">==</span><span class="token operator">=</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> {
        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> {
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>item<span class="token punctuation">,</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>row<span class="token punctuation">,</span>
        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      } <span class="token keyword">else</span> {
        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }
    } catch <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Validate Failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'25%'</span><span class="token punctuation">,</span>
      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'15%'</span><span class="token punctuation">,</span>
      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
      editable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">:</span> any<span class="token punctuation">,</span> record<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        return editable <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>span<span class="token operator">></span>
            <span class="token operator">&lt;</span>Typography<span class="token punctuation">.</span>Link onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span>} style<span class="token operator">=</span>{{ marginRight<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>
              Save
            <span class="token operator">&lt;</span><span class="token operator">/</span>Typography<span class="token punctuation">.</span>Link<span class="token operator">></span>
            <span class="token operator">&lt;</span>Popconfirm title<span class="token operator">=</span><span class="token string">"Sure to cancel?"</span> onConfirm<span class="token operator">=</span>{cancel}<span class="token operator">></span>
              <span class="token operator">&lt;</span>a<span class="token operator">></span>Cancel<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Popconfirm<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
        <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>Typography<span class="token punctuation">.</span>Link disabled<span class="token operator">=</span>{editingKey !<span class="token operator">==</span> <span class="token string">''</span>} onClick<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>}<span class="token operator">></span>
            Edit
          <span class="token operator">&lt;</span><span class="token operator">/</span>Typography<span class="token punctuation">.</span>Link<span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> {
      return col<span class="token comment" spellcheck="true">;</span>
    }
    return {
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>col<span class="token punctuation">,</span>
      onCell<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
        record<span class="token punctuation">,</span>
        inputType<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'age'</span> <span class="token operator">?</span> <span class="token string">'number'</span> <span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        title<span class="token punctuation">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        editing<span class="token punctuation">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>
      }<span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Form form<span class="token operator">=</span>{form} component<span class="token operator">=</span>{<span class="token boolean">false</span>}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        components<span class="token operator">=</span>{{
          body<span class="token punctuation">:</span> {
            cell<span class="token punctuation">:</span> EditableCell<span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        }}
        bordered
        dataSource<span class="token operator">=</span>{data}
        columns<span class="token operator">=</span>{mergedColumns}
        rowClassName<span class="token operator">=</span><span class="token string">"editable-row"</span>
        pagination<span class="token operator">=</span>{{
          onChange<span class="token punctuation">:</span> cancel<span class="token punctuation">,</span>
        }}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">Item</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> originData<span class="token operator">:</span> Item<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">EditableCellProps</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>HTMLAttributes</span><span class="token operator">&lt;</span>HTMLElement<span class="token operator">></span> <span class="token punctuation">{</span>
  editing<span class="token operator">:</span> boolean<span class="token punctuation">;</span>
  dataIndex<span class="token operator">:</span> string<span class="token punctuation">;</span>
  title<span class="token operator">:</span> any<span class="token punctuation">;</span>
  inputType<span class="token operator">:</span> <span class="token string">'number'</span> <span class="token operator">|</span> <span class="token string">'text'</span><span class="token punctuation">;</span>
  record<span class="token operator">:</span> Item<span class="token punctuation">;</span>
  index<span class="token operator">:</span> number<span class="token punctuation">;</span>
  children<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> EditableCell<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>EditableCellProps<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  editing<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  title<span class="token punctuation">,</span>
  inputType<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  <span class="token operator">...</span>restProps
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">===</span> <span class="token string">'number'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputNumber</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>editing <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>
          <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              required<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Please Input </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>inputNode<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        children
      <span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">isEditing</span> <span class="token operator">=</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>key <span class="token operator">===</span> editingKey<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">edit</span> <span class="token operator">=</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>Item<span class="token operator">></span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span> key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> address<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token operator">...</span>record <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> Item<span class="token punctuation">;</span>

      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>item <span class="token operator">=></span> key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token operator">...</span>item<span class="token punctuation">,</span>
          <span class="token operator">...</span>row<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Validate Failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'25%'</span><span class="token punctuation">,</span>
      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'15%'</span><span class="token punctuation">,</span>
      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
      editable<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token operator">:</span> any<span class="token punctuation">,</span> record<span class="token operator">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> editable <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Link</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              Save
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Link</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sure to cancel?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Link</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>editingKey <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            Edit
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Link</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>col <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> col<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>col<span class="token punctuation">,</span>
      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> Item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        record<span class="token punctuation">,</span>
        inputType<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">'age'</span> <span class="token operator">?</span> <span class="token string">'number'</span> <span class="token operator">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        title<span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        editing<span class="token operator">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          body<span class="token operator">:</span> <span class="token punctuation">{</span>
            cell<span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editable-row<span class="token punctuation">"</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          onChange<span class="token operator">:</span> cancel<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> InputNumber<span class="token punctuation">,</span> Popconfirm<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> originData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  originData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">EditableCell</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>
  editing<span class="token punctuation">,</span>
  dataIndex<span class="token punctuation">,</span>
  title<span class="token punctuation">,</span>
  inputType<span class="token punctuation">,</span>
  record<span class="token punctuation">,</span>
  index<span class="token punctuation">,</span>
  children<span class="token punctuation">,</span>
  <span class="token operator">...</span>restProps
<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputNode <span class="token operator">=</span> inputType <span class="token operator">===</span> <span class="token string">'number'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputNumber</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>editing <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span>
          <span class="token attr-name">name</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataIndex<span class="token punctuation">}</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">rules</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
              <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Please Input </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>inputNode<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        children
      <span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>form<span class="token punctuation">]</span> <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> setData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>originData<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>editingKey<span class="token punctuation">,</span> setEditingKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">isEditing</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>key <span class="token operator">===</span> editingKey<span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">edit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    form<span class="token punctuation">.</span><span class="token function">setFieldsValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
      <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
      <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
      <span class="token operator">...</span>record<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">cancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token keyword">await</span> form<span class="token punctuation">.</span><span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> newData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>data<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> newData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> key <span class="token operator">===</span> item<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> item <span class="token operator">=</span> newData<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
        newData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>item<span class="token punctuation">,</span> <span class="token operator">...</span>row <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        newData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setData</span><span class="token punctuation">(</span>newData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setEditingKey</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>errInfo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Validate Failed:'</span><span class="token punctuation">,</span> errInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'25%'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'15%'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">editable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> editable <span class="token operator">=</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> editable <span class="token operator">?</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Link</span></span>
              <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">save</span><span class="token punctuation">(</span>record<span class="token punctuation">.</span>key<span class="token punctuation">)</span><span class="token punctuation">}</span></span>
              <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
                <span class="token literal-property property">marginRight</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
            <span class="token punctuation">></span></span>
              Save
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Link</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Popconfirm</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Sure to cancel?<span class="token punctuation">"</span></span> <span class="token attr-name">onConfirm</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>cancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Popconfirm</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Typography.Link</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>editingKey <span class="token operator">!==</span> <span class="token string">''</span><span class="token punctuation">}</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">edit</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
            Edit
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Typography.Link</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">col</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>col<span class="token punctuation">.</span>editable<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> col<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>col<span class="token punctuation">,</span>
      <span class="token function-variable function">onCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        record<span class="token punctuation">,</span>
        <span class="token literal-property property">inputType</span><span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">'age'</span> <span class="token operator">?</span> <span class="token string">'number'</span> <span class="token operator">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> col<span class="token punctuation">.</span>dataIndex<span class="token punctuation">,</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> col<span class="token punctuation">.</span>title<span class="token punctuation">,</span>
        <span class="token literal-property property">editing</span><span class="token operator">:</span> <span class="token function">isEditing</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span> <span class="token attr-name">component</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">cell</span><span class="token operator">:</span> EditableCell<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowClassName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>editable-row<span class="token punctuation">"</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">onChange</span><span class="token operator">:</span> cancel<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(f){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(u){return typeof u}:function(u){return u&&typeof Symbol=="function"&&u.constructor===Symbol&&u!==Symbol.prototype?"symbol":typeof u},C(f)}var g=l(12),k=B(l(0)),r=["editing","dataIndex","title","inputType","record","index","children"];function z(f){if(typeof WeakMap!="function")return null;var u=new WeakMap,O=new WeakMap;return(z=function(Q){return Q?O:u})(f)}function B(f,u){if(!u&&f&&f.__esModule)return f;if(f===null||C(f)!=="object"&&typeof f!="function")return{default:f};var O=z(u);if(O&&O.has(f))return O.get(f);var K={},Q=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var j in f)if(j!=="default"&&Object.prototype.hasOwnProperty.call(f,j)){var G=Q?Object.getOwnPropertyDescriptor(f,j):null;G&&(G.get||G.set)?Object.defineProperty(K,j,G):K[j]=f[j]}return K.default=f,O&&O.set(f,K),K}function D(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */D=function(){return f};var f={},u=Object.prototype,O=u.hasOwnProperty,K=typeof Symbol=="function"?Symbol:{},Q=K.iterator||"@@iterator",j=K.asyncIterator||"@@asyncIterator",G=K.toStringTag||"@@toStringTag";function nn(I,d,o){return Object.defineProperty(I,d,{value:o,enumerable:!0,configurable:!0,writable:!0}),I[d]}try{nn({},"")}catch(I){nn=function(o,i,v){return o[i]=v}}function an(I,d,o,i){var v=d&&d.prototype instanceof gn?d:gn,A=Object.create(v.prototype),V=new q(i||[]);return A._invoke=function(sn,tn,s){var pn="suspendedStart";return function(X,F){if(pn==="executing")throw new Error("Generator is already running");if(pn==="completed"){if(X==="throw")throw F;return M()}for(s.method=X,s.arg=F;;){var on=s.delegate;if(on){var en=En(on,s);if(en){if(en===mn)continue;return en}}if(s.method==="next")s.sent=s._sent=s.arg;else if(s.method==="throw"){if(pn==="suspendedStart")throw pn="completed",s.arg;s.dispatchException(s.arg)}else s.method==="return"&&s.abrupt("return",s.arg);pn="executing";var ln=cn(sn,tn,s);if(ln.type==="normal"){if(pn=s.done?"completed":"suspendedYield",ln.arg===mn)continue;return{value:ln.arg,done:s.done}}ln.type==="throw"&&(pn="completed",s.method="throw",s.arg=ln.arg)}}}(I,o,V),A}function cn(I,d,o){try{return{type:"normal",arg:I.call(d,o)}}catch(i){return{type:"throw",arg:i}}}f.wrap=an;var mn={};function gn(){}function fn(){}function yn(){}var wn={};nn(wn,Q,function(){return this});var Cn=Object.getPrototypeOf,Pn=Cn&&Cn(Cn(x([])));Pn&&Pn!==u&&O.call(Pn,Q)&&(wn=Pn);var Ln=yn.prototype=gn.prototype=Object.create(wn);function Tn(I){["next","throw","return"].forEach(function(d){nn(I,d,function(o){return this._invoke(d,o)})})}function An(I,d){function o(v,A,V,sn){var tn=cn(I[v],I,A);if(tn.type!=="throw"){var s=tn.arg,pn=s.value;return pn&&C(pn)=="object"&&O.call(pn,"__await")?d.resolve(pn.__await).then(function(X){o("next",X,V,sn)},function(X){o("throw",X,V,sn)}):d.resolve(pn).then(function(X){s.value=X,V(s)},function(X){return o("throw",X,V,sn)})}sn(tn.arg)}var i;this._invoke=function(v,A){function V(){return new d(function(sn,tn){o(v,A,sn,tn)})}return i=i?i.then(V,V):V()}}function En(I,d){var o=I.iterator[d.method];if(o===void 0){if(d.delegate=null,d.method==="throw"){if(I.iterator.return&&(d.method="return",d.arg=void 0,En(I,d),d.method==="throw"))return mn;d.method="throw",d.arg=new TypeError("The iterator does not provide a 'throw' method")}return mn}var i=cn(o,I.iterator,d.arg);if(i.type==="throw")return d.method="throw",d.arg=i.arg,d.delegate=null,mn;var v=i.arg;return v?v.done?(d[I.resultName]=v.value,d.next=I.nextLoc,d.method!=="return"&&(d.method="next",d.arg=void 0),d.delegate=null,mn):v:(d.method="throw",d.arg=new TypeError("iterator result is not an object"),d.delegate=null,mn)}function Mn(I){var d={tryLoc:I[0]};1 in I&&(d.catchLoc=I[1]),2 in I&&(d.finallyLoc=I[2],d.afterLoc=I[3]),this.tryEntries.push(d)}function Jn(I){var d=I.completion||{};d.type="normal",delete d.arg,I.completion=d}function q(I){this.tryEntries=[{tryLoc:"root"}],I.forEach(Mn,this),this.reset(!0)}function x(I){if(I){var d=I[Q];if(d)return d.call(I);if(typeof I.next=="function")return I;if(!isNaN(I.length)){var o=-1,i=function v(){for(;++o<I.length;)if(O.call(I,o))return v.value=I[o],v.done=!1,v;return v.value=void 0,v.done=!0,v};return i.next=i}}return{next:M}}function M(){return{value:void 0,done:!0}}return fn.prototype=yn,nn(Ln,"constructor",yn),nn(yn,"constructor",fn),fn.displayName=nn(yn,G,"GeneratorFunction"),f.isGeneratorFunction=function(I){var d=typeof I=="function"&&I.constructor;return!!d&&(d===fn||(d.displayName||d.name)==="GeneratorFunction")},f.mark=function(I){return Object.setPrototypeOf?Object.setPrototypeOf(I,yn):(I.__proto__=yn,nn(I,G,"GeneratorFunction")),I.prototype=Object.create(Ln),I},f.awrap=function(I){return{__await:I}},Tn(An.prototype),nn(An.prototype,j,function(){return this}),f.AsyncIterator=An,f.async=function(I,d,o,i,v){v===void 0&&(v=Promise);var A=new An(an(I,d,o,i),v);return f.isGeneratorFunction(d)?A:A.next().then(function(V){return V.done?V.value:A.next()})},Tn(Ln),nn(Ln,G,"Generator"),nn(Ln,Q,function(){return this}),nn(Ln,"toString",function(){return"[object Generator]"}),f.keys=function(I){var d=[];for(var o in I)d.push(o);return d.reverse(),function i(){for(;d.length;){var v=d.pop();if(v in I)return i.value=v,i.done=!1,i}return i.done=!0,i}},f.values=x,q.prototype={constructor:q,reset:function(d){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(Jn),!d)for(var o in this)o.charAt(0)==="t"&&O.call(this,o)&&!isNaN(+o.slice(1))&&(this[o]=void 0)},stop:function(){this.done=!0;var d=this.tryEntries[0].completion;if(d.type==="throw")throw d.arg;return this.rval},dispatchException:function(d){if(this.done)throw d;var o=this;function i(s,pn){return V.type="throw",V.arg=d,o.next=s,pn&&(o.method="next",o.arg=void 0),!!pn}for(var v=this.tryEntries.length-1;v>=0;--v){var A=this.tryEntries[v],V=A.completion;if(A.tryLoc==="root")return i("end");if(A.tryLoc<=this.prev){var sn=O.call(A,"catchLoc"),tn=O.call(A,"finallyLoc");if(sn&&tn){if(this.prev<A.catchLoc)return i(A.catchLoc,!0);if(this.prev<A.finallyLoc)return i(A.finallyLoc)}else if(sn){if(this.prev<A.catchLoc)return i(A.catchLoc,!0)}else{if(!tn)throw new Error("try statement without catch or finally");if(this.prev<A.finallyLoc)return i(A.finallyLoc)}}}},abrupt:function(d,o){for(var i=this.tryEntries.length-1;i>=0;--i){var v=this.tryEntries[i];if(v.tryLoc<=this.prev&&O.call(v,"finallyLoc")&&this.prev<v.finallyLoc){var A=v;break}}A&&(d==="break"||d==="continue")&&A.tryLoc<=o&&o<=A.finallyLoc&&(A=null);var V=A?A.completion:{};return V.type=d,V.arg=o,A?(this.method="next",this.next=A.finallyLoc,mn):this.complete(V)},complete:function(d,o){if(d.type==="throw")throw d.arg;return d.type==="break"||d.type==="continue"?this.next=d.arg:d.type==="return"?(this.rval=this.arg=d.arg,this.method="return",this.next="end"):d.type==="normal"&&o&&(this.next=o),mn},finish:function(d){for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o];if(i.finallyLoc===d)return this.complete(i.completion,i.afterLoc),Jn(i),mn}},catch:function(d){for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o];if(i.tryLoc===d){var v=i.completion;if(v.type==="throw"){var A=v.arg;Jn(i)}return A}}throw new Error("illegal catch attempt")},delegateYield:function(d,o,i){return this.delegate={iterator:x(d),resultName:o,nextLoc:i},this.method==="next"&&(this.arg=void 0),mn}},f}function P(f){return E(f)||H(f)||h(f)||T()}function T(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function H(f){if(typeof Symbol!="undefined"&&f[Symbol.iterator]!=null||f["@@iterator"]!=null)return Array.from(f)}function E(f){if(Array.isArray(f))return a(f)}function Y(f,u,O,K,Q,j,G){try{var nn=f[j](G),an=nn.value}catch(cn){O(cn);return}nn.done?u(an):Promise.resolve(an).then(K,Q)}function W(f){return function(){var u=this,O=arguments;return new Promise(function(K,Q){var j=f.apply(u,O);function G(an){Y(j,K,Q,G,nn,"next",an)}function nn(an){Y(j,K,Q,G,nn,"throw",an)}G(void 0)})}}function S(f,u){var O=Object.keys(f);if(Object.getOwnPropertySymbols){var K=Object.getOwnPropertySymbols(f);u&&(K=K.filter(function(Q){return Object.getOwnPropertyDescriptor(f,Q).enumerable})),O.push.apply(O,K)}return O}function N(f){for(var u=1;u<arguments.length;u++){var O=arguments[u]!=null?arguments[u]:{};u%2?S(Object(O),!0).forEach(function(K){R(f,K,O[K])}):Object.getOwnPropertyDescriptors?Object.defineProperties(f,Object.getOwnPropertyDescriptors(O)):S(Object(O)).forEach(function(K){Object.defineProperty(f,K,Object.getOwnPropertyDescriptor(O,K))})}return f}function R(f,u,O){return u in f?Object.defineProperty(f,u,{value:O,enumerable:!0,configurable:!0,writable:!0}):f[u]=O,f}function t(f,u){return c(f)||n(f,u)||h(f,u)||e()}function e(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function h(f,u){if(!!f){if(typeof f=="string")return a(f,u);var O=Object.prototype.toString.call(f).slice(8,-1);if(O==="Object"&&f.constructor&&(O=f.constructor.name),O==="Map"||O==="Set")return Array.from(f);if(O==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(O))return a(f,u)}}function a(f,u){(u==null||u>f.length)&&(u=f.length);for(var O=0,K=new Array(u);O<u;O++)K[O]=f[O];return K}function n(f,u){var O=f==null?null:typeof Symbol!="undefined"&&f[Symbol.iterator]||f["@@iterator"];if(O!=null){var K=[],Q=!0,j=!1,G,nn;try{for(O=O.call(f);!(Q=(G=O.next()).done)&&(K.push(G.value),!(u&&K.length===u));Q=!0);}catch(an){j=!0,nn=an}finally{try{!Q&&O.return!=null&&O.return()}finally{if(j)throw nn}}return K}}function c(f){if(Array.isArray(f))return f}function y(f,u){if(f==null)return{};var O=J(f,u),K,Q;if(Object.getOwnPropertySymbols){var j=Object.getOwnPropertySymbols(f);for(Q=0;Q<j.length;Q++)K=j[Q],!(u.indexOf(K)>=0)&&(!Object.prototype.propertyIsEnumerable.call(f,K)||(O[K]=f[K]))}return O}function J(f,u){if(f==null)return{};var O={},K=Object.keys(f),Q,j;for(j=0;j<K.length;j++)Q=K[j],!(u.indexOf(Q)>=0)&&(O[Q]=f[Q]);return O}for(var b=[],p=0;p<100;p++)b.push({key:p.toString(),name:"Edrward ".concat(p),age:32,address:"London Park no. ".concat(p)});var w=function(u){var O=u.editing,K=u.dataIndex,Q=u.title,j=u.inputType,G=u.record,nn=u.index,an=u.children,cn=y(u,r),mn=j==="number"?k.default.createElement(g.InputNumber,null):k.default.createElement(g.Input,null);return k.default.createElement("td",cn,O?k.default.createElement(g.Form.Item,{name:K,style:{margin:0},rules:[{required:!0,message:"Please Input ".concat(Q,"!")}]},mn):an)},m=function(){var u=g.Form.useForm(),O=t(u,1),K=O[0],Q=(0,k.useState)(b),j=t(Q,2),G=j[0],nn=j[1],an=(0,k.useState)(""),cn=t(an,2),mn=cn[0],gn=cn[1],fn=function(An){return An.key===mn},yn=function(An){K.setFieldsValue(N({name:"",age:"",address:""},An)),gn(An.key)},wn=function(){gn("")},Cn=function(){var Tn=W(D().mark(function An(En){var Mn,Jn,q,x;return D().wrap(function(I){for(;;)switch(I.prev=I.next){case 0:return I.prev=0,I.next=3,K.validateFields();case 3:Mn=I.sent,Jn=P(G),q=Jn.findIndex(function(d){return En===d.key}),q>-1?(x=Jn[q],Jn.splice(q,1,N(N({},x),Mn)),nn(Jn),gn("")):(Jn.push(Mn),nn(Jn),gn("")),I.next=12;break;case 9:I.prev=9,I.t0=I.catch(0),console.log("Validate Failed:",I.t0);case 12:case"end":return I.stop()}},An,null,[[0,9]])}));return function(En){return Tn.apply(this,arguments)}}(),Pn=[{title:"name",dataIndex:"name",width:"25%",editable:!0},{title:"age",dataIndex:"age",width:"15%",editable:!0},{title:"address",dataIndex:"address",width:"40%",editable:!0},{title:"operation",dataIndex:"operation",render:function(An,En){var Mn=fn(En);return Mn?k.default.createElement("span",null,k.default.createElement(g.Typography.Link,{onClick:function(){return Cn(En.key)},style:{marginRight:8}},"Save"),k.default.createElement(g.Popconfirm,{title:"Sure to cancel?",onConfirm:wn},k.default.createElement("a",null,"Cancel"))):k.default.createElement(g.Typography.Link,{disabled:mn!=="",onClick:function(){return yn(En)}},"Edit")}}],Ln=Pn.map(function(Tn){return Tn.editable?N(N({},Tn),{},{onCell:function(En){return{record:En,inputType:Tn.dataIndex==="age"?"number":"text",dataIndex:Tn.dataIndex,title:Tn.title,editing:fn(En)}}}):Tn});return k.default.createElement(g.Form,{form:K,component:!1},k.default.createElement(g.Table,{components:{body:{cell:w}},bordered:!0,dataSource:G,columns:Ln,rowClassName:"editable-row",pagination:{onChange:wn}}))},L=m;return Z.createElement(L)},style:`.editable-row .ant-form-item-explain {
  position: absolute;
  top: 100%;
  font-size: 12px;
}`,highlightedStyle:`<span class="token selector"><span class="token class">.editable-row</span> <span class="token class">.ant-form-item-explain</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4218:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8BBE\u7F6E ",["code","column.ellipsis.showTitle"]," \u5173\u95ED\u5355\u5143\u683C\u5185\u5BB9\u81EA\u52A8\u7701\u7565\u540E\u9ED8\u8BA4\u7684 ",["code","title"]," \u63D0\u793A, \u4F7F\u7528 ",["code","Tooltip"]," \u66FF\u4EE3\u3002"]],"en-US":[["p","Ellipsis cell content via setting ",["code","column.ellipsis.showTitle"],", use ",["code","Tooltip"]," instead of the html title attribute."]]},meta:{order:29,title:{"en-US":"ellipsis column custom tooltip","zh-CN":"\u81EA\u5B9A\u4E49\u5355\u5143\u683C\u7701\u7565\u63D0\u793A"},filename:"components/table/demo/ellipsis-custom-tooltip.md",id:"components-table-demo-ellipsis-custom-tooltip"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table<span class="token punctuation">,</span> Tooltip } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> {
      showTitle<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> address <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Tooltip placement<span class="token operator">=</span><span class="token string">"topLeft"</span> title<span class="token operator">=</span>{address}<span class="token operator">></span>
        {address}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> {
      showTitle<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> address <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Tooltip placement<span class="token operator">=</span><span class="token string">"topLeft"</span> title<span class="token operator">=</span>{address}<span class="token operator">></span>
        {address}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> {
      showTitle<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> address <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Tooltip placement<span class="token operator">=</span><span class="token string">"topLeft"</span> title<span class="token operator">=</span>{address}<span class="token operator">></span>
        {address}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> {
      showTitle<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> address <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Tooltip placement<span class="token operator">=</span><span class="token string">"topLeft"</span> title<span class="token operator">=</span>{address}<span class="token operator">></span>
        {address}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tooltip <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token punctuation">{</span>
      showTitle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> address <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token punctuation">{</span>
      showTitle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> address <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token punctuation">{</span>
      showTitle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> address <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token punctuation">{</span>
      showTitle<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> address <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Tooltip <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">showTitle</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">address</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">showTitle</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">address</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">showTitle</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">address</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">showTitle</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">address</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">placement</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>topLeft<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>address<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>address<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",key:"name",render:function(T){return g.default.createElement("a",null,T)},width:150},{title:"Age",dataIndex:"age",key:"age",width:80},{title:"Address",dataIndex:"address",key:"address 1",ellipsis:{showTitle:!1},render:function(T){return g.default.createElement(C.Tooltip,{placement:"topLeft",title:T},T)}},{title:"Long Column Long Column Long Column",dataIndex:"address",key:"address 2",ellipsis:{showTitle:!1},render:function(T){return g.default.createElement(C.Tooltip,{placement:"topLeft",title:T},T)}},{title:"Long Column Long Column",dataIndex:"address",key:"address 3",ellipsis:{showTitle:!1},render:function(T){return g.default.createElement(C.Tooltip,{placement:"topLeft",title:T},T)}},{title:"Long Column",dataIndex:"address",key:"address 4",ellipsis:{showTitle:!1},render:function(T){return g.default.createElement(C.Tooltip,{placement:"topLeft",title:T},T)}}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park, New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 2 Lake Park, London No. 2 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park, Sidney No. 1 Lake Park"}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z})},D=B;return Z.createElement(D)}}},4219:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8BBE\u7F6E ",["code","column.ellipsis"]," \u53EF\u4EE5\u8BA9\u5355\u5143\u683C\u5185\u5BB9\u6839\u636E\u5BBD\u5EA6\u81EA\u52A8\u7701\u7565\u3002"],["blockquote",["p","\u5217\u5934\u7F29\u7565\u6682\u4E0D\u652F\u6301\u548C\u6392\u5E8F\u7B5B\u9009\u4E00\u8D77\u4F7F\u7528\u3002"]]],"en-US":[["p","Ellipsis cell content via setting ",["code","column.ellipsis"],"."],["blockquote",["p","Cannot ellipsis table header with sorters and filters for now."]]]},meta:{order:28,title:{"en-US":"ellipsis column","zh-CN":"\u5355\u5143\u683C\u81EA\u52A8\u7701\u7565"},filename:"components/table/demo/ellipsis.md",id:"components-table-demo-ellipsis"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column Long Column Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Long Column'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address 4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park, New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park, London No. 2 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park, Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",key:"name",render:function(T){return g.default.createElement("a",null,T)},width:150},{title:"Age",dataIndex:"age",key:"age",width:80},{title:"Address",dataIndex:"address",key:"address 1",ellipsis:!0},{title:"Long Column Long Column Long Column",dataIndex:"address",key:"address 2",ellipsis:!0},{title:"Long Column Long Column",dataIndex:"address",key:"address 3",ellipsis:!0},{title:"Long Column",dataIndex:"address",key:"address 4",ellipsis:!0}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park, New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 2 Lake Park, London No. 2 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park, Sidney No. 1 Lake Park",tags:["cool","teacher"]}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z})},D=B;return Z.createElement(D)}}},4220:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5F53\u8868\u683C\u5185\u5BB9\u8F83\u591A\u4E0D\u80FD\u4E00\u6B21\u6027\u5B8C\u5168\u5C55\u793A\u65F6\u3002"]],"en-US":[["p","When there's too much information to show and the table can't display all at once."]]},meta:{order:14,title:{"en-US":"Expandable Row","zh-CN":"\u53EF\u5C55\u5F00"},filename:"components/table/demo/expand.md",id:"components-table-demo-expand"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  description<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'age'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'address'</span> }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span>{columns}
    expandable<span class="token operator">=</span>{{
      expandedRowRender<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>p style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}<span class="token operator">></span>{record<span class="token punctuation">.</span>description}<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span>
      rowExpandable<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name !<span class="token operator">==</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    }}
    dataSource<span class="token operator">=</span>{data}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  description<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'age'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'address'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>
    expandable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> record <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
      <span class="token function-variable function">rowExpandable</span><span class="token operator">:</span> record <span class="token operator">=></span> record<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span>
    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'x'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>
    expandable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">rowExpandable</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span>
    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Action",dataIndex:"",key:"x",render:function(){return g.default.createElement("a",null,"Delete")}}],z=[{key:1,name:"John Brown",age:32,address:"New York No. 1 Lake Park",description:"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park."},{key:2,name:"Jim Green",age:42,address:"London No. 1 Lake Park",description:"My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park."},{key:3,name:"Not Expandable",age:29,address:"Jiangsu No. 1 Lake Park",description:"This not expandable"},{key:4,name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",description:"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park."}],B=function(){return g.default.createElement(C.Table,{columns:r,expandable:{expandedRowRender:function(H){return g.default.createElement("p",{style:{margin:0}},H.description)},rowExpandable:function(H){return H.name!=="Not Expandable"}},dataSource:z})},D=B;return Z.createElement(D)}}},4221:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u53EF\u4EE5\u4F7F\u7528 ",["code","filterMode"]," \u6765\u4FEE\u6539\u7B5B\u9009\u83DC\u5355\u7684 UI\uFF0C\u53EF\u9009\u503C\u6709 ",["code","menu"],"\uFF08\u9ED8\u8BA4\uFF09\u548C ",["code","tree"],"\u3002"]],"en-US":[["p","You can use ",["code","filterMode"]," to change default filter interface, options: ",["code","menu"],"(default) and ",["code","tree"],"."],["blockquote",["p",["code","filterSearch"]," is used for making filter dropdown items searchable."]]]},meta:{order:6.1,version:"4.17.0",title:{"en-US":"Filter in Tree","zh-CN":"\u6811\u578B\u7B5B\u9009\u83DC\u5355"},filename:"components/table/demo/filter-in-tree.md",id:"components-table-demo-filter-in-tree"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TableProps } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    filterMode<span class="token punctuation">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    filterSearch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    filterSearch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> onChange<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} onChange<span class="token operator">=</span>{onChange} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    filterMode<span class="token operator">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    filterSearch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    filterSearch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onChange<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Yellow'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Pink'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterMode</span><span class="token operator">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterSearch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterSearch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=[{title:"Name",dataIndex:"name",filters:[{text:"Joe",value:"Joe"},{text:"Category 1",value:"Category 1",children:[{text:"Yellow",value:"Yellow"},{text:"Pink",value:"Pink"}]},{text:"Category 2",value:"Category 2",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],filterMode:"tree",filterSearch:!0,onFilter:function(H,E){return E.name.includes(H)},width:"30%"},{title:"Age",dataIndex:"age",sorter:function(H,E){return H.age-E.age}},{title:"Address",dataIndex:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],onFilter:function(H,E){return E.address.startsWith(H)},filterSearch:!0,width:"40%"}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],B=function(H,E,Y,W){console.log("params",H,E,Y,W)},D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,onChange:B})},P=D;return Z.createElement(P)}}},4222:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p",["code","filterSearch"]," \u7528\u4E8E\u5F00\u542F\u7B5B\u9009\u9879\u7684\u641C\u7D22\uFF0C\u901A\u8FC7 ",["code","filterSearch:(input, record) => boolean"]," \u8BBE\u7F6E\u81EA\u5B9A\u4E49\u7B5B\u9009\u65B9\u6CD5"]],"en-US":[["p",["code","filterSearch"]," is used to enable search of filter items, and you can set a custom filter method through ",["code","filterSearch:(input, record) => boolean"],"."]]},meta:{order:6.2,version:"4.19.0",title:{"en-US":"Filter search","zh-CN":"\u81EA\u5B9A\u4E49\u7B5B\u9009\u7684\u641C\u7D22"},filename:"components/table/demo/filter-search.md",id:"components-table-demo-filter-search"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TableProps } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    filterMode<span class="token punctuation">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    filterSearch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token operator">&lt;</span>span<span class="token operator">></span>London<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token operator">&lt;</span>span<span class="token operator">></span>New York<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    filterSearch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> onChange<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} onChange<span class="token operator">=</span>{onChange} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    filterMode<span class="token operator">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    filterSearch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>London<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>New York<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    filterSearch<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onChange<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Category 1'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Category 2'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterMode</span><span class="token operator">:</span> <span class="token string">'tree'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterSearch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>London<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>New York<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filterSearch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'40%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=[{title:"Name",dataIndex:"name",filters:[{text:"Joe",value:"Joe"},{text:"Category 1",value:"Category 1"},{text:"Category 2",value:"Category 2"}],filterMode:"tree",filterSearch:!0,onFilter:function(H,E){return E.address.startsWith(H)},width:"30%"},{title:"Age",dataIndex:"age",sorter:function(H,E){return H.age-E.age}},{title:"Address",dataIndex:"address",filters:[{text:g.default.createElement("span",null,"London"),value:"London"},{text:g.default.createElement("span",null,"New York"),value:"New York"}],onFilter:function(H,E){return E.address.startsWith(H)},filterSearch:!0,width:"40%"}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],B=function(H,E,Y,W){console.log("params",H,E,Y,W)},D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,onChange:B})},P=D;return Z.createElement(P)}}},4223:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u9002\u5408\u540C\u65F6\u5C55\u793A\u6709\u5927\u91CF\u6570\u636E\u548C\u6570\u636E\u5217\u3002"],["blockquote",["p","\u82E5\u5217\u5934\u4E0E\u5185\u5BB9\u4E0D\u5BF9\u9F50\u6216\u51FA\u73B0\u5217\u91CD\u590D\uFF0C\u8BF7\u6307\u5B9A",["strong","\u56FA\u5B9A\u5217"],"\u7684\u5BBD\u5EA6 ",["code","width"],"\u3002\u5982\u679C\u6307\u5B9A ",["code","width"]," \u4E0D\u751F\u6548\u6216\u51FA\u73B0\u767D\u8272\u5782\u76F4\u7A7A\u9699\uFF0C\u8BF7\u5C1D\u8BD5\u5EFA\u8BAE\u7559\u4E00\u5217\u4E0D\u8BBE\u5BBD\u5EA6\u4EE5\u9002\u5E94\u5F39\u6027\u5E03\u5C40\uFF0C\u6216\u8005\u68C0\u67E5\u662F\u5426\u6709",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"\u8D85\u957F\u8FDE\u7EED\u5B57\u6BB5\u7834\u574F\u5E03\u5C40"],"\u3002"],["p","\u5EFA\u8BAE\u6307\u5B9A ",["code","scroll.x"]," \u4E3A\u5927\u4E8E\u8868\u683C\u5BBD\u5EA6\u7684\u56FA\u5B9A\u503C\u6216\u767E\u5206\u6BD4\u3002\u6CE8\u610F\uFF0C\u4E14\u975E\u56FA\u5B9A\u5217\u5BBD\u5EA6\u4E4B\u548C\u4E0D\u8981\u8D85\u8FC7 ",["code","scroll.x"],"\u3002"]]],"en-US":[["p","A Solution for displaying large amounts of data with long columns."],["blockquote",["p","Specify the width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."],["p","A fixed value which is greater than table width for ",["code","scroll.x"]," is recommended. The sum of unfixed columns should not greater than ",["code","scroll.x"],"."]]]},meta:{order:20,title:{"en-US":"Fixed Columns and Header","zh-CN":"\u56FA\u5B9A\u5934\u548C\u5217"},filename:"components/table/demo/fixed-columns-header.md",id:"components-table-demo-fixed-columns-header"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'8'</span> }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>action<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edrward \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London Park no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} scroll<span class="token operator">=</span>{{ x<span class="token punctuation">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">300</span> }} <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'8'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'8'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}for(var r=[{title:"Full Name",width:100,dataIndex:"name",key:"name",fixed:"left"},{title:"Age",width:100,dataIndex:"age",key:"age",fixed:"left"},{title:"Column 1",dataIndex:"address",key:"1",width:150},{title:"Column 2",dataIndex:"address",key:"2",width:150},{title:"Column 3",dataIndex:"address",key:"3",width:150},{title:"Column 4",dataIndex:"address",key:"4",width:150},{title:"Column 5",dataIndex:"address",key:"5",width:150},{title:"Column 6",dataIndex:"address",key:"6",width:150},{title:"Column 7",dataIndex:"address",key:"7",width:150},{title:"Column 8",dataIndex:"address",key:"8"},{title:"Action",key:"operation",fixed:"right",width:100,render:function(){return g.default.createElement("a",null,"action")}}],z=[],B=0;B<100;B++)z.push({key:B,name:"Edrward ".concat(B),age:32,address:"London Park no. ".concat(B)});var D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,scroll:{x:1500,y:300}})},P=D;return Z.createElement(P)}}},4224:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5BF9\u4E8E\u5217\u6570\u5F88\u591A\u7684\u6570\u636E\uFF0C\u53EF\u4EE5\u56FA\u5B9A\u524D\u540E\u7684\u5217\uFF0C\u6A2A\u5411\u6EDA\u52A8\u67E5\u770B\u5176\u5B83\u6570\u636E\uFF0C\u9700\u8981\u548C ",["code","scroll.x"]," \u914D\u5408\u4F7F\u7528\u3002"],["blockquote",["p","\u82E5\u5217\u5934\u4E0E\u5185\u5BB9\u4E0D\u5BF9\u9F50\u6216\u51FA\u73B0\u5217\u91CD\u590D\uFF0C\u8BF7\u6307\u5B9A",["strong","\u56FA\u5B9A\u5217"],"\u7684\u5BBD\u5EA6 ",["code","width"],"\u3002\u5982\u679C\u6307\u5B9A ",["code","width"]," \u4E0D\u751F\u6548\u6216\u51FA\u73B0\u767D\u8272\u5782\u76F4\u7A7A\u9699\uFF0C\u8BF7\u5C1D\u8BD5\u5EFA\u8BAE\u7559\u4E00\u5217\u4E0D\u8BBE\u5BBD\u5EA6\u4EE5\u9002\u5E94\u5F39\u6027\u5E03\u5C40\uFF0C\u6216\u8005\u68C0\u67E5\u662F\u5426\u6709",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"\u8D85\u957F\u8FDE\u7EED\u5B57\u6BB5\u7834\u574F\u5E03\u5C40"],"\u3002"],["p","\u5EFA\u8BAE\u6307\u5B9A ",["code","scroll.x"]," \u4E3A\u5927\u4E8E\u8868\u683C\u5BBD\u5EA6\u7684\u56FA\u5B9A\u503C\u6216\u767E\u5206\u6BD4\u3002\u6CE8\u610F\uFF0C\u4E14\u975E\u56FA\u5B9A\u5217\u5BBD\u5EA6\u4E4B\u548C\u4E0D\u8981\u8D85\u8FC7 ",["code","scroll.x"],"\u3002"]],["p",["strong","\u6CE8\u610F\uFF1Av4 \u7248\u672C\u56FA\u5B9A\u5217\u901A\u8FC7 sticky \u5B9E\u73B0\uFF0CIE 11 \u4F1A\u964D\u7EA7\u6210\u6A2A\u5411\u6EDA\u52A8\u3002"]]],"en-US":[["p","To fix some columns and scroll inside other columns, and you must set ",["code","scroll.x"]," meanwhile."],["blockquote",["p","Specify the width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."],["p","A fixed value which is greater than table width for ",["code","scroll.x"]," is recommended. The sum of unfixed columns should not greater than ",["code","scroll.x"],"."]],["p",["strong","Note: v4 using sticky to implement fixed effect. IE 11 will downgrade to horizontal scroll."]]]},meta:{order:19,title:{"en-US":"Fixed Columns","zh-CN":"\u56FA\u5B9A\u5217"},filename:"components/table/demo/fixed-columns.md",id:"components-table-demo-fixed-columns"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'1'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'2'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'3'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'4'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'5'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'6'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'7'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'8'</span> }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>action<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} scroll<span class="token operator">=</span>{{ x<span class="token punctuation">:</span> <span class="token number">1300</span> }} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'1'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'2'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'3'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'4'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'5'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'6'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'7'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'8'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'8'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1300</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Full Name",width:100,dataIndex:"name",key:"name",fixed:"left"},{title:"Age",width:100,dataIndex:"age",key:"age",fixed:"left"},{title:"Column 1",dataIndex:"address",key:"1"},{title:"Column 2",dataIndex:"address",key:"2"},{title:"Column 3",dataIndex:"address",key:"3"},{title:"Column 4",dataIndex:"address",key:"4"},{title:"Column 5",dataIndex:"address",key:"5"},{title:"Column 6",dataIndex:"address",key:"6"},{title:"Column 7",dataIndex:"address",key:"7"},{title:"Column 8",dataIndex:"address",key:"8"},{title:"Action",key:"operation",fixed:"right",width:100,render:function(){return g.default.createElement("a",null,"action")}}],z=[{key:"1",name:"John Brown",age:32,address:"New York Park"},{key:"2",name:"Jim Green",age:40,address:"London Park"}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,scroll:{x:1300}})},D=B;return Z.createElement(D)}}},4225:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u65B9\u4FBF\u4E00\u9875\u5185\u5C55\u793A\u5927\u91CF\u6570\u636E\u3002"],["p","\u9700\u8981\u6307\u5B9A column \u7684 ",["code","width"]," \u5C5E\u6027\uFF0C\u5426\u5219\u5217\u5934\u548C\u5185\u5BB9\u53EF\u80FD\u4E0D\u5BF9\u9F50\u3002\u5982\u679C\u6307\u5B9A ",["code","width"]," \u4E0D\u751F\u6548\u6216\u51FA\u73B0\u767D\u8272\u5782\u76F4\u7A7A\u9699\uFF0C\u8BF7\u5C1D\u8BD5\u5EFA\u8BAE\u7559\u4E00\u5217\u4E0D\u8BBE\u5BBD\u5EA6\u4EE5\u9002\u5E94\u5F39\u6027\u5E03\u5C40\uFF0C\u6216\u8005\u68C0\u67E5\u662F\u5426\u6709",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"\u8D85\u957F\u8FDE\u7EED\u5B57\u6BB5\u7834\u574F\u5E03\u5C40"],"\u3002"]],"en-US":[["p","Display large amounts of data in scrollable view."],["blockquote",["p","Specify width of columns if header and cell do not align properly. If specified width is not working or have gutter between columns, please try to leave one column at least without width to fit fluid layout, or make sure no ",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/13825#issuecomment-449889241"},"long word to break table layout"],"."]]]},meta:{order:18,title:{"en-US":"Fixed Header","zh-CN":"\u56FA\u5B9A\u8868\u5934"},filename:"components/table/demo/fixed-header.md",id:"components-table-demo-fixed-header"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edward King \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London<span class="token punctuation">,</span> Park Lane no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} pagination<span class="token operator">=</span>{{ pageSize<span class="token punctuation">:</span> <span class="token number">50</span> }} scroll<span class="token operator">=</span>{{ y<span class="token punctuation">:</span> <span class="token number">240</span> }} <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> pageSize<span class="token operator">:</span> <span class="token number">50</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">240</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}for(var r=[{title:"Name",dataIndex:"name",width:150},{title:"Age",dataIndex:"age",width:150},{title:"Address",dataIndex:"address"}],z=[],B=0;B<100;B++)z.push({key:B,name:"Edward King ".concat(B),age:32,address:"London, Park Lane no. ".concat(B)});var D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,pagination:{pageSize:50},scroll:{y:240}})},P=D;return Z.createElement(P)}}},4226:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p",["code","columns[n]"]," \u53EF\u4EE5\u5185\u5D4C ",["code","children"],"\uFF0C\u4EE5\u6E32\u67D3\u5206\u7EC4\u8868\u5934\u3002"]],"en-US":[["p","Group table head with ",["code","columns[n].children"],"."]]},meta:{order:22,title:{"en-US":"Grouping table head","zh-CN":"\u8868\u5934\u5206\u7EC4"},filename:"components/table/demo/grouping-columns.md",id:"components-table-demo-grouping-columns"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  street<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  building<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  number<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  companyAddress<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  companyName<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  gender<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Other'</span><span class="token punctuation">,</span>
    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
        sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            title<span class="token punctuation">:</span> <span class="token string">'Street'</span><span class="token punctuation">,</span>
            dataIndex<span class="token punctuation">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            key<span class="token punctuation">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
          {
            title<span class="token punctuation">:</span> <span class="token string">'Block'</span><span class="token punctuation">,</span>
            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
              {
                title<span class="token punctuation">:</span> <span class="token string">'Building'</span><span class="token punctuation">,</span>
                dataIndex<span class="token punctuation">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                key<span class="token punctuation">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              }<span class="token punctuation">,</span>
              {
                title<span class="token punctuation">:</span> <span class="token string">'Door No.'</span><span class="token punctuation">,</span>
                dataIndex<span class="token punctuation">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                key<span class="token punctuation">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              }<span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Company'</span><span class="token punctuation">,</span>
    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Company Address'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Company Name'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    street<span class="token punctuation">:</span> <span class="token string">'Lake Park'</span><span class="token punctuation">,</span>
    building<span class="token punctuation">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span>
    number<span class="token punctuation">:</span> <span class="token number">2035</span><span class="token punctuation">,</span>
    companyAddress<span class="token punctuation">:</span> <span class="token string">'Lake Street 42'</span><span class="token punctuation">,</span>
    companyName<span class="token punctuation">:</span> <span class="token string">'SoftLake Co'</span><span class="token punctuation">,</span>
    gender<span class="token punctuation">:</span> <span class="token string">'M'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span>{columns}
    dataSource<span class="token operator">=</span>{data}
    bordered
    size<span class="token operator">=</span><span class="token string">"middle"</span>
    scroll<span class="token operator">=</span>{{ x<span class="token punctuation">:</span> <span class="token string">'calc(700px + 50%)'</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">240</span> }}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  street<span class="token operator">:</span> string<span class="token punctuation">;</span>
  building<span class="token operator">:</span> string<span class="token punctuation">;</span>
  number<span class="token operator">:</span> number<span class="token punctuation">;</span>
  companyAddress<span class="token operator">:</span> string<span class="token punctuation">;</span>
  companyName<span class="token operator">:</span> string<span class="token punctuation">;</span>
  gender<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Other'</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            title<span class="token operator">:</span> <span class="token string">'Street'</span><span class="token punctuation">,</span>
            dataIndex<span class="token operator">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            key<span class="token operator">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            title<span class="token operator">:</span> <span class="token string">'Block'</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                title<span class="token operator">:</span> <span class="token string">'Building'</span><span class="token punctuation">,</span>
                dataIndex<span class="token operator">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                key<span class="token operator">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                title<span class="token operator">:</span> <span class="token string">'Door No.'</span><span class="token punctuation">,</span>
                dataIndex<span class="token operator">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                key<span class="token operator">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Company'</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Company Address'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Company Name'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    street<span class="token operator">:</span> <span class="token string">'Lake Park'</span><span class="token punctuation">,</span>
    building<span class="token operator">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span>
    number<span class="token operator">:</span> <span class="token number">2035</span><span class="token punctuation">,</span>
    companyAddress<span class="token operator">:</span> <span class="token string">'Lake Street 42'</span><span class="token punctuation">,</span>
    companyName<span class="token operator">:</span> <span class="token string">'SoftLake Co'</span><span class="token punctuation">,</span>
    gender<span class="token operator">:</span> <span class="token string">'M'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">bordered</span>
    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token string">'calc(700px + 50%)'</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">240</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Other'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
        <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Street'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'street'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Block'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Building'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'building'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Door No.'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'number'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Company'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Company Address'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'companyAddress'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Company Name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'companyName'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Gender'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'gender'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">street</span><span class="token operator">:</span> <span class="token string">'Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">building</span><span class="token operator">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">number</span><span class="token operator">:</span> <span class="token number">2035</span><span class="token punctuation">,</span>
    <span class="token literal-property property">companyAddress</span><span class="token operator">:</span> <span class="token string">'Lake Street 42'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">companyName</span><span class="token operator">:</span> <span class="token string">'SoftLake Co'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">'M'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">bordered</span>
    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">'calc(700px + 50%)'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">240</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}for(var r=[{title:"Name",dataIndex:"name",key:"name",width:100,fixed:"left",filters:[{text:"Joe",value:"Joe"},{text:"John",value:"John"}],onFilter:function(H,E){return E.name.indexOf(H)===0}},{title:"Other",children:[{title:"Age",dataIndex:"age",key:"age",width:150,sorter:function(H,E){return H.age-E.age}},{title:"Address",children:[{title:"Street",dataIndex:"street",key:"street",width:150},{title:"Block",children:[{title:"Building",dataIndex:"building",key:"building",width:100},{title:"Door No.",dataIndex:"number",key:"number",width:100}]}]}]},{title:"Company",children:[{title:"Company Address",dataIndex:"companyAddress",key:"companyAddress",width:200},{title:"Company Name",dataIndex:"companyName",key:"companyName"}]},{title:"Gender",dataIndex:"gender",key:"gender",width:80,fixed:"right"}],z=[],B=0;B<100;B++)z.push({key:B,name:"John Brown",age:B+1,street:"Lake Park",building:"C",number:2035,companyAddress:"Lake Street 42",companyName:"SoftLake Co",gender:"M"});var D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,bordered:!0,size:"middle",scroll:{x:"calc(700px + 50%)",y:240}})},P=D;return Z.createElement(P)}}},4227:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5BF9\u67D0\u4E00\u5217\u6570\u636E\u8FDB\u884C\u7B5B\u9009\uFF0C\u4F7F\u7528\u5217\u7684 ",["code","filters"]," \u5C5E\u6027\u6765\u6307\u5B9A\u9700\u8981\u7B5B\u9009\u83DC\u5355\u7684\u5217\uFF0C",["code","onFilter"]," \u7528\u4E8E\u7B5B\u9009\u5F53\u524D\u6570\u636E\uFF0C",["code","filterMultiple"]," \u7528\u4E8E\u6307\u5B9A\u591A\u9009\u548C\u5355\u9009\u3002"],["p","\u5BF9\u67D0\u4E00\u5217\u6570\u636E\u8FDB\u884C\u6392\u5E8F\uFF0C\u901A\u8FC7\u6307\u5B9A\u5217\u7684 ",["code","sorter"]," \u51FD\u6570\u5373\u53EF\u542F\u52A8\u6392\u5E8F\u6309\u94AE\u3002",["code","sorter: function(rowA, rowB) { ... }"],"\uFF0C rowA\u3001rowB \u4E3A\u6BD4\u8F83\u7684\u4E24\u4E2A\u884C\u6570\u636E\u3002"],["p",["code","sortDirections: ['ascend' | 'descend']"],"\u6539\u53D8\u6BCF\u5217\u53EF\u7528\u7684\u6392\u5E8F\u65B9\u5F0F\uFF0C\u5207\u6362\u6392\u5E8F\u65F6\u6309\u6570\u7EC4\u5185\u5BB9\u4F9D\u6B21\u5207\u6362\uFF0C\u8BBE\u7F6E\u5728 table props \u4E0A\u65F6\u5BF9\u6240\u6709\u5217\u751F\u6548\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E ",["code","['ascend', 'descend', 'ascend']"]," \u7981\u6B62\u6392\u5E8F\u6062\u590D\u5230\u9ED8\u8BA4\u72B6\u6001\u3002"],["p","\u4F7F\u7528 ",["code","defaultSortOrder"]," \u5C5E\u6027\uFF0C\u8BBE\u7F6E\u5217\u7684\u9ED8\u8BA4\u6392\u5E8F\u987A\u5E8F\u3002"]],"en-US":[["p","Use ",["code","filters"]," to generate filter menu in columns, ",["code","onFilter"]," to determine filtered result, and ",["code","filterMultiple"]," to indicate whether it's multiple or single selection."],["p","Uses ",["code","defaultFilteredValue"]," to make a column filtered by default."],["p","Use ",["code","sorter"]," to make a column sortable. ",["code","sorter"]," can be a function of the type ",["code","function(a, b) { ... }"]," for sorting data locally."],["p",["code","sortDirections: ['ascend' | 'descend']"]," defines available sort methods for each columns, effective for all columns when set on table props. You can set as ",["code","['ascend', 'descend', 'ascend']"]," to prevent sorter back to default status."],["p","Uses ",["code","defaultSortOrder"]," to make a column sorted by default."],["p","If a ",["code","sortOrder"]," or ",["code","defaultSortOrder"]," is specified with the value ",["code","ascend"]," or ",["code","descend"],", you can access this value from within the function passed to the ",["code","sorter"]," as explained above. Such a function can take the form: ",["code","function(a, b, sortOrder) { ... }"],"."]]},meta:{order:6,title:{"en-US":"Filter and sorter","zh-CN":"\u7B5B\u9009\u548C\u6392\u5E8F"},filename:"components/table/demo/head.md",id:"components-table-demo-head"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TableProps } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
          {
            text<span class="token punctuation">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            value<span class="token punctuation">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">/</span><span class="token operator">/</span> specify the condition of filtering result
    <span class="token operator">/</span><span class="token operator">/</span> here is that finding the name started <span class="token keyword">with</span> \`value\`
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    sortDirections<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    defaultSortOrder<span class="token punctuation">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        text<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> onChange<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} onChange<span class="token operator">=</span>{onChange} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            text<span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            value<span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// specify the condition of filtering result</span>
    <span class="token comment">// here is that finding the name started with \`value\`</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    sortDirections<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    defaultSortOrder<span class="token operator">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    filters<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        text<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        value<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onChange<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Submenu'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// specify the condition of filtering result</span>
    <span class="token comment">// here is that finding the name started with \`value\`</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    <span class="token literal-property property">sortDirections</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'descend'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">defaultSortOrder</span><span class="token operator">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=[{title:"Name",dataIndex:"name",filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"},{text:"Submenu",value:"Submenu",children:[{text:"Green",value:"Green"},{text:"Black",value:"Black"}]}],onFilter:function(H,E){return E.name.indexOf(H)===0},sorter:function(H,E){return H.name.length-E.name.length},sortDirections:["descend"]},{title:"Age",dataIndex:"age",defaultSortOrder:"descend",sorter:function(H,E){return H.age-E.age}},{title:"Address",dataIndex:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],onFilter:function(H,E){return E.address.indexOf(H)===0}}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],B=function(H,E,Y,W){console.log("params",H,E,Y,W)},D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,onChange:B})},P=D;return Z.createElement(P)}}},4228:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4F7F\u7528 JSX \u98CE\u683C\u7684 API\uFF082.5.0 \u4EE5\u540E\u5F15\u5165\uFF09"],["blockquote",["p","\u8FD9\u4E2A\u53EA\u662F\u4E00\u4E2A\u63CF\u8FF0 ",["code","columns"]," \u7684\u8BED\u6CD5\u7CD6\uFF0C\u6240\u4EE5\u4F60\u4E0D\u80FD\u7528\u5176\u4ED6\u7EC4\u4EF6\u53BB\u5305\u88F9 ",["code","Column"]," \u548C ",["code","ColumnGroup"],"\u3002"]]],"en-US":[["p","Using JSX style API (introduced in 2.5.0)"],["blockquote",["p","Since this is just a syntax sugar for the prop ",["code","columns"],", you can't compose ",["code","Column"]," and ",["code","ColumnGroup"]," with other Components."]]]},meta:{order:1,title:{"en-US":"JSX style API","zh-CN":"JSX \u98CE\u683C\u7684 API"},filename:"components/table/demo/jsx.md",id:"components-table-demo-jsx"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> { Column<span class="token punctuation">,</span> ColumnGroup } <span class="token operator">=</span> Table<span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  firstName<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  lastName<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  tags<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    firstName<span class="token punctuation">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
    lastName<span class="token punctuation">:</span> <span class="token string">'Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    firstName<span class="token punctuation">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
    lastName<span class="token punctuation">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    firstName<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
    lastName<span class="token punctuation">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table dataSource<span class="token operator">=</span>{data}<span class="token operator">></span>
    <span class="token operator">&lt;</span>ColumnGroup title<span class="token operator">=</span><span class="token string">"Name"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>Column title<span class="token operator">=</span><span class="token string">"First Name"</span> dataIndex<span class="token operator">=</span><span class="token string">"firstName"</span> key<span class="token operator">=</span><span class="token string">"firstName"</span> <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>Column title<span class="token operator">=</span><span class="token string">"Last Name"</span> dataIndex<span class="token operator">=</span><span class="token string">"lastName"</span> key<span class="token operator">=</span><span class="token string">"lastName"</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ColumnGroup<span class="token operator">></span>
    <span class="token operator">&lt;</span>Column title<span class="token operator">=</span><span class="token string">"Age"</span> dataIndex<span class="token operator">=</span><span class="token string">"age"</span> key<span class="token operator">=</span><span class="token string">"age"</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Column title<span class="token operator">=</span><span class="token string">"Address"</span> dataIndex<span class="token operator">=</span><span class="token string">"address"</span> key<span class="token operator">=</span><span class="token string">"address"</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Column
      title<span class="token operator">=</span><span class="token string">"Tags"</span>
      dataIndex<span class="token operator">=</span><span class="token string">"tags"</span>
      key<span class="token operator">=</span><span class="token string">"tags"</span>
      render<span class="token operator">=</span>{<span class="token punctuation">(</span>tags<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;></span>
          {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Tag color<span class="token operator">=</span><span class="token string">"blue"</span> key<span class="token operator">=</span>{tag}<span class="token operator">></span>
              {tag}
            <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token punctuation">)</span>}
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
      <span class="token punctuation">)</span>}
    <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Column
      title<span class="token operator">=</span><span class="token string">"Action"</span>
      key<span class="token operator">=</span><span class="token string">"action"</span>
      render<span class="token operator">=</span>{<span class="token punctuation">(</span>_<span class="token punctuation">:</span> any<span class="token punctuation">,</span> record<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span>a<span class="token operator">></span>Invite {record<span class="token punctuation">.</span>lastName}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
          <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
      <span class="token punctuation">)</span>}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> ColumnGroup <span class="token punctuation">}</span> <span class="token operator">=</span> Table<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  firstName<span class="token operator">:</span> string<span class="token punctuation">;</span>
  lastName<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  tags<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    firstName<span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
    lastName<span class="token operator">:</span> <span class="token string">'Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    firstName<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
    lastName<span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    firstName<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
    lastName<span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColumnGroup</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>First Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Last Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ColumnGroup</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Address<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>tags<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Action<span class="token punctuation">"</span></span>
      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span>
      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>_<span class="token operator">:</span> any<span class="token punctuation">,</span> record<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Column<span class="token punctuation">,</span> ColumnGroup <span class="token punctuation">}</span> <span class="token operator">=</span> Table<span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">'John'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">'Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">'Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">'Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ColumnGroup</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>First Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>firstName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Last Name<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lastName<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ColumnGroup</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Age<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Address<span class="token punctuation">"</span></span> <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">dataIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tags<span class="token punctuation">"</span></span>
      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">tags</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blue<span class="token punctuation">"</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Column</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Action<span class="token punctuation">"</span></span>
      <span class="token attr-name">key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>action<span class="token punctuation">"</span></span>
      <span class="token attr-name">render</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>lastName<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=C.Table.Column,z=C.Table.ColumnGroup,B=[{key:"1",firstName:"John",lastName:"Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",firstName:"Jim",lastName:"Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",firstName:"Joe",lastName:"Black",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}],D=function(){return g.default.createElement(C.Table,{dataSource:B},g.default.createElement(z,{title:"Name"},g.default.createElement(r,{title:"First Name",dataIndex:"firstName",key:"firstName"}),g.default.createElement(r,{title:"Last Name",dataIndex:"lastName",key:"lastName"})),g.default.createElement(r,{title:"Age",dataIndex:"age",key:"age"}),g.default.createElement(r,{title:"Address",dataIndex:"address",key:"address"}),g.default.createElement(r,{title:"Tags",dataIndex:"tags",key:"tags",render:function(E){return g.default.createElement(g.default.Fragment,null,E.map(function(Y){return g.default.createElement(C.Tag,{color:"blue",key:Y},Y)}))}}),g.default.createElement(r,{title:"Action",key:"action",render:function(E,Y){return g.default.createElement(C.Space,{size:"middle"},g.default.createElement("a",null,"Invite ",Y.lastName),g.default.createElement("a",null,"Delete"))}}))},P=D;return Z.createElement(P)}}},4229:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p",["code","column.sorter"]," \u652F\u6301 ",["code","multiple"]," \u5B57\u6BB5\u4EE5\u914D\u7F6E\u591A\u5217\u6392\u5E8F\u4F18\u5148\u7EA7\u3002\u901A\u8FC7 ",["code","sorter.compare"]," \u914D\u7F6E\u6392\u5E8F\u903B\u8F91\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7\u4E0D\u8BBE\u7F6E\u8BE5\u51FD\u6570\u53EA\u542F\u52A8\u591A\u5217\u6392\u5E8F\u7684\u4EA4\u4E92\u5F62\u5F0F\u3002"]],"en-US":[["p",["code","column.sorter"]," support ",["code","multiple"]," to config the priority of sort columns. Though ",["code","sorter.compare"]," to customize compare function. You can also leave it empty to use the interactive only."]]},meta:{order:7,title:{"en-US":"Multiple sorter","zh-CN":"\u591A\u5217\u6392\u5E8F"},filename:"components/table/demo/multiple-sorter.md",id:"components-table-demo-multiple-sorter"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> TableProps } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  chinese<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  math<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  english<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Chinese Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'chinese'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> {
      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>chinese <span class="token operator">-</span> b<span class="token punctuation">.</span>chinese<span class="token punctuation">,</span>
      multiple<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Math Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'math'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> {
      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>math <span class="token operator">-</span> b<span class="token punctuation">.</span>math<span class="token punctuation">,</span>
      multiple<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'English Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'english'</span><span class="token punctuation">,</span>
    sorter<span class="token punctuation">:</span> {
      compare<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>english <span class="token operator">-</span> b<span class="token punctuation">.</span>english<span class="token punctuation">,</span>
      multiple<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    english<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token punctuation">:</span> <span class="token number">66</span><span class="token punctuation">,</span>
    english<span class="token punctuation">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    chinese<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span>
    english<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    chinese<span class="token punctuation">:</span> <span class="token number">88</span><span class="token punctuation">,</span>
    math<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    english<span class="token punctuation">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> onChange<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} onChange<span class="token operator">=</span>{onChange} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  chinese<span class="token operator">:</span> number<span class="token punctuation">;</span>
  math<span class="token operator">:</span> number<span class="token punctuation">;</span>
  english<span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Chinese Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'chinese'</span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>chinese <span class="token operator">-</span> b<span class="token punctuation">.</span>chinese<span class="token punctuation">,</span>
      multiple<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Math Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'math'</span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>math <span class="token operator">-</span> b<span class="token punctuation">.</span>math<span class="token punctuation">,</span>
      multiple<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'English Score'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'english'</span><span class="token punctuation">,</span>
    sorter<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>english <span class="token operator">-</span> b<span class="token punctuation">.</span>english<span class="token punctuation">,</span>
      multiple<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    english<span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>
    english<span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    chinese<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    math<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>
    english<span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    chinese<span class="token operator">:</span> <span class="token number">88</span><span class="token punctuation">,</span>
    math<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    english<span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> onChange<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Chinese Score'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'chinese'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>chinese <span class="token operator">-</span> b<span class="token punctuation">.</span>chinese<span class="token punctuation">,</span>
      <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Math Score'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'math'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>math <span class="token operator">-</span> b<span class="token punctuation">.</span>math<span class="token punctuation">,</span>
      <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'English Score'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'english'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sorter</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">compare</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>english <span class="token operator">-</span> b<span class="token punctuation">.</span>english<span class="token punctuation">,</span>
      <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chinese</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    <span class="token literal-property property">math</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    <span class="token literal-property property">english</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chinese</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    <span class="token literal-property property">math</span><span class="token operator">:</span> <span class="token number">66</span><span class="token punctuation">,</span>
    <span class="token literal-property property">english</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chinese</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
    <span class="token literal-property property">math</span><span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>
    <span class="token literal-property property">english</span><span class="token operator">:</span> <span class="token number">70</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chinese</span><span class="token operator">:</span> <span class="token number">88</span><span class="token punctuation">,</span>
    <span class="token literal-property property">math</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    <span class="token literal-property property">english</span><span class="token operator">:</span> <span class="token number">89</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'params'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">,</span> extra<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}var r=[{title:"Name",dataIndex:"name"},{title:"Chinese Score",dataIndex:"chinese",sorter:{compare:function(H,E){return H.chinese-E.chinese},multiple:3}},{title:"Math Score",dataIndex:"math",sorter:{compare:function(H,E){return H.math-E.math},multiple:2}},{title:"English Score",dataIndex:"english",sorter:{compare:function(H,E){return H.english-E.english},multiple:1}}],z=[{key:"1",name:"John Brown",chinese:98,math:60,english:70},{key:"2",name:"Jim Green",chinese:98,math:66,english:89},{key:"3",name:"Joe Black",chinese:98,math:90,english:70},{key:"4",name:"Jim Red",chinese:88,math:99,english:89}],B=function(H,E,Y,W){console.log("params",H,E,Y,W)},D=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z,onChange:B})},P=D;return Z.createElement(P)}}},4230:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4E24\u79CD\u7D27\u51D1\u578B\u7684\u5217\u8868\uFF0C\u5C0F\u578B\u5217\u8868\u53EA\u7528\u4E8E\u5BF9\u8BDD\u6846\u5185\u3002"]],"en-US":[["p","There are two compacted table sizes: ",["code","middle"]," and ",["code","small"],". The ",["code","small"]," size is used in Modals only."]]},meta:{order:11.5,title:{"en-US":"size","zh-CN":"\u7D27\u51D1\u578B"},debug:!0,filename:"components/table/demo/narrow.md",id:"components-table-demo-narrow"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 200; i += 1) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Sample Name'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">30</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i % <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`Sample Address \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token number">300</span> }}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} size<span class="token operator">=</span><span class="token string">"small"</span> pagination<span class="token operator">=</span>{{ defaultCurrent<span class="token punctuation">:</span> <span class="token number">13</span> }} <span class="token operator">/</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Sample Name'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Sample Address </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token number">300</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> defaultCurrent<span class="token operator">:</span> <span class="token number">13</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Sample Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Sample Address </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">defaultCurrent</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}for(var r=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],z=[],B=0;B<200;B+=1)z.push({key:B,name:"Sample Name",age:30+B%5,address:"Sample Address ".concat(B)});var D=function(){return g.default.createElement("div",{style:{width:300}},g.default.createElement(C.Table,{columns:r,dataSource:z,size:"small",pagination:{defaultCurrent:13}}))},P=D;return Z.createElement(P)}}},4231:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u770B\u770B\u8FB9\u6846\u7684\u6837\u5F0F\u662F\u4E0D\u662F\u5F71\u54CD\u5230\u522B\u7684\u8868\u683C\u3002"]],"en-US":[["p","To see if bordered style applied to other tables."]]},meta:{order:98,title:{"en-US":"Nested Bordered Table Debug","zh-CN":"\u5D4C\u5957\u5E26\u8FB9\u6846\u7684\u8868\u683C Debug"},debug:!0,filename:"components/table/demo/nest-table-border-debug.md",id:"components-table-demo-nest-table-border-debug"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { DownOutlined } from <span class="token string">'infra-design-icons'</span><span class="token comment" spellcheck="true">;</span>
import type { TableColumnsType } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> <span class="token keyword">Switch</span><span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  platform<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  version<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  upgradeNum<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  creator<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  createdAt<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface ExpandedDataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  date<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  upgradeNum<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Menu
    items<span class="token operator">=</span>{<span class="token punctuation">[</span>
      { key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token string">'Action 1'</span> }<span class="token punctuation">,</span>
      { key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token string">'Action 2'</span> }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span>}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> createExpandedRowRender <span class="token operator">=</span> <span class="token punctuation">(</span>bordered<span class="token punctuation">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'date'</span> }<span class="token punctuation">,</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>span<span class="token operator">></span>
            <span class="token operator">&lt;</span>Badge status<span class="token operator">=</span><span class="token string">"success"</span> <span class="token operator">/</span><span class="token operator">></span>
            Finished
          <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span> }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
            <span class="token operator">&lt;</span>a<span class="token operator">></span>Pause<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span>a<span class="token operator">></span>Stop<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span>Dropdown overlay<span class="token operator">=</span>{menu}<span class="token operator">></span>
              <span class="token operator">&lt;</span>a<span class="token operator">></span>
                More <span class="token operator">&lt;</span>DownOutlined <span class="token operator">/</span><span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Dropdown<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">const</span> data<span class="token punctuation">:</span> ExpandedDataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 3; ++i) {</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
        key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
        date<span class="token punctuation">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        upgradeNum<span class="token punctuation">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    return <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} pagination<span class="token operator">=</span>{<span class="token boolean">false</span>} bordered<span class="token operator">=</span>{bordered} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns<span class="token punctuation">:</span> TableColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'platform'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'version'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'creator'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'createdAt'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span> render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>Publish<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 3; ++i) {</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
      key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      platform<span class="token punctuation">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      version<span class="token punctuation">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      upgradeNum<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      creator<span class="token punctuation">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      createdAt<span class="token punctuation">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }

  <span class="token keyword">const</span> <span class="token punctuation">[</span>rootTableBordered<span class="token punctuation">,</span> setRootTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>childTableBordered<span class="token punctuation">,</span> setChildTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Form
        layout<span class="token operator">=</span><span class="token string">"inline"</span>
        className<span class="token operator">=</span><span class="token string">"components-table-demo-control-bar"</span>
        style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Root Table Bordered"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{rootTableBordered} onChange<span class="token operator">=</span>{v <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setRootTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
        <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Child Table Bordered"</span><span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{childTableBordered} onChange<span class="token operator">=</span>{v <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setChildTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>} <span class="token operator">/</span><span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        title<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'cool'</span>}
        footer<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token string">'cool'</span>}
        columns<span class="token operator">=</span>{columns}
        expandable<span class="token operator">=</span>{{ expandedRowRender<span class="token punctuation">:</span> <span class="token function">createExpandedRowRender</span><span class="token punctuation">(</span>childTableBordered<span class="token punctuation">)</span> }}
        dataSource<span class="token operator">=</span>{data}
        bordered<span class="token operator">=</span>{rootTableBordered}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  platform<span class="token operator">:</span> string<span class="token punctuation">;</span>
  version<span class="token operator">:</span> string<span class="token punctuation">;</span>
  upgradeNum<span class="token operator">:</span> number<span class="token punctuation">;</span>
  creator<span class="token operator">:</span> string<span class="token punctuation">;</span>
  createdAt<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ExpandedDataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  date<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  upgradeNum<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span>
    <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">'Action 1'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">'Action 2'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">createExpandedRowRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span>bordered<span class="token operator">:</span> boolean<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'date'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
            Finished
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'upgradeNum'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dropdown</span></span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dropdown</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> data<span class="token operator">:</span> ExpandedDataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        key<span class="token operator">:</span> i<span class="token punctuation">,</span>
        date<span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        upgradeNum<span class="token operator">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bordered<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns<span class="token operator">:</span> TableColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'platform'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'version'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'upgradeNum'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'creator'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'createdAt'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      key<span class="token operator">:</span> i<span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      platform<span class="token operator">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      version<span class="token operator">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      upgradeNum<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      creator<span class="token operator">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      createdAt<span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>rootTableBordered<span class="token punctuation">,</span> setRootTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>childTableBordered<span class="token punctuation">,</span> setChildTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Root Table Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rootTableBordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>v <span class="token operator">=></span> <span class="token function">setRootTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Child Table Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>childTableBordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>v <span class="token operator">=></span> <span class="token function">setChildTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'cool'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'cool'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender<span class="token operator">:</span> <span class="token function">createExpandedRowRender</span><span class="token punctuation">(</span>childTableBordered<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rootTableBordered<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span>
    <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'Action 1'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'Action 2'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">createExpandedRowRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">bordered</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
            Finished
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dropdown</span></span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dropdown</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
        <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">upgradeNum</span><span class="token operator">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bordered<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">upgradeNum</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      <span class="token literal-property property">creator</span><span class="token operator">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">[</span>rootTableBordered<span class="token punctuation">,</span> setRootTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>childTableBordered<span class="token punctuation">,</span> setChildTableBordered<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
        <span class="token attr-name">layout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inline<span class="token punctuation">"</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>components-table-demo-control-bar<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Root Table Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rootTableBordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setRootTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Child Table Bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>childTableBordered<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setChildTableBordered</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'cool'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'cool'</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">expandedRowRender</span><span class="token operator">:</span> <span class="token function">createExpandedRowRender</span><span class="token punctuation">(</span>childTableBordered<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">bordered</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rootTableBordered<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(R){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(t){return typeof t}:function(t){return t&&typeof Symbol=="function"&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(R)}var g=l(26),k=l(12),r=B(l(0));function z(R){if(typeof WeakMap!="function")return null;var t=new WeakMap,e=new WeakMap;return(z=function(a){return a?e:t})(R)}function B(R,t){if(!t&&R&&R.__esModule)return R;if(R===null||C(R)!=="object"&&typeof R!="function")return{default:R};var e=z(t);if(e&&e.has(R))return e.get(R);var h={},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var n in R)if(n!=="default"&&Object.prototype.hasOwnProperty.call(R,n)){var c=a?Object.getOwnPropertyDescriptor(R,n):null;c&&(c.get||c.set)?Object.defineProperty(h,n,c):h[n]=R[n]}return h.default=R,e&&e.set(R,h),h}function D(R,t){return Y(R)||E(R,t)||T(R,t)||P()}function P(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function T(R,t){if(!!R){if(typeof R=="string")return H(R,t);var e=Object.prototype.toString.call(R).slice(8,-1);if(e==="Object"&&R.constructor&&(e=R.constructor.name),e==="Map"||e==="Set")return Array.from(R);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return H(R,t)}}function H(R,t){(t==null||t>R.length)&&(t=R.length);for(var e=0,h=new Array(t);e<t;e++)h[e]=R[e];return h}function E(R,t){var e=R==null?null:typeof Symbol!="undefined"&&R[Symbol.iterator]||R["@@iterator"];if(e!=null){var h=[],a=!0,n=!1,c,y;try{for(e=e.call(R);!(a=(c=e.next()).done)&&(h.push(c.value),!(t&&h.length===t));a=!0);}catch(J){n=!0,y=J}finally{try{!a&&e.return!=null&&e.return()}finally{if(n)throw y}}return h}}function Y(R){if(Array.isArray(R))return R}var W=r.default.createElement(k.Menu,{items:[{key:"1",label:"Action 1"},{key:"2",label:"Action 2"}]}),S=function(){for(var t=function(f){return function(){for(var u=[{title:"Date",dataIndex:"date",key:"date"},{title:"Name",dataIndex:"name",key:"name"},{title:"Status",key:"state",render:function(){return r.default.createElement("span",null,r.default.createElement(k.Badge,{status:"success"}),"Finished")}},{title:"Upgrade Status",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Action",dataIndex:"operation",key:"operation",render:function(){return r.default.createElement(k.Space,{size:"middle"},r.default.createElement("a",null,"Pause"),r.default.createElement("a",null,"Stop"),r.default.createElement(k.Dropdown,{overlay:W},r.default.createElement("a",null,"More ",r.default.createElement(g.DownOutlined,null))))}}],O=[],K=0;K<3;++K)O.push({key:K,date:"2014-12-24 23:12:00",name:"This is production name",upgradeNum:"Upgraded: 56"});return r.default.createElement(k.Table,{columns:u,dataSource:O,pagination:!1,bordered:f})}},e=[{title:"Name",dataIndex:"name",key:"name"},{title:"Platform",dataIndex:"platform",key:"platform"},{title:"Version",dataIndex:"version",key:"version"},{title:"Upgraded",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Creator",dataIndex:"creator",key:"creator"},{title:"Date",dataIndex:"createdAt",key:"createdAt"},{title:"Action",key:"operation",render:function(){return r.default.createElement("a",null,"Publish")}}],h=[],a=0;a<3;++a)h.push({key:a,name:"Screem",platform:"iOS",version:"10.3.4.5654",upgradeNum:500,creator:"Jack",createdAt:"2014-12-24 23:12:00"});var n=(0,r.useState)(!0),c=D(n,2),y=c[0],J=c[1],b=(0,r.useState)(!0),p=D(b,2),w=p[0],m=p[1];return r.default.createElement(r.default.Fragment,null,r.default.createElement(k.Form,{layout:"inline",className:"components-table-demo-control-bar",style:{marginBottom:16}},r.default.createElement(k.Form.Item,{label:"Root Table Bordered"},r.default.createElement(k.Switch,{checked:y,onChange:function(f){return J(f)}})),r.default.createElement(k.Form.Item,{label:"Child Table Bordered"},r.default.createElement(k.Switch,{checked:w,onChange:function(f){return m(f)}}))),r.default.createElement(k.Table,{title:function(){return"cool"},footer:function(){return"cool"},columns:e,expandable:{expandedRowRender:t(w)},dataSource:h,bordered:y}))},N=S;return Z.createElement(N)}}},4232:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5C55\u793A\u6BCF\u884C\u6570\u636E\u66F4\u8BE6\u7EC6\u7684\u4FE1\u606F\u3002"]],"en-US":[["p","Showing more detailed info of every row."]]},meta:{order:25,title:{"en-US":"Nested tables","zh-CN":"\u5D4C\u5957\u5B50\u8868\u683C"},filename:"components/table/demo/nested-table.md",id:"components-table-demo-nested-table"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { DownOutlined } from <span class="token string">'infra-design-icons'</span><span class="token comment" spellcheck="true">;</span>
import type { TableColumnsType } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  platform<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  version<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  upgradeNum<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  creator<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  createdAt<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface ExpandedDataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  date<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  upgradeNum<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Menu
    items<span class="token operator">=</span>{<span class="token punctuation">[</span>
      { key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token string">'Action 1'</span> }<span class="token punctuation">,</span>
      { key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token string">'Action 2'</span> }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span>}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> expandedRowRender <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> columns<span class="token punctuation">:</span> TableColumnsType<span class="token operator">&lt;</span>ExpandedDataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'date'</span> }<span class="token punctuation">,</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>span<span class="token operator">></span>
            <span class="token operator">&lt;</span>Badge status<span class="token operator">=</span><span class="token string">"success"</span> <span class="token operator">/</span><span class="token operator">></span>
            Finished
          <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      { title<span class="token punctuation">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span> }<span class="token punctuation">,</span>
      {
        title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        dataIndex<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
            <span class="token operator">&lt;</span>a<span class="token operator">></span>Pause<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span>a<span class="token operator">></span>Stop<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span>Dropdown overlay<span class="token operator">=</span>{menu}<span class="token operator">></span>
              <span class="token operator">&lt;</span>a<span class="token operator">></span>
                More <span class="token operator">&lt;</span>DownOutlined <span class="token operator">/</span><span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Dropdown<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 3; ++i) {</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
        key<span class="token punctuation">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        date<span class="token punctuation">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        upgradeNum<span class="token punctuation">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    return <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} pagination<span class="token operator">=</span>{<span class="token boolean">false</span>} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns<span class="token punctuation">:</span> TableColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'platform'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'version'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'upgradeNum'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'creator'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'createdAt'</span> }<span class="token punctuation">,</span>
    { title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span> render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>Publish<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 3; ++i) {</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
      key<span class="token punctuation">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      platform<span class="token punctuation">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      version<span class="token punctuation">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      upgradeNum<span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      creator<span class="token punctuation">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      createdAt<span class="token punctuation">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Table
        columns<span class="token operator">=</span>{columns}
        expandable<span class="token operator">=</span>{{ expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> }}
        dataSource<span class="token operator">=</span>{data}
      <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        columns<span class="token operator">=</span>{columns}
        expandable<span class="token operator">=</span>{{ expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> }}
        dataSource<span class="token operator">=</span>{data}
        size<span class="token operator">=</span><span class="token string">"middle"</span>
      <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        columns<span class="token operator">=</span>{columns}
        expandable<span class="token operator">=</span>{{ expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> }}
        dataSource<span class="token operator">=</span>{data}
        size<span class="token operator">=</span><span class="token string">"small"</span>
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  platform<span class="token operator">:</span> string<span class="token punctuation">;</span>
  version<span class="token operator">:</span> string<span class="token punctuation">;</span>
  upgradeNum<span class="token operator">:</span> number<span class="token punctuation">;</span>
  creator<span class="token operator">:</span> string<span class="token punctuation">;</span>
  createdAt<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">ExpandedDataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  date<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  upgradeNum<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span>
    <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">'Action 1'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span> label<span class="token operator">:</span> <span class="token string">'Action 2'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">expandedRowRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> columns<span class="token operator">:</span> TableColumnsType<span class="token operator">&lt;</span>ExpandedDataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'date'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
            Finished
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'upgradeNum'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        dataIndex<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dropdown</span></span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dropdown</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        date<span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        upgradeNum<span class="token operator">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns<span class="token operator">:</span> TableColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'platform'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'version'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'upgradeNum'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'creator'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'createdAt'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span> <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      key<span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      platform<span class="token operator">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      version<span class="token operator">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      upgradeNum<span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      creator<span class="token operator">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      createdAt<span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> expandedRowRender<span class="token punctuation">,</span> defaultExpandedRowKeys<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> DownOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infra-design-icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Badge<span class="token punctuation">,</span> Dropdown<span class="token punctuation">,</span> Menu<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> menu <span class="token operator">=</span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Menu</span></span>
    <span class="token attr-name">items</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'Action 1'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'Action 2'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">expandedRowRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Status'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'state'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Badge</span></span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
            Finished
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Upgrade Status'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dropdown</span></span> <span class="token attr-name">overlay</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>menu<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
                More <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DownOutlined</span></span> <span class="token punctuation">/></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dropdown</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'This is production name'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">upgradeNum</span><span class="token operator">:</span> <span class="token string">'Upgraded: 56'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Platform'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'platform'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Version'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'version'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Upgraded'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'upgradeNum'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Creator'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'creator'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'createdAt'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Publish<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Screem'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">'iOS'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">'10.3.4.5654'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">upgradeNum</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      <span class="token literal-property property">creator</span><span class="token operator">:</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">createdAt</span><span class="token operator">:</span> <span class="token string">'2014-12-24 23:12:00'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          expandedRowRender<span class="token punctuation">,</span>
          <span class="token literal-property property">defaultExpandedRowKeys</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          expandedRowRender<span class="token punctuation">,</span>
          <span class="token literal-property property">defaultExpandedRowKeys</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">expandable</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          expandedRowRender<span class="token punctuation">,</span>
          <span class="token literal-property property">defaultExpandedRowKeys</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
        <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(26),g=l(12),k=r(l(0));function r(P){return P&&P.__esModule?P:{default:P}}var z=k.default.createElement(g.Menu,{items:[{key:"1",label:"Action 1"},{key:"2",label:"Action 2"}]}),B=function(){for(var T=function(){for(var S=[{title:"Date",dataIndex:"date",key:"date"},{title:"Name",dataIndex:"name",key:"name"},{title:"Status",key:"state",render:function(){return k.default.createElement("span",null,k.default.createElement(g.Badge,{status:"success"}),"Finished")}},{title:"Upgrade Status",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Action",dataIndex:"operation",key:"operation",render:function(){return k.default.createElement(g.Space,{size:"middle"},k.default.createElement("a",null,"Pause"),k.default.createElement("a",null,"Stop"),k.default.createElement(g.Dropdown,{overlay:z},k.default.createElement("a",null,"More ",k.default.createElement(C.DownOutlined,null))))}}],N=[],R=0;R<3;++R)N.push({key:R.toString(),date:"2014-12-24 23:12:00",name:"This is production name",upgradeNum:"Upgraded: 56"});return k.default.createElement(g.Table,{columns:S,dataSource:N,pagination:!1})},H=[{title:"Name",dataIndex:"name",key:"name"},{title:"Platform",dataIndex:"platform",key:"platform"},{title:"Version",dataIndex:"version",key:"version"},{title:"Upgraded",dataIndex:"upgradeNum",key:"upgradeNum"},{title:"Creator",dataIndex:"creator",key:"creator"},{title:"Date",dataIndex:"createdAt",key:"createdAt"},{title:"Action",key:"operation",render:function(){return k.default.createElement("a",null,"Publish")}}],E=[],Y=0;Y<3;++Y)E.push({key:Y.toString(),name:"Screem",platform:"iOS",version:"10.3.4.5654",upgradeNum:500,creator:"Jack",createdAt:"2014-12-24 23:12:00"});return k.default.createElement(k.default.Fragment,null,k.default.createElement(g.Table,{columns:H,expandable:{expandedRowRender:T,defaultExpandedRowKeys:["0"]},dataSource:E}),k.default.createElement(g.Table,{columns:H,expandable:{expandedRowRender:T,defaultExpandedRowKeys:["0"]},dataSource:E,size:"middle"}),k.default.createElement(g.Table,{columns:H,expandable:{expandedRowRender:T,defaultExpandedRowKeys:["0"]},dataSource:E,size:"small"}))},D=B;return Z.createElement(D)}}},4233:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4F60\u53EF\u4EE5\u901A\u8FC7 ",["code","Table.EXPAND_COLUMN"]," \u548C ",["code","Table.SELECT_COLUMN"]," \u6765\u63A7\u5236\u9009\u62E9\u548C\u5C55\u5F00\u5217\u7684\u987A\u5E8F\u3002"]],"en-US":[["p","You can control the order of the expand and select columns by using ",["code","Table.EXPAND_COLUMN"]," and ",["code","Table.SELECT_COLUMN"],"."]]},meta:{order:14.1,version:"4.18.0",title:{"en-US":"Order Specific Column","zh-CN":"\u7279\u6B8A\u5217\u6392\u5E8F"},filename:"components/table/demo/order-column.md",id:"components-table-demo-order-column"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  description<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'name'</span> }<span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span>EXPAND_COLUMN<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'age'</span> }<span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span>SELECTION_COLUMN<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'address'</span> }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span>{columns}
    rowSelection<span class="token operator">=</span>{{}}
    expandable<span class="token operator">=</span>{{
      expandedRowRender<span class="token punctuation">:</span> record <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>p style<span class="token operator">=</span>{{ margin<span class="token punctuation">:</span> <span class="token number">0</span> }}<span class="token operator">></span>{record<span class="token punctuation">.</span>description}<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span><span class="token punctuation">,</span>
    }}
    dataSource<span class="token operator">=</span>{data}
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  description<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'name'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span><span class="token constant">EXPAND_COLUMN</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'age'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span><span class="token constant">SELECTION_COLUMN</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'address'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>
    rowSelection<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    expandable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> record <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span>
    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span><span class="token constant">EXPAND_COLUMN</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  Table<span class="token punctuation">.</span><span class="token constant">SELECTION_COLUMN</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Not Expandable'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">29</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Jiangsu No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'This not expandable'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Table
    columns<span class="token operator">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span>
    rowSelection<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    expandable<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token function-variable function">expandedRowRender</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>record<span class="token punctuation">.</span>description<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span>
    dataSource<span class="token operator">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span>
  <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name",key:"name"},C.Table.EXPAND_COLUMN,{title:"Age",dataIndex:"age",key:"age"},C.Table.SELECTION_COLUMN,{title:"Address",dataIndex:"address",key:"address"}],z=[{key:1,name:"John Brown",age:32,address:"New York No. 1 Lake Park",description:"My name is John Brown, I am 32 years old, living in New York No. 1 Lake Park."},{key:2,name:"Jim Green",age:42,address:"London No. 1 Lake Park",description:"My name is Jim Green, I am 42 years old, living in London No. 1 Lake Park."},{key:3,name:"Not Expandable",age:29,address:"Jiangsu No. 1 Lake Park",description:"This not expandable"},{key:4,name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",description:"My name is Joe Black, I am 32 years old, living in Sidney No. 1 Lake Park."}],B=function(){return g.default.createElement(C.Table,{columns:r,rowSelection:{},expandable:{expandedRowRender:function(H){return g.default.createElement("p",{style:{margin:0}},H.description)}},dataSource:z})},D=B;return Z.createElement(D)}}},4234:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8868\u683C\u7684\u5206\u9875\u8BBE\u7F6E\u3002"]],"en-US":[["p","Table pagination settings."]]},meta:{order:99,title:{"en-US":"Pagination Settings","zh-CN":"\u5206\u9875\u8BBE\u7F6E"},filename:"components/table/demo/pagination.md",id:"components-table-demo-pagination"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  tags<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
}

type TablePaginationPosition <span class="token operator">=</span>
  | <span class="token string">'topLeft'</span>
  | <span class="token string">'topCenter'</span>
  | <span class="token string">'topRight'</span>
  | <span class="token string">'bottomLeft'</span>
  | <span class="token string">'bottomCenter'</span>
  | <span class="token string">'bottomRight'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> topOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  { label<span class="token punctuation">:</span> <span class="token string">'topLeft'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'topLeft'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'topCenter'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'topCenter'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'topRight'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'topRight'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'none'</span> }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> bottomOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  { label<span class="token punctuation">:</span> <span class="token string">'bottomLeft'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'bottomLeft'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'bottomCenter'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'bottomCenter'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'bottomRight'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'bottomRight'</span> }<span class="token punctuation">,</span>
  { label<span class="token punctuation">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'none'</span> }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>tags<span class="token punctuation">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>span<span class="token operator">></span>
        {tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=</span><span class="token operator">></span> {
          let color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token punctuation">:</span> <span class="token string">'green'</span><span class="token comment" spellcheck="true">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> {
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token comment" spellcheck="true">;</span>
          }
          return <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>Tag color<span class="token operator">=</span>{color} key<span class="token operator">=</span>{tag}<span class="token operator">></span>
              {tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>}
            <span class="token operator">&lt;</span><span class="token operator">/</span>Tag<span class="token operator">></span>
          <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">)</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Space size<span class="token operator">=</span><span class="token string">"middle"</span><span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>Invite {record<span class="token punctuation">.</span>name}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
        <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'topLeft'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>div<span class="token operator">></span>
        <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group
          style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">10</span> }}
          options<span class="token operator">=</span>{topOptions}
          value<span class="token operator">=</span>{top}
          onChange<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> {
            <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          }}
        <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group
        style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">10</span> }}
        options<span class="token operator">=</span>{bottomOptions}
        value<span class="token operator">=</span>{bottom}
        onChange<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }}
      <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} pagination<span class="token operator">=</span>{{ position<span class="token punctuation">:</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span> }} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  tags<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

type TablePaginationPosition <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">'topLeft'</span>
  <span class="token operator">|</span> <span class="token string">'topCenter'</span>
  <span class="token operator">|</span> <span class="token string">'topRight'</span>
  <span class="token operator">|</span> <span class="token string">'bottomLeft'</span>
  <span class="token operator">|</span> <span class="token string">'bottomCenter'</span>
  <span class="token operator">|</span> <span class="token string">'bottomRight'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> topOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'topLeft'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'topLeft'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'topCenter'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'topCenter'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'topRight'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'topRight'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'none'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> bottomOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'bottomLeft'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'bottomLeft'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'bottomCenter'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'bottomCenter'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'bottomRight'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'bottomRight'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'none'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>tags<span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>tag <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    tags<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'topLeft'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>TablePaginationPosition<span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>topOptions<span class="token punctuation">}</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>top<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottomOptions<span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottom<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> position<span class="token operator">:</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Radio<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table<span class="token punctuation">,</span> Tag <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> topOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'topLeft'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'topLeft'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'topCenter'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'topCenter'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'topRight'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'topRight'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> bottomOptions <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'bottomLeft'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'bottomLeft'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'bottomCenter'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'bottomCenter'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'bottomRight'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'bottomRight'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'tags'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">tags</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">tag</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> color <span class="token operator">=</span> tag<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">5</span> <span class="token operator">?</span> <span class="token string">'geekblue'</span> <span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">;</span>

          <span class="token keyword">if</span> <span class="token punctuation">(</span>tag <span class="token operator">===</span> <span class="token string">'loser'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            color <span class="token operator">=</span> <span class="token string">'volcano'</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>

          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tag</span></span> <span class="token attr-name">color</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>color<span class="token punctuation">}</span></span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token punctuation">{</span>tag<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tag</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Invite <span class="token punctuation">{</span>record<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nice'</span><span class="token punctuation">,</span> <span class="token string">'developer'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'loser'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'cool'</span><span class="token punctuation">,</span> <span class="token string">'teacher'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> setTop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'topLeft'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>bottom<span class="token punctuation">,</span> setBottom<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'bottomRight'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>topOptions<span class="token punctuation">}</span></span>
          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>top<span class="token punctuation">}</span></span>
          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token function">setTop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">options</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottomOptions<span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>bottom<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">setBottom</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token punctuation">[</span>top<span class="token punctuation">,</span> bottom<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(e){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(h){return typeof h}:function(h){return h&&typeof Symbol=="function"&&h.constructor===Symbol&&h!==Symbol.prototype?"symbol":typeof h},C(e)}var g=l(12),k=z(l(0));function r(e){if(typeof WeakMap!="function")return null;var h=new WeakMap,a=new WeakMap;return(r=function(c){return c?a:h})(e)}function z(e,h){if(!h&&e&&e.__esModule)return e;if(e===null||C(e)!=="object"&&typeof e!="function")return{default:e};var a=r(h);if(a&&a.has(e))return a.get(e);var n={},c=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var y in e)if(y!=="default"&&Object.prototype.hasOwnProperty.call(e,y)){var J=c?Object.getOwnPropertyDescriptor(e,y):null;J&&(J.get||J.set)?Object.defineProperty(n,y,J):n[y]=e[y]}return n.default=e,a&&a.set(e,n),n}function B(e,h){return E(e)||H(e,h)||P(e,h)||D()}function D(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P(e,h){if(!!e){if(typeof e=="string")return T(e,h);var a=Object.prototype.toString.call(e).slice(8,-1);if(a==="Object"&&e.constructor&&(a=e.constructor.name),a==="Map"||a==="Set")return Array.from(e);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return T(e,h)}}function T(e,h){(h==null||h>e.length)&&(h=e.length);for(var a=0,n=new Array(h);a<h;a++)n[a]=e[a];return n}function H(e,h){var a=e==null?null:typeof Symbol!="undefined"&&e[Symbol.iterator]||e["@@iterator"];if(a!=null){var n=[],c=!0,y=!1,J,b;try{for(a=a.call(e);!(c=(J=a.next()).done)&&(n.push(J.value),!(h&&n.length===h));c=!0);}catch(p){y=!0,b=p}finally{try{!c&&a.return!=null&&a.return()}finally{if(y)throw b}}return n}}function E(e){if(Array.isArray(e))return e}var Y=[{label:"topLeft",value:"topLeft"},{label:"topCenter",value:"topCenter"},{label:"topRight",value:"topRight"},{label:"none",value:"none"}],W=[{label:"bottomLeft",value:"bottomLeft"},{label:"bottomCenter",value:"bottomCenter"},{label:"bottomRight",value:"bottomRight"},{label:"none",value:"none"}],S=[{title:"Name",dataIndex:"name",key:"name",render:function(h){return k.default.createElement("a",null,h)}},{title:"Age",dataIndex:"age",key:"age"},{title:"Address",dataIndex:"address",key:"address"},{title:"Tags",key:"tags",dataIndex:"tags",render:function(h){return k.default.createElement("span",null,h.map(function(a){var n=a.length>5?"geekblue":"green";return a==="loser"&&(n="volcano"),k.default.createElement(g.Tag,{color:n,key:a},a.toUpperCase())}))}},{title:"Action",key:"action",render:function(h,a){return k.default.createElement(g.Space,{size:"middle"},k.default.createElement("a",null,"Invite ",a.name),k.default.createElement("a",null,"Delete"))}}],N=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park",tags:["nice","developer"]},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park",tags:["loser"]},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park",tags:["cool","teacher"]}],R=function(){var h=(0,k.useState)("topLeft"),a=B(h,2),n=a[0],c=a[1],y=(0,k.useState)("bottomRight"),J=B(y,2),b=J[0],p=J[1];return k.default.createElement("div",null,k.default.createElement("div",null,k.default.createElement(g.Radio.Group,{style:{marginBottom:10},options:Y,value:n,onChange:function(m){c(m.target.value)}})),k.default.createElement(g.Radio.Group,{style:{marginBottom:10},options:W,value:b,onChange:function(m){p(m.target.value)}}),k.default.createElement(g.Table,{columns:S,pagination:{position:[n,b]},dataSource:N}))},t=R;return Z.createElement(t)}}},4235:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4F7F\u7528\u53D7\u63A7\u5C5E\u6027\u5BF9\u7B5B\u9009\u548C\u6392\u5E8F\u72B6\u6001\u8FDB\u884C\u63A7\u5236\u3002"],["blockquote",["ol",["li",["p","columns \u4E2D\u5B9A\u4E49\u4E86 filteredValue \u548C sortOrder \u5C5E\u6027\u5373\u89C6\u4E3A\u53D7\u63A7\u6A21\u5F0F\u3002"]],["li",["p","\u53EA\u652F\u6301\u540C\u65F6\u5BF9\u4E00\u5217\u8FDB\u884C\u6392\u5E8F\uFF0C\u8BF7\u4FDD\u8BC1\u53EA\u6709\u4E00\u5217\u7684 sortOrder \u5C5E\u6027\u662F\u751F\u6548\u7684\u3002"]],["li",["p","\u52A1\u5FC5\u6307\u5B9A ",["code","column.key"],"\u3002"]]]]],"en-US":[["p","Control filters and sorters by ",["code","filteredValue"]," and ",["code","sortOrder"],"."],["blockquote",["ol",["li",["p","Defining ",["code","filteredValue"]," or ",["code","sortOrder"]," means that it is in the controlled mode."]],["li",["p","Make sure ",["code","sortOrder"]," is assigned for only one column."]],["li",["p",["code","column.key"]," is required."]]]]]},meta:{order:8,title:{"en-US":"Reset filters and sorters","zh-CN":"\u53EF\u63A7\u7684\u7B5B\u9009\u548C\u6392\u5E8F"},filename:"components/table/demo/reset-filter.md",id:"components-table-demo-reset-filter"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import type { TableProps } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> FilterValue<span class="token punctuation">,</span> SorterResult } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>filteredInfo<span class="token punctuation">,</span> setFilteredInfo<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> FilterValue | <span class="token keyword">null</span><span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>sortedInfo<span class="token punctuation">,</span> setSortedInfo<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Various parameters'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span>sorter as SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> clearFilters <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> clearAll <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span>{}<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> setAgeSort <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span>{
      order<span class="token punctuation">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
      columnKey<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        { text<span class="token punctuation">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'Joe'</span> }<span class="token punctuation">,</span>
        { text<span class="token punctuation">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'Jim'</span> }<span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      filteredValue<span class="token punctuation">:</span> filteredInfo<span class="token punctuation">.</span>name || <span class="token keyword">null</span><span class="token punctuation">,</span>
      onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'name'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'age'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      filters<span class="token punctuation">:</span> <span class="token punctuation">[</span>
        { text<span class="token punctuation">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'London'</span> }<span class="token punctuation">,</span>
        { text<span class="token punctuation">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string">'New York'</span> }<span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      filteredValue<span class="token punctuation">:</span> filteredInfo<span class="token punctuation">.</span>address || <span class="token keyword">null</span><span class="token punctuation">,</span>
      onFilter<span class="token punctuation">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortOrder<span class="token punctuation">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'address'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Space style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span>{setAgeSort}<span class="token operator">></span>Sort age<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span>{clearFilters}<span class="token operator">></span>Clear filters<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button onClick<span class="token operator">=</span>{clearAll}<span class="token operator">></span>Clear filters <span class="token operator">and</span> sorters<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} onChange<span class="token operator">=</span>{handleChange} <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> FilterValue<span class="token punctuation">,</span> SorterResult <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>filteredInfo<span class="token punctuation">,</span> setFilteredInfo<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> FilterValue <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>sortedInfo<span class="token punctuation">,</span> setSortedInfo<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> TableProps<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Various parameters'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span>sorter <span class="token keyword">as</span> SorterResult<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">clearFilters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">clearAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">setAgeSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      order<span class="token operator">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
      columnKey<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      filters<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'Joe'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'Jim'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      filteredValue<span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'name'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'age'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      filters<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'London'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span> value<span class="token operator">:</span> <span class="token string">'New York'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      filteredValue<span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>address <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">:</span> string<span class="token punctuation">,</span> record<span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      sortOrder<span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'address'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      ellipsis<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setAgeSort<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Sort age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>clearFilters<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>clearAll<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters and sorters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>filteredInfo<span class="token punctuation">,</span> setFilteredInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>sortedInfo<span class="token punctuation">,</span> setSortedInfo<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Various parameters'</span><span class="token punctuation">,</span> pagination<span class="token punctuation">,</span> filters<span class="token punctuation">,</span> sorter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span>sorter<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">clearFilters</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">clearAll</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFilteredInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">setAgeSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setSortedInfo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">order</span><span class="token operator">:</span> <span class="token string">'descend'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">columnKey</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Joe'</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'Jim'</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">filteredValue</span><span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>name <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>name<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      <span class="token literal-property property">sortOrder</span><span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'name'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>age <span class="token operator">-</span> b<span class="token punctuation">.</span>age<span class="token punctuation">,</span>
      <span class="token literal-property property">sortOrder</span><span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'age'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">filters</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'London'</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
          <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'New York'</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">filteredValue</span><span class="token operator">:</span> filteredInfo<span class="token punctuation">.</span>address <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onFilter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> record</span><span class="token punctuation">)</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>address<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length <span class="token operator">-</span> b<span class="token punctuation">.</span>address<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      <span class="token literal-property property">sortOrder</span><span class="token operator">:</span> sortedInfo<span class="token punctuation">.</span>columnKey <span class="token operator">===</span> <span class="token string">'address'</span> <span class="token operator">?</span> sortedInfo<span class="token punctuation">.</span>order <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ellipsis</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setAgeSort<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Sort age<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>clearFilters<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>clearAll<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Clear filters and sorters<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(N){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(R){return typeof R}:function(R){return R&&typeof Symbol=="function"&&R.constructor===Symbol&&R!==Symbol.prototype?"symbol":typeof R},C(N)}var g=l(12),k=z(l(0));function r(N){if(typeof WeakMap!="function")return null;var R=new WeakMap,t=new WeakMap;return(r=function(h){return h?t:R})(N)}function z(N,R){if(!R&&N&&N.__esModule)return N;if(N===null||C(N)!=="object"&&typeof N!="function")return{default:N};var t=r(R);if(t&&t.has(N))return t.get(N);var e={},h=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in N)if(a!=="default"&&Object.prototype.hasOwnProperty.call(N,a)){var n=h?Object.getOwnPropertyDescriptor(N,a):null;n&&(n.get||n.set)?Object.defineProperty(e,a,n):e[a]=N[a]}return e.default=N,t&&t.set(N,e),e}function B(N,R){return E(N)||H(N,R)||P(N,R)||D()}function D(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P(N,R){if(!!N){if(typeof N=="string")return T(N,R);var t=Object.prototype.toString.call(N).slice(8,-1);if(t==="Object"&&N.constructor&&(t=N.constructor.name),t==="Map"||t==="Set")return Array.from(N);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return T(N,R)}}function T(N,R){(R==null||R>N.length)&&(R=N.length);for(var t=0,e=new Array(R);t<R;t++)e[t]=N[t];return e}function H(N,R){var t=N==null?null:typeof Symbol!="undefined"&&N[Symbol.iterator]||N["@@iterator"];if(t!=null){var e=[],h=!0,a=!1,n,c;try{for(t=t.call(N);!(h=(n=t.next()).done)&&(e.push(n.value),!(R&&e.length===R));h=!0);}catch(y){a=!0,c=y}finally{try{!h&&t.return!=null&&t.return()}finally{if(a)throw c}}return e}}function E(N){if(Array.isArray(N))return N}var Y=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Jim Red",age:32,address:"London No. 2 Lake Park"}],W=function(){var R=(0,k.useState)({}),t=B(R,2),e=t[0],h=t[1],a=(0,k.useState)({}),n=B(a,2),c=n[0],y=n[1],J=function(f,u,O){console.log("Various parameters",f,u,O),h(u),y(O)},b=function(){h({})},p=function(){h({}),y({})},w=function(){y({order:"descend",columnKey:"age"})},m=[{title:"Name",dataIndex:"name",key:"name",filters:[{text:"Joe",value:"Joe"},{text:"Jim",value:"Jim"}],filteredValue:e.name||null,onFilter:function(f,u){return u.name.includes(f)},sorter:function(f,u){return f.name.length-u.name.length},sortOrder:c.columnKey==="name"?c.order:null,ellipsis:!0},{title:"Age",dataIndex:"age",key:"age",sorter:function(f,u){return f.age-u.age},sortOrder:c.columnKey==="age"?c.order:null,ellipsis:!0},{title:"Address",dataIndex:"address",key:"address",filters:[{text:"London",value:"London"},{text:"New York",value:"New York"}],filteredValue:e.address||null,onFilter:function(f,u){return u.address.includes(f)},sorter:function(f,u){return f.address.length-u.address.length},sortOrder:c.columnKey==="address"?c.order:null,ellipsis:!0}];return k.default.createElement(k.default.Fragment,null,k.default.createElement(g.Space,{style:{marginBottom:16}},k.default.createElement(g.Button,{onClick:w},"Sort age"),k.default.createElement(g.Button,{onClick:b},"Clear filters"),k.default.createElement(g.Button,{onClick:p},"Clear filters and sorters")),k.default.createElement(g.Table,{columns:m,dataSource:Y,onChange:J}))},S=W;return Z.createElement(S)}}},4236:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u96C6\u6210 ",["a",{title:null,href:"https://github.com/STRML/react-resizable"},"react-resizable"]," \u6765\u5B9E\u73B0\u53EF\u4F38\u7F29\u5217\u3002\u5982\u679C\u6709\u6392\u5E8F\u9700\u8981\uFF0C\u53EF\u4EE5\u901A\u8FC7",["a",{title:null,href:"https://codesandbox.io/s/zrj8xvyzxx"},"\u989D\u5916\u6807\u8BB0"],"\u963B\u6B62\u89E6\u53D1\u6392\u5E8F\u3002"]],"en-US":[["p","Implement resizable column by integrate with ",["a",{title:null,href:"https://github.com/STRML/react-resizable"},"react-resizable"],". When sort needed, you can use ",["a",{title:null,href:"https://codesandbox.io/s/zrj8xvyzxx"},"additional mark"]," to prevent resize trigger sort."]]},meta:{order:27,title:{"en-US":"Resizable column","zh-CN":"\u53EF\u4F38\u7F29\u5217"},debug:!0,filename:"components/table/demo/resizable-column.md",id:"components-table-demo-resizable-column"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType<span class="token punctuation">,</span> ColumnType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import type { ResizeCallbackData } from <span class="token string">'react-resizable'</span><span class="token comment" spellcheck="true">;</span>
import { Resizable } from <span class="token string">'react-resizable'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  date<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  amount<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  type<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  note<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> ResizableTitle <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token punctuation">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">&amp;</span> {
    onResize<span class="token punctuation">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span>Element<span class="token operator">></span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> ResizeCallbackData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
    width<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> { onResize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps } <span class="token operator">=</span> props<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>!width<span class="token punctuation">)</span> {
    return <span class="token operator">&lt;</span>th {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  }

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Resizable
      width<span class="token operator">=</span>{width}
      height<span class="token operator">=</span>{<span class="token number">0</span>}
      handle<span class="token operator">=</span>{
        <span class="token operator">&lt;</span>span
          className<span class="token operator">=</span><span class="token string">"react-resizable-handle"</span>
          onClick<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> {
            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          }}
        <span class="token operator">/</span><span class="token operator">></span>
      }
      onResize<span class="token operator">=</span>{onResize}
      draggableOpts<span class="token operator">=</span>{{ enableUserSelectHack<span class="token punctuation">:</span> <span class="token boolean">false</span> }}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>th {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>restProps} <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Resizable<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>columns<span class="token punctuation">,</span> setColumns<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Amount'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'amount'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      sorter<span class="token punctuation">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> a<span class="token punctuation">.</span>amount <span class="token operator">-</span> b<span class="token punctuation">.</span>amount<span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Type'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'type'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Note'</span><span class="token punctuation">,</span>
      dataIndex<span class="token punctuation">:</span> <span class="token string">'note'</span><span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
      key<span class="token punctuation">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
      render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>Delete<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    {
      key<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      date<span class="token punctuation">:</span> <span class="token string">'2018-02-11'</span><span class="token punctuation">,</span>
      amount<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      type<span class="token punctuation">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token punctuation">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      date<span class="token punctuation">:</span> <span class="token string">'2018-03-11'</span><span class="token punctuation">,</span>
      amount<span class="token punctuation">:</span> <span class="token number">243</span><span class="token punctuation">,</span>
      type<span class="token punctuation">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token punctuation">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      date<span class="token punctuation">:</span> <span class="token string">'2018-04-11'</span><span class="token punctuation">,</span>
      amount<span class="token punctuation">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
      type<span class="token punctuation">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token punctuation">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleResize <span class="token operator">=</span>
    <span class="token punctuation">(</span>index<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
    <span class="token punctuation">(</span>_<span class="token punctuation">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span>Element<span class="token operator">></span><span class="token punctuation">,</span> { size }<span class="token punctuation">:</span> ResizeCallbackData<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> newColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>columns<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
      newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> {
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>
        width<span class="token punctuation">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      }<span class="token comment" spellcheck="true">;</span>
      <span class="token function">setColumns</span><span class="token punctuation">(</span>newColumns<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> mergeColumns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>col<span class="token punctuation">,</span>
    onHeaderCell<span class="token punctuation">:</span> column <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      width<span class="token punctuation">:</span> <span class="token punctuation">(</span>column as ColumnType<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      onResize<span class="token punctuation">:</span> <span class="token function">handleResize</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Table
      bordered
      components<span class="token operator">=</span>{{
        header<span class="token punctuation">:</span> {
          cell<span class="token punctuation">:</span> ResizableTitle<span class="token punctuation">,</span>
        }<span class="token punctuation">,</span>
      }}
      columns<span class="token operator">=</span>{mergeColumns}
      dataSource<span class="token operator">=</span>{data}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType<span class="token punctuation">,</span> ColumnType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ResizeCallbackData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-resizable'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Resizable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-resizable'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  date<span class="token operator">:</span> string<span class="token punctuation">;</span>
  amount<span class="token operator">:</span> number<span class="token punctuation">;</span>
  type<span class="token operator">:</span> string<span class="token punctuation">;</span>
  note<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">ResizableTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  props<span class="token operator">:</span> React<span class="token punctuation">.</span>HTMLAttributes<span class="token operator">&lt;</span>any<span class="token operator">></span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onResize</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span>Element<span class="token operator">></span><span class="token punctuation">,</span> data<span class="token operator">:</span> ResizeCallbackData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
    width<span class="token operator">:</span> number<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> onResize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Resizable</span></span>
      <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span>
      <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">handle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>
          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>react-resizable-handle<span class="token punctuation">"</span></span>
          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">}</span></span>
      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onResize<span class="token punctuation">}</span></span>
      <span class="token attr-name">draggableOpts</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> enableUserSelectHack<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Resizable</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>columns<span class="token punctuation">,</span> setColumns<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Amount'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'amount'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>amount <span class="token operator">-</span> b<span class="token punctuation">.</span>amount<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Type'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'type'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Note'</span><span class="token punctuation">,</span>
      dataIndex<span class="token operator">:</span> <span class="token string">'note'</span><span class="token punctuation">,</span>
      width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
      key<span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      date<span class="token operator">:</span> <span class="token string">'2018-02-11'</span><span class="token punctuation">,</span>
      amount<span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      date<span class="token operator">:</span> <span class="token string">'2018-03-11'</span><span class="token punctuation">,</span>
      amount<span class="token operator">:</span> <span class="token number">243</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      date<span class="token operator">:</span> <span class="token string">'2018-04-11'</span><span class="token punctuation">,</span>
      amount<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
      type<span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      note<span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleResize</span> <span class="token operator">=</span>
    <span class="token punctuation">(</span>index<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token punctuation">(</span>_<span class="token operator">:</span> React<span class="token punctuation">.</span>SyntheticEvent<span class="token operator">&lt;</span>Element<span class="token operator">></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span><span class="token operator">:</span> ResizeCallbackData<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>columns<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token operator">...</span>newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span>
        width<span class="token operator">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">setColumns</span><span class="token punctuation">(</span>newColumns<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> mergeColumns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>col<span class="token punctuation">,</span>
    <span class="token function-variable function">onHeaderCell</span><span class="token operator">:</span> column <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      width<span class="token operator">:</span> <span class="token punctuation">(</span>column <span class="token keyword">as</span> ColumnType<span class="token operator">&lt;</span>DataType<span class="token operator">></span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      onResize<span class="token operator">:</span> <span class="token function">handleResize</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        header<span class="token operator">:</span> <span class="token punctuation">{</span>
          cell<span class="token operator">:</span> ResizableTitle<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergeColumns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Resizable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-resizable'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">ResizableTitle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> onResize<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token operator">...</span>restProps <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Resizable</span></span>
      <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>width<span class="token punctuation">}</span></span>
      <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">handle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>
          <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>react-resizable-handle<span class="token punctuation">"</span></span>
          <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">}</span></span>
      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onResize<span class="token punctuation">}</span></span>
      <span class="token attr-name">draggableOpts</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">enableUserSelectHack</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>restProps<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Resizable</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>columns<span class="token punctuation">,</span> setColumns<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Date'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'date'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Amount'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'amount'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token function-variable function">sorter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">.</span>amount <span class="token operator">-</span> b<span class="token punctuation">.</span>amount<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Type'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'type'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Note'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'note'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'action'</span><span class="token punctuation">,</span>
      <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">'2018-02-11'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">'2018-03-11'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">243</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token string">'2018-04-11'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">'income'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">note</span><span class="token operator">:</span> <span class="token string">'transfer'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleResize</span> <span class="token operator">=</span>
    <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> newColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>columns<span class="token punctuation">]</span><span class="token punctuation">;</span>
      newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>newColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> size<span class="token punctuation">.</span>width <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">setColumns</span><span class="token punctuation">(</span>newColumns<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> mergeColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">col<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token operator">...</span>col<span class="token punctuation">,</span>
    <span class="token function-variable function">onHeaderCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">column</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> column<span class="token punctuation">.</span>width<span class="token punctuation">,</span>
      <span class="token literal-property property">onResize</span><span class="token operator">:</span> <span class="token function">handleResize</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">cell</span><span class="token operator">:</span> ResizableTitle<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergeColumns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(p){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(w){return typeof w}:function(w){return w&&typeof Symbol=="function"&&w.constructor===Symbol&&w!==Symbol.prototype?"symbol":typeof w},C(p)}var g=l(12),k=D(l(0)),r=l(4237),z=["onResize","width"];function B(p){if(typeof WeakMap!="function")return null;var w=new WeakMap,m=new WeakMap;return(B=function(f){return f?m:w})(p)}function D(p,w){if(!w&&p&&p.__esModule)return p;if(p===null||C(p)!=="object"&&typeof p!="function")return{default:p};var m=B(w);if(m&&m.has(p))return m.get(p);var L={},f=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in p)if(u!=="default"&&Object.prototype.hasOwnProperty.call(p,u)){var O=f?Object.getOwnPropertyDescriptor(p,u):null;O&&(O.get||O.set)?Object.defineProperty(L,u,O):L[u]=p[u]}return L.default=p,m&&m.set(p,L),L}function P(p,w){var m=Object.keys(p);if(Object.getOwnPropertySymbols){var L=Object.getOwnPropertySymbols(p);w&&(L=L.filter(function(f){return Object.getOwnPropertyDescriptor(p,f).enumerable})),m.push.apply(m,L)}return m}function T(p){for(var w=1;w<arguments.length;w++){var m=arguments[w]!=null?arguments[w]:{};w%2?P(Object(m),!0).forEach(function(L){H(p,L,m[L])}):Object.getOwnPropertyDescriptors?Object.defineProperties(p,Object.getOwnPropertyDescriptors(m)):P(Object(m)).forEach(function(L){Object.defineProperty(p,L,Object.getOwnPropertyDescriptor(m,L))})}return p}function H(p,w,m){return w in p?Object.defineProperty(p,w,{value:m,enumerable:!0,configurable:!0,writable:!0}):p[w]=m,p}function E(p){return S(p)||W(p)||t(p)||Y()}function Y(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function W(p){if(typeof Symbol!="undefined"&&p[Symbol.iterator]!=null||p["@@iterator"]!=null)return Array.from(p)}function S(p){if(Array.isArray(p))return e(p)}function N(p,w){return a(p)||h(p,w)||t(p,w)||R()}function R(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function t(p,w){if(!!p){if(typeof p=="string")return e(p,w);var m=Object.prototype.toString.call(p).slice(8,-1);if(m==="Object"&&p.constructor&&(m=p.constructor.name),m==="Map"||m==="Set")return Array.from(p);if(m==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m))return e(p,w)}}function e(p,w){(w==null||w>p.length)&&(w=p.length);for(var m=0,L=new Array(w);m<w;m++)L[m]=p[m];return L}function h(p,w){var m=p==null?null:typeof Symbol!="undefined"&&p[Symbol.iterator]||p["@@iterator"];if(m!=null){var L=[],f=!0,u=!1,O,K;try{for(m=m.call(p);!(f=(O=m.next()).done)&&(L.push(O.value),!(w&&L.length===w));f=!0);}catch(Q){u=!0,K=Q}finally{try{!f&&m.return!=null&&m.return()}finally{if(u)throw K}}return L}}function a(p){if(Array.isArray(p))return p}function n(p,w){if(p==null)return{};var m=c(p,w),L,f;if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(p);for(f=0;f<u.length;f++)L=u[f],!(w.indexOf(L)>=0)&&(!Object.prototype.propertyIsEnumerable.call(p,L)||(m[L]=p[L]))}return m}function c(p,w){if(p==null)return{};var m={},L=Object.keys(p),f,u;for(u=0;u<L.length;u++)f=L[u],!(w.indexOf(f)>=0)&&(m[f]=p[f]);return m}var y=function(w){var m=w.onResize,L=w.width,f=n(w,z);return L?k.default.createElement(r.Resizable,{width:L,height:0,handle:k.default.createElement("span",{className:"react-resizable-handle",onClick:function(O){O.stopPropagation()}}),onResize:m,draggableOpts:{enableUserSelectHack:!1}},k.default.createElement("th",f)):k.default.createElement("th",f)},J=function(){var w=(0,k.useState)([{title:"Date",dataIndex:"date",width:200},{title:"Amount",dataIndex:"amount",width:100,sorter:function(j,G){return j.amount-G.amount}},{title:"Type",dataIndex:"type",width:100},{title:"Note",dataIndex:"note",width:100},{title:"Action",key:"action",render:function(){return k.default.createElement("a",null,"Delete")}}]),m=N(w,2),L=m[0],f=m[1],u=[{key:0,date:"2018-02-11",amount:120,type:"income",note:"transfer"},{key:1,date:"2018-03-11",amount:243,type:"income",note:"transfer"},{key:2,date:"2018-04-11",amount:98,type:"income",note:"transfer"}],O=function(j){return function(G,nn){var an=nn.size,cn=E(L);cn[j]=T(T({},cn[j]),{},{width:an.width}),f(cn)}},K=L.map(function(Q,j){return T(T({},Q),{},{onHeaderCell:function(nn){return{width:nn.width,onResize:O(j)}}})});return k.default.createElement(g.Table,{bordered:!0,components:{header:{cell:y}},columns:K,dataSource:u})},b=J;return Z.createElement(b)},style:`#components-table-demo-resizable-column .react-resizable {
  position: relative;
  background-clip: padding-box;
}

#components-table-demo-resizable-column .react-resizable-handle {
  position: absolute;
  right: -5px;
  bottom: 0;
  z-index: 1;
  width: 10px;
  height: 100%;
  cursor: col-resize;
}`,highlightedStyle:`<span class="token selector"><span class="token id">#components-table-demo-resizable-column</span> <span class="token class">.react-resizable</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
  <span class="token property">background-clip</span><span class="token punctuation">:</span> padding-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token id">#components-table-demo-resizable-column</span> <span class="token class">.react-resizable-handle</span> </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">5</span>px<span class="token punctuation">;</span>
  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>
  <span class="token property">cursor</span><span class="token punctuation">:</span> col-resize<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4237:function(kn,dn,l){"use strict";kn.exports=function(){throw new Error("Don't instantiate Resizable directly! Use require('react-resizable').Resizable")},kn.exports.Resizable=l(3576).default,kn.exports.ResizableBox=l(4239).default},4238:function(kn,dn,l){"use strict";dn.__esModule=!0,dn.cloneElement=k;var _=Z(l(0));function Z(r){return r&&r.__esModule?r:{default:r}}function U(r,z){var B=Object.keys(r);if(Object.getOwnPropertySymbols){var D=Object.getOwnPropertySymbols(r);z&&(D=D.filter(function(P){return Object.getOwnPropertyDescriptor(r,P).enumerable})),B.push.apply(B,D)}return B}function C(r){for(var z=1;z<arguments.length;z++){var B=arguments[z]!=null?arguments[z]:{};z%2?U(Object(B),!0).forEach(function(D){g(r,D,B[D])}):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(B)):U(Object(B)).forEach(function(D){Object.defineProperty(r,D,Object.getOwnPropertyDescriptor(B,D))})}return r}function g(r,z,B){return z in r?Object.defineProperty(r,z,{value:B,enumerable:!0,configurable:!0,writable:!0}):r[z]=B,r}function k(r,z){return z.style&&r.props.style&&(z.style=C(C({},r.props.style),z.style)),z.className&&r.props.className&&(z.className=r.props.className+" "+z.className),_.default.cloneElement(r,z)}},4239:function(kn,dn,l){"use strict";dn.__esModule=!0,dn.default=void 0;var _=z(l(0)),Z=k(l(11)),U=k(l(3576)),C=l(3577),g=["handle","handleSize","onResize","onResizeStart","onResizeStop","draggableOpts","minConstraints","maxConstraints","lockAspectRatio","axis","width","height","resizeHandles","style","transformScale"];function k(S){return S&&S.__esModule?S:{default:S}}function r(S){if(typeof WeakMap!="function")return null;var N=new WeakMap,R=new WeakMap;return(r=function(e){return e?R:N})(S)}function z(S,N){if(!N&&S&&S.__esModule)return S;if(S===null||typeof S!="object"&&typeof S!="function")return{default:S};var R=r(N);if(R&&R.has(S))return R.get(S);var t={},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var h in S)if(h!=="default"&&Object.prototype.hasOwnProperty.call(S,h)){var a=e?Object.getOwnPropertyDescriptor(S,h):null;a&&(a.get||a.set)?Object.defineProperty(t,h,a):t[h]=S[h]}return t.default=S,R&&R.set(S,t),t}function B(){return B=Object.assign||function(S){for(var N=1;N<arguments.length;N++){var R=arguments[N];for(var t in R)Object.prototype.hasOwnProperty.call(R,t)&&(S[t]=R[t])}return S},B.apply(this,arguments)}function D(S,N){var R=Object.keys(S);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(S);N&&(t=t.filter(function(e){return Object.getOwnPropertyDescriptor(S,e).enumerable})),R.push.apply(R,t)}return R}function P(S){for(var N=1;N<arguments.length;N++){var R=arguments[N]!=null?arguments[N]:{};N%2?D(Object(R),!0).forEach(function(t){T(S,t,R[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(S,Object.getOwnPropertyDescriptors(R)):D(Object(R)).forEach(function(t){Object.defineProperty(S,t,Object.getOwnPropertyDescriptor(R,t))})}return S}function T(S,N,R){return N in S?Object.defineProperty(S,N,{value:R,enumerable:!0,configurable:!0,writable:!0}):S[N]=R,S}function H(S,N){if(S==null)return{};var R={},t=Object.keys(S),e,h;for(h=0;h<t.length;h++)e=t[h],!(N.indexOf(e)>=0)&&(R[e]=S[e]);return R}function E(S,N){S.prototype=Object.create(N.prototype),S.prototype.constructor=S,Y(S,N)}function Y(S,N){return Y=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},Y(S,N)}var W=function(S){E(N,S);function N(){for(var t,e=arguments.length,h=new Array(e),a=0;a<e;a++)h[a]=arguments[a];return t=S.call.apply(S,[this].concat(h))||this,t.state={width:t.props.width,height:t.props.height,propsWidth:t.props.width,propsHeight:t.props.height},t.onResize=function(n,c){var y=c.size;t.props.onResize?(n.persist==null||n.persist(),t.setState(y,function(){return t.props.onResize&&t.props.onResize(n,c)})):t.setState(y)},t}N.getDerivedStateFromProps=function(e,h){return h.propsWidth!==e.width||h.propsHeight!==e.height?{width:e.width,height:e.height,propsWidth:e.width,propsHeight:e.height}:null};var R=N.prototype;return R.render=function(){var e=this.props,h=e.handle,a=e.handleSize,n=e.onResize,c=e.onResizeStart,y=e.onResizeStop,J=e.draggableOpts,b=e.minConstraints,p=e.maxConstraints,w=e.lockAspectRatio,m=e.axis,L=e.width,f=e.height,u=e.resizeHandles,O=e.style,K=e.transformScale,Q=H(e,g);return _.createElement(U.default,{axis:m,draggableOpts:J,handle:h,handleSize:a,height:this.state.height,lockAspectRatio:w,maxConstraints:p,minConstraints:b,onResizeStart:c,onResize:this.onResize,onResizeStop:y,resizeHandles:u,transformScale:K,width:this.state.width},_.createElement("div",B({},Q,{style:P(P({},O),{},{width:this.state.width+"px",height:this.state.height+"px"})})))},N}(_.Component);dn.default=W,W.propTypes=P(P({},C.resizableProps),{},{children:Z.default.element})},4240:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u54CD\u5E94\u5F0F\u914D\u7F6E\u5217\u7684\u5C55\u793A\u3002"]],"en-US":[["p","Responsive columns."]]},meta:{order:31,title:{"zh-CN":"\u54CD\u5E94\u5F0F","en-US":"Responsive"},filename:"components/table/demo/responsive.md",id:"components-table-demo-responsive"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name (all screens)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> text <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age (medium screen or bigger)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    responsive<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'md'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address (large screen or bigger)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    responsive<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'lg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name (all screens)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> text <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age (medium screen or bigger)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    responsive<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'md'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address (large screen or bigger)'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    responsive<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'lg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name (all screens)'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age (medium screen or bigger)'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">responsive</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'md'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address (large screen or bigger)'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">responsive</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'lg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name (all screens)",dataIndex:"name",key:"name",render:function(T){return g.default.createElement("a",null,T)}},{title:"Age (medium screen or bigger)",dataIndex:"age",key:"age",responsive:["md"]},{title:"Address (large screen or bigger)",dataIndex:"address",key:"address",responsive:["lg"]}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"}],B=function(){return g.default.createElement(C.Table,{columns:r,dataSource:z})},D=B;return Z.createElement(D)}}},4241:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u9009\u62E9\u540E\u8FDB\u884C\u64CD\u4F5C\uFF0C\u5B8C\u6210\u540E\u6E05\u7A7A\u9009\u62E9\uFF0C\u901A\u8FC7 ",["code","rowSelection.selectedRowKeys"]," \u6765\u63A7\u5236\u9009\u4E2D\u9879\u3002"]],"en-US":[["p","To perform operations and clear selections after selecting some rows, use ",["code","rowSelection.selectedRowKeys"]," to control selected rows."]]},meta:{order:3,title:{"en-US":"Selection and operation","zh-CN":"\u9009\u62E9\u548C\u64CD\u4F5C"},filename:"components/table/demo/row-selection-and-operation.md",id:"components-table-demo-row-selection-and-operation"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Button<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 46; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edward King \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London<span class="token punctuation">,</span> Park Lane no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> ajax request after empty completing
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onSelectChange <span class="token operator">=</span> <span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> {
    selectedRowKeys<span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> onSelectChange<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> hasSelected <span class="token operator">=</span> selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button type<span class="token operator">=</span><span class="token string">"primary"</span> onClick<span class="token operator">=</span>{start} disabled<span class="token operator">=</span>{!hasSelected} loading<span class="token operator">=</span>{loading}<span class="token operator">></span>
          Reload
        <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
        <span class="token operator">&lt;</span>span style<span class="token operator">=</span>{{ marginLeft<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>
          {hasSelected <span class="token operator">?</span> \`Selected \${selectedRowKeys<span class="token punctuation">.</span>length} items\` <span class="token punctuation">:</span> <span class="token string">''</span>}
        <span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table rowSelection<span class="token operator">=</span>{rowSelection} columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ajax request after empty completing</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>newSelectedRowKeys<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
    selectedRowKeys<span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> onSelectChange<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hasSelected <span class="token operator">=</span> selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>start<span class="token punctuation">}</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span>hasSelected<span class="token punctuation">}</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          Reload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginLeft<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>hasSelected <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Selected </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ajax request after empty completing</span>

    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newSelectedRowKeys</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
    selectedRowKeys<span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> onSelectChange<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hasSelected <span class="token operator">=</span> selectedRowKeys<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>start<span class="token punctuation">}</span></span> <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token operator">!</span>hasSelected<span class="token punctuation">}</span></span> <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>loading<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          Reload
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">marginLeft</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">></span></span>
          <span class="token punctuation">{</span>hasSelected <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Selected </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token punctuation">.</span>length<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> items</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(t){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(t)}var g=l(12),k=z(l(0));function r(t){if(typeof WeakMap!="function")return null;var e=new WeakMap,h=new WeakMap;return(r=function(n){return n?h:e})(t)}function z(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||C(t)!=="object"&&typeof t!="function")return{default:t};var h=r(e);if(h&&h.has(t))return h.get(t);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in t)if(c!=="default"&&Object.prototype.hasOwnProperty.call(t,c)){var y=n?Object.getOwnPropertyDescriptor(t,c):null;y&&(y.get||y.set)?Object.defineProperty(a,c,y):a[c]=t[c]}return a.default=t,h&&h.set(t,a),a}function B(t,e){return E(t)||H(t,e)||P(t,e)||D()}function D(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P(t,e){if(!!t){if(typeof t=="string")return T(t,e);var h=Object.prototype.toString.call(t).slice(8,-1);if(h==="Object"&&t.constructor&&(h=t.constructor.name),h==="Map"||h==="Set")return Array.from(t);if(h==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h))return T(t,e)}}function T(t,e){(e==null||e>t.length)&&(e=t.length);for(var h=0,a=new Array(e);h<e;h++)a[h]=t[h];return a}function H(t,e){var h=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(h!=null){var a=[],n=!0,c=!1,y,J;try{for(h=h.call(t);!(n=(y=h.next()).done)&&(a.push(y.value),!(e&&a.length===e));n=!0);}catch(b){c=!0,J=b}finally{try{!n&&h.return!=null&&h.return()}finally{if(c)throw J}}return a}}function E(t){if(Array.isArray(t))return t}for(var Y=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],W=[],S=0;S<46;S++)W.push({key:S,name:"Edward King ".concat(S),age:32,address:"London, Park Lane no. ".concat(S)});var N=function(){var e=(0,k.useState)([]),h=B(e,2),a=h[0],n=h[1],c=(0,k.useState)(!1),y=B(c,2),J=y[0],b=y[1],p=function(){b(!0),setTimeout(function(){n([]),b(!1)},1e3)},w=function(u){console.log("selectedRowKeys changed: ",a),n(u)},m={selectedRowKeys:a,onChange:w},L=a.length>0;return k.default.createElement("div",null,k.default.createElement("div",{style:{marginBottom:16}},k.default.createElement(g.Button,{type:"primary",onClick:p,disabled:!L,loading:J},"Reload"),k.default.createElement("span",{style:{marginLeft:8}},L?"Selected ".concat(a.length," items"):"")),k.default.createElement(g.Table,{rowSelection:m,columns:Y,dataSource:W}))},R=N;return Z.createElement(R)}}},4242:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u81EA\u5B9A\u4E49\u9009\u9879\u5206\u7EC4\u3002"]],"en-US":[["p","Customize selection group."]]},meta:{order:99,title:{"en-US":"Custom selection group","zh-CN":"\u81EA\u5B9A\u4E49\u9009\u62E9\u9879\u7EC4"},debug:!0,filename:"components/table/demo/row-selection-custom-debug.md",id:"components-table-demo-row-selection-custom-debug"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { TableRowSelection } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 46; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> i % <span class="token number">2</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">?</span> \`Edward King \${i}\` <span class="token punctuation">:</span> <span class="token string">'Another Row'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> rowSelection<span class="token punctuation">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> {
    renderCell<span class="token punctuation">:</span> <span class="token punctuation">(</span>checked<span class="token punctuation">,</span> _record<span class="token punctuation">,</span> index<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      props<span class="token punctuation">:</span> { rowSpan<span class="token punctuation">:</span> index % <span class="token number">2</span> <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token punctuation">:</span> <span class="token number">0</span> }<span class="token punctuation">,</span>
      children<span class="token punctuation">:</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;></span>
          {<span class="token function">String</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span>}<span class="token punctuation">:</span> {node}
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>
  return <span class="token operator">&lt;</span>Table rowSelection<span class="token operator">=</span>{rowSelection} columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableRowSelection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">'Another Row'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rowSelection<span class="token operator">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">renderCell</span><span class="token operator">:</span> <span class="token punctuation">(</span>checked<span class="token punctuation">,</span> _record<span class="token punctuation">,</span> index<span class="token punctuation">,</span> node<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      props<span class="token operator">:</span> <span class="token punctuation">{</span> rowSpan<span class="token operator">:</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      children<span class="token operator">:</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">{</span><span class="token function">String</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>node<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">'Another Row'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">renderCell</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">checked<span class="token punctuation">,</span> _record<span class="token punctuation">,</span> index<span class="token punctuation">,</span> node</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">rowSpan</span><span class="token operator">:</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">2</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
          <span class="token punctuation">{</span><span class="token function">String</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>node<span class="token punctuation">}</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(T){return T&&T.__esModule?T:{default:T}}for(var r=[{title:"Name",dataIndex:"name"}],z=[],B=0;B<46;B++)z.push({key:B,name:B%2===0?"Edward King ".concat(B):"Another Row"});var D=function(){var H={renderCell:function(Y,W,S,N){return{props:{rowSpan:S%2===0?2:0},children:g.default.createElement(g.default.Fragment,null,String(Y),": ",N)}}};return g.default.createElement(C.Table,{rowSelection:H,columns:r,dataSource:z})},P=D;return Z.createElement(P)}}},4243:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","rowSelection.selections"]," \u81EA\u5B9A\u4E49\u9009\u62E9\u9879\uFF0C\u9ED8\u8BA4\u4E0D\u663E\u793A\u4E0B\u62C9\u9009\u9879\uFF0C\u8BBE\u4E3A ",["code","true"]," \u65F6\u663E\u793A\u9ED8\u8BA4\u9009\u62E9\u9879\u3002"]],"en-US":[["p","Use ",["code","rowSelection.selections"]," custom selections, default no select dropdown, show default selections via setting to ",["code","true"],"."]]},meta:{order:4,title:{"en-US":"Custom selection","zh-CN":"\u81EA\u5B9A\u4E49\u9009\u62E9\u9879"},filename:"components/table/demo/row-selection-custom.md",id:"components-table-demo-row-selection-custom"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { TableRowSelection } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 46; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edward King \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London<span class="token punctuation">,</span> Park Lane no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onSelectChange <span class="token operator">=</span> <span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> rowSelection<span class="token punctuation">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> {
    selectedRowKeys<span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> onSelectChange<span class="token punctuation">,</span>
    selections<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      Table<span class="token punctuation">.</span>SELECTION_ALL<span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span>SELECTION_INVERT<span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span>SELECTION_NONE<span class="token punctuation">,</span>
      {
        key<span class="token punctuation">:</span> <span class="token string">'odd'</span><span class="token punctuation">,</span>
        text<span class="token punctuation">:</span> <span class="token string">'Select Odd Row'</span><span class="token punctuation">,</span>
        onSelect<span class="token punctuation">:</span> changableRowKeys <span class="token operator">=</span><span class="token operator">></span> {
          let newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index % <span class="token number">2</span> !<span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> {
              return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>
            }
            return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>
          }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        key<span class="token punctuation">:</span> <span class="token string">'even'</span><span class="token punctuation">,</span>
        text<span class="token punctuation">:</span> <span class="token string">'Select Even Row'</span><span class="token punctuation">,</span>
        onSelect<span class="token punctuation">:</span> changableRowKeys <span class="token operator">=</span><span class="token operator">></span> {
          let newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index % <span class="token number">2</span> !<span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> {
              return <span class="token boolean">true</span><span class="token comment" spellcheck="true">;</span>
            }
            return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>
          }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token operator">&lt;</span>Table rowSelection<span class="token operator">=</span>{rowSelection} columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableRowSelection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span>newSelectedRowKeys<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> rowSelection<span class="token operator">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    selectedRowKeys<span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> onSelectChange<span class="token punctuation">,</span>
    selections<span class="token operator">:</span> <span class="token punctuation">[</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_ALL</span><span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_INVERT</span><span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_NONE</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        key<span class="token operator">:</span> <span class="token string">'odd'</span><span class="token punctuation">,</span>
        text<span class="token operator">:</span> <span class="token string">'Select Odd Row'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onSelect</span><span class="token operator">:</span> changableRowKeys <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        key<span class="token operator">:</span> <span class="token string">'even'</span><span class="token punctuation">,</span>
        text<span class="token operator">:</span> <span class="token string">'Select Even Row'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onSelect</span><span class="token operator">:</span> changableRowKeys <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">46</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edward King </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London, Park Lane no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectedRowKeys<span class="token punctuation">,</span> setSelectedRowKeys<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onSelectChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newSelectedRowKeys</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'selectedRowKeys changed: '</span><span class="token punctuation">,</span> selectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
    selectedRowKeys<span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> onSelectChange<span class="token punctuation">,</span>
    <span class="token literal-property property">selections</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_ALL</span><span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_INVERT</span><span class="token punctuation">,</span>
      Table<span class="token punctuation">.</span><span class="token constant">SELECTION_NONE</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'odd'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Select Odd Row'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">changableRowKeys</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'even'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">'Select Even Row'</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">changableRowKeys</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">let</span> newSelectedRowKeys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
          newSelectedRowKeys <span class="token operator">=</span> changableRowKeys<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">setSelectedRowKeys</span><span class="token punctuation">(</span>newSelectedRowKeys<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rowSelection<span class="token punctuation">}</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(t){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(t)}var g=l(12),k=z(l(0));function r(t){if(typeof WeakMap!="function")return null;var e=new WeakMap,h=new WeakMap;return(r=function(n){return n?h:e})(t)}function z(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||C(t)!=="object"&&typeof t!="function")return{default:t};var h=r(e);if(h&&h.has(t))return h.get(t);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in t)if(c!=="default"&&Object.prototype.hasOwnProperty.call(t,c)){var y=n?Object.getOwnPropertyDescriptor(t,c):null;y&&(y.get||y.set)?Object.defineProperty(a,c,y):a[c]=t[c]}return a.default=t,h&&h.set(t,a),a}function B(t,e){return E(t)||H(t,e)||P(t,e)||D()}function D(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P(t,e){if(!!t){if(typeof t=="string")return T(t,e);var h=Object.prototype.toString.call(t).slice(8,-1);if(h==="Object"&&t.constructor&&(h=t.constructor.name),h==="Map"||h==="Set")return Array.from(t);if(h==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h))return T(t,e)}}function T(t,e){(e==null||e>t.length)&&(e=t.length);for(var h=0,a=new Array(e);h<e;h++)a[h]=t[h];return a}function H(t,e){var h=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(h!=null){var a=[],n=!0,c=!1,y,J;try{for(h=h.call(t);!(n=(y=h.next()).done)&&(a.push(y.value),!(e&&a.length===e));n=!0);}catch(b){c=!0,J=b}finally{try{!n&&h.return!=null&&h.return()}finally{if(c)throw J}}return a}}function E(t){if(Array.isArray(t))return t}for(var Y=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],W=[],S=0;S<46;S++)W.push({key:S,name:"Edward King ".concat(S),age:32,address:"London, Park Lane no. ".concat(S)});var N=function(){var e=(0,k.useState)([]),h=B(e,2),a=h[0],n=h[1],c=function(b){console.log("selectedRowKeys changed: ",a),n(b)},y={selectedRowKeys:a,onChange:c,selections:[g.Table.SELECTION_ALL,g.Table.SELECTION_INVERT,g.Table.SELECTION_NONE,{key:"odd",text:"Select Odd Row",onSelect:function(b){var p=[];p=b.filter(function(w,m){return m%2===0}),n(p)}},{key:"even",text:"Select Even Row",onSelect:function(b){var p=[];p=b.filter(function(w,m){return m%2!==0}),n(p)}}]};return k.default.createElement(g.Table,{rowSelection:y,columns:Y,dataSource:W})},R=N;return Z.createElement(R)}}},4244:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u7B2C\u4E00\u5217\u662F\u8054\u52A8\u7684\u9009\u62E9\u6846\u3002\u53EF\u4EE5\u901A\u8FC7 ",["code","rowSelection.type"]," \u5C5E\u6027\u6307\u5B9A\u9009\u62E9\u7C7B\u578B\uFF0C\u9ED8\u8BA4\u4E3A ",["code","checkbox"],"\u3002"],["blockquote",["p","\u9ED8\u8BA4\u70B9\u51FB checkbox \u89E6\u53D1\u9009\u62E9\u884C\u4E3A\uFF0C\u9700\u8981\u70B9\u51FB\u884C\u89E6\u53D1\u53EF\u4EE5\u53C2\u8003\u4F8B\u5B50\uFF1A",["a",{title:null,href:"https://codesandbox.io/s/000vqw38rl"},"https://codesandbox.io/s/000vqw38rl"]]]],"en-US":[["p","Rows can be selectable by making first column as a selectable column. You can use ",["code","rowSelection.type"]," to set selection type. Default is ",["code","checkbox"],"."],["blockquote",["p","selection happens when clicking checkbox by default. You can see ",["a",{title:null,href:"https://codesandbox.io/s/000vqw38rl"},"https://codesandbox.io/s/000vqw38rl"]," if you need row-click selection behavior."]]]},meta:{order:2,title:{"en-US":"selection","zh-CN":"\u53EF\u9009\u62E9"},filename:"components/table/demo/row-selection.md",id:"components-table-demo-row-selection"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Divider<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>{text}<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token operator">/</span><span class="token operator">/</span> rowSelection object indicates the need <span class="token keyword">for</span> row selection
<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> {
  onChange<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\`selectedRowKeys<span class="token punctuation">:</span> \${selectedRowKeys}\`<span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
  getCheckboxProps<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    disabled<span class="token punctuation">:</span> record<span class="token punctuation">.</span>name <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> Column configuration <span class="token operator">not</span> <span class="token keyword">to</span> be checked
    name<span class="token punctuation">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span><span class="token string">'checkbox'</span> | <span class="token string">'radio'</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'checkbox'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>Radio<span class="token punctuation">.</span>Group
        onChange<span class="token operator">=</span>{<span class="token punctuation">(</span>{ target<span class="token punctuation">:</span> { value } }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }}
        value<span class="token operator">=</span>{selectionType}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Radio value<span class="token operator">=</span><span class="token string">"checkbox"</span><span class="token operator">></span>Checkbox<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token operator">></span>
        <span class="token operator">&lt;</span>Radio value<span class="token operator">=</span><span class="token string">"radio"</span><span class="token operator">></span>radio<span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Radio<span class="token punctuation">.</span>Group<span class="token operator">></span>

      <span class="token operator">&lt;</span>Divider <span class="token operator">/</span><span class="token operator">></span>

      <span class="token operator">&lt;</span>Table
        rowSelection<span class="token operator">=</span>{{
          type<span class="token punctuation">:</span> selectionType<span class="token punctuation">,</span>
          <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>rowSelection<span class="token punctuation">,</span>
        }}
        columns<span class="token operator">=</span>{columns}
        dataSource<span class="token operator">=</span>{data}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Divider<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span>text<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// rowSelection object indicates the need for row selection</span>
<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> selectedRows<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getCheckboxProps</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token operator">:</span> DataType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    disabled<span class="token operator">:</span> record<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span> <span class="token comment">// Column configuration not to be checked</span>
    name<span class="token operator">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span><span class="token string">'checkbox'</span> <span class="token operator">|</span> <span class="token string">'radio'</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token string">'checkbox'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectionType<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>radio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Divider</span></span> <span class="token punctuation">/></span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          type<span class="token operator">:</span> selectionType<span class="token punctuation">,</span>
          <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Divider<span class="token punctuation">,</span> Radio<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// rowSelection object indicates the need for row selection</span>

<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getCheckboxProps</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">disabled</span><span class="token operator">:</span> record<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">'Disabled User'</span><span class="token punctuation">,</span>
    <span class="token comment">// Column configuration not to be checked</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> record<span class="token punctuation">.</span>name<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>selectionType<span class="token punctuation">,</span> setSelectionType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">'checkbox'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio.Group</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">setSelectionType</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>selectionType<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Checkbox<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Radio</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>radio<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Radio.Group</span></span><span class="token punctuation">></span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Divider</span></span> <span class="token punctuation">/></span></span>

      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> selectionType<span class="token punctuation">,</span>
          <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(a){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(a)}var g=l(12),k=z(l(0));function r(a){if(typeof WeakMap!="function")return null;var n=new WeakMap,c=new WeakMap;return(r=function(J){return J?c:n})(a)}function z(a,n){if(!n&&a&&a.__esModule)return a;if(a===null||C(a)!=="object"&&typeof a!="function")return{default:a};var c=r(n);if(c&&c.has(a))return c.get(a);var y={},J=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var b in a)if(b!=="default"&&Object.prototype.hasOwnProperty.call(a,b)){var p=J?Object.getOwnPropertyDescriptor(a,b):null;p&&(p.get||p.set)?Object.defineProperty(y,b,p):y[b]=a[b]}return y.default=a,c&&c.set(a,y),y}function B(a,n){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(a);n&&(y=y.filter(function(J){return Object.getOwnPropertyDescriptor(a,J).enumerable})),c.push.apply(c,y)}return c}function D(a){for(var n=1;n<arguments.length;n++){var c=arguments[n]!=null?arguments[n]:{};n%2?B(Object(c),!0).forEach(function(y){P(a,y,c[y])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):B(Object(c)).forEach(function(y){Object.defineProperty(a,y,Object.getOwnPropertyDescriptor(c,y))})}return a}function P(a,n,c){return n in a?Object.defineProperty(a,n,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[n]=c,a}function T(a,n){return S(a)||W(a,n)||E(a,n)||H()}function H(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function E(a,n){if(!!a){if(typeof a=="string")return Y(a,n);var c=Object.prototype.toString.call(a).slice(8,-1);if(c==="Object"&&a.constructor&&(c=a.constructor.name),c==="Map"||c==="Set")return Array.from(a);if(c==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return Y(a,n)}}function Y(a,n){(n==null||n>a.length)&&(n=a.length);for(var c=0,y=new Array(n);c<n;c++)y[c]=a[c];return y}function W(a,n){var c=a==null?null:typeof Symbol!="undefined"&&a[Symbol.iterator]||a["@@iterator"];if(c!=null){var y=[],J=!0,b=!1,p,w;try{for(c=c.call(a);!(J=(p=c.next()).done)&&(y.push(p.value),!(n&&y.length===n));J=!0);}catch(m){b=!0,w=m}finally{try{!J&&c.return!=null&&c.return()}finally{if(b)throw w}}return y}}function S(a){if(Array.isArray(a))return a}var N=[{title:"Name",dataIndex:"name",render:function(n){return k.default.createElement("a",null,n)}},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],R=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"},{key:"4",name:"Disabled User",age:99,address:"Sidney No. 1 Lake Park"}],t={onChange:function(n,c){console.log("selectedRowKeys: ".concat(n),"selectedRows: ",c)},getCheckboxProps:function(n){return{disabled:n.name==="Disabled User",name:n.name}}},e=function(){var n=(0,k.useState)("checkbox"),c=T(n,2),y=c[0],J=c[1];return k.default.createElement("div",null,k.default.createElement(g.Radio.Group,{onChange:function(p){var w=p.target.value;J(w)},value:y},k.default.createElement(g.Radio,{value:"checkbox"},"Checkbox"),k.default.createElement(g.Radio,{value:"radio"},"radio")),k.default.createElement(g.Divider,null),k.default.createElement(g.Table,{rowSelection:D({type:y},t),columns:N,dataSource:R}))},h=e;return Z.createElement(h)}}},4245:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u4E24\u79CD\u7D27\u51D1\u578B\u7684\u5217\u8868\uFF0C\u5C0F\u578B\u5217\u8868\u53EA\u7528\u4E8E\u5BF9\u8BDD\u6846\u5185\u3002"]],"en-US":[["p","There are two compacted table sizes: ",["code","middle"]," and ",["code","small"],". The ",["code","small"]," size is used in Modals only."]]},meta:{order:11,title:{"en-US":"size","zh-CN":"\u7D27\u51D1\u578B"},filename:"components/table/demo/size.md",id:"components-table-demo-size"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span>h4<span class="token operator">></span>Middle size table<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>
    <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} size<span class="token operator">=</span><span class="token string">"middle"</span> <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>h4<span class="token operator">></span>Small size table<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span>
    <span class="token operator">&lt;</span>Table columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} size<span class="token operator">=</span><span class="token string">"small"</span> <span class="token operator">/</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Middle size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Small size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Middle size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>Small size table<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>small<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(P){return P&&P.__esModule?P:{default:P}}var r=[{title:"Name",dataIndex:"name"},{title:"Age",dataIndex:"age"},{title:"Address",dataIndex:"address"}],z=[{key:"1",name:"John Brown",age:32,address:"New York No. 1 Lake Park"},{key:"2",name:"Jim Green",age:42,address:"London No. 1 Lake Park"},{key:"3",name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}],B=function(){return g.default.createElement("div",null,g.default.createElement("h4",null,"Middle size table"),g.default.createElement(C.Table,{columns:r,dataSource:z,size:"middle"}),g.default.createElement("h4",null,"Small size table"),g.default.createElement(C.Table,{columns:r,dataSource:z,size:"small"}))},D=B;return Z.createElement(D)},style:"#components-table-demo-size h4 { margin-bottom: 16px; }"}},4246:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u5BF9\u4E8E\u957F\u8868\u683C\uFF0C\u9700\u8981\u6EDA\u52A8\u624D\u80FD\u67E5\u770B\u8868\u5934\u548C\u6EDA\u52A8\u6761\uFF0C\u90A3\u4E48\u73B0\u5728\u53EF\u4EE5\u8BBE\u7F6E\u8DDF\u968F\u9875\u9762\u56FA\u5B9A\u8868\u5934\u548C\u6EDA\u52A8\u6761\u3002"]],"en-US":[["p","For long table\uFF0Cneed to scroll to view the header and scroll bar\uFF0Cthen you can now set the fixed header and scroll bar to follow the page."]]},meta:{order:99,title:{"en-US":"Fixed header and scroll bar with the page","zh-CN":"\u968F\u9875\u9762\u6EDA\u52A8\u7684\u56FA\u5B9A\u8868\u5934\u548C\u6EDA\u52A8\u6761"},filename:"components/table/demo/sticky.md",id:"components-table-demo-sticky"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { <span class="token keyword">Switch</span><span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token string">'8'</span> }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    render<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>a<span class="token operator">></span>action<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 100; i++) {</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> \`Edrward \${i}\`<span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> \`London Park no<span class="token punctuation">.</span> \${i}\`<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fixedTop<span class="token punctuation">,</span> setFixedTop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Table
      columns<span class="token operator">=</span>{columns}
      dataSource<span class="token operator">=</span>{data}
      scroll<span class="token operator">=</span>{{ x<span class="token punctuation">:</span> <span class="token number">1500</span> }}
      summary<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary fixed<span class="token operator">=</span>{fixedTop <span class="token operator">?</span> <span class="token string">'top'</span> <span class="token punctuation">:</span> <span class="token string">'bottom'</span>}<span class="token operator">></span>
          <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">0</span>} colSpan<span class="token operator">=</span>{<span class="token number">2</span>}<span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token keyword">Switch</span>
                checkedChildren<span class="token operator">=</span><span class="token string">"Fixed Top"</span>
                unCheckedChildren<span class="token operator">=</span><span class="token string">"Fixed Top"</span>
                checked<span class="token operator">=</span>{fixedTop}
                onChange<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
                  <span class="token function">setFixedTop</span><span class="token punctuation">(</span>!fixedTop<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
                }}
              <span class="token operator">/</span><span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">2</span>} colSpan<span class="token operator">=</span>{<span class="token number">8</span>}<span class="token operator">></span>
              Scroll Context
            <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">10</span>}<span class="token operator">></span>Fix Right<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token operator">></span>
      <span class="token punctuation">)</span>}
      sticky
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token string">'8'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fixedTop<span class="token punctuation">,</span> setFixedTop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">1500</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary</span></span> <span class="token attr-name">fixed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedTop <span class="token operator">?</span> <span class="token string">'top'</span> <span class="token operator">:</span> <span class="token string">'bottom'</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span>
                <span class="token attr-name">checkedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Top<span class="token punctuation">"</span></span>
                <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Top<span class="token punctuation">"</span></span>
                <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedTop<span class="token punctuation">}</span></span>
                <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
                  <span class="token function">setFixedTop</span><span class="token punctuation">(</span><span class="token operator">!</span>fixedTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
              <span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              Scroll Context
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Fix Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">sticky</span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Full Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'left'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'5'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 6'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'6'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 7'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'7'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Column 8'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'8'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Action'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'operation'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Edrward </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">London Park no. </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fixedTop<span class="token punctuation">,</span> setFixedTop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">1500</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary</span></span> <span class="token attr-name">fixed</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedTop <span class="token operator">?</span> <span class="token string">'top'</span> <span class="token operator">:</span> <span class="token string">'bottom'</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span>
                <span class="token attr-name">checkedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Top<span class="token punctuation">"</span></span>
                <span class="token attr-name">unCheckedChildren</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fixed Top<span class="token punctuation">"</span></span>
                <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedTop<span class="token punctuation">}</span></span>
                <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
                  <span class="token function">setFixedTop</span><span class="token punctuation">(</span><span class="token operator">!</span>fixedTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
              <span class="token punctuation">/></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">8</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
              Scroll Context
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Fix Right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">sticky</span>
    <span class="token punctuation">/></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(t){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(e){return typeof e}:function(e){return e&&typeof Symbol=="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(t)}var g=l(12),k=z(l(0));function r(t){if(typeof WeakMap!="function")return null;var e=new WeakMap,h=new WeakMap;return(r=function(n){return n?h:e})(t)}function z(t,e){if(!e&&t&&t.__esModule)return t;if(t===null||C(t)!=="object"&&typeof t!="function")return{default:t};var h=r(e);if(h&&h.has(t))return h.get(t);var a={},n=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in t)if(c!=="default"&&Object.prototype.hasOwnProperty.call(t,c)){var y=n?Object.getOwnPropertyDescriptor(t,c):null;y&&(y.get||y.set)?Object.defineProperty(a,c,y):a[c]=t[c]}return a.default=t,h&&h.set(t,a),a}function B(t,e){return E(t)||H(t,e)||P(t,e)||D()}function D(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function P(t,e){if(!!t){if(typeof t=="string")return T(t,e);var h=Object.prototype.toString.call(t).slice(8,-1);if(h==="Object"&&t.constructor&&(h=t.constructor.name),h==="Map"||h==="Set")return Array.from(t);if(h==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(h))return T(t,e)}}function T(t,e){(e==null||e>t.length)&&(e=t.length);for(var h=0,a=new Array(e);h<e;h++)a[h]=t[h];return a}function H(t,e){var h=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(h!=null){var a=[],n=!0,c=!1,y,J;try{for(h=h.call(t);!(n=(y=h.next()).done)&&(a.push(y.value),!(e&&a.length===e));n=!0);}catch(b){c=!0,J=b}finally{try{!n&&h.return!=null&&h.return()}finally{if(c)throw J}}return a}}function E(t){if(Array.isArray(t))return t}for(var Y=[{title:"Full Name",width:100,dataIndex:"name",key:"name",fixed:"left"},{title:"Age",width:100,dataIndex:"age",key:"age",fixed:"left"},{title:"Column 1",dataIndex:"address",key:"1",width:150},{title:"Column 2",dataIndex:"address",key:"2",width:150},{title:"Column 3",dataIndex:"address",key:"3",width:150},{title:"Column 4",dataIndex:"address",key:"4",width:150},{title:"Column 5",dataIndex:"address",key:"5",width:150},{title:"Column 6",dataIndex:"address",key:"6",width:150},{title:"Column 7",dataIndex:"address",key:"7",width:150},{title:"Column 8",dataIndex:"address",key:"8"},{title:"Action",key:"operation",fixed:"right",width:100,render:function(){return k.default.createElement("a",null,"action")}}],W=[],S=0;S<100;S++)W.push({key:S,name:"Edrward ".concat(S),age:32,address:"London Park no. ".concat(S)});var N=function(){var e=(0,k.useState)(!1),h=B(e,2),a=h[0],n=h[1];return k.default.createElement(g.Table,{columns:Y,dataSource:W,scroll:{x:1500},summary:function(){return k.default.createElement(g.Table.Summary,{fixed:a?"top":"bottom"},k.default.createElement(g.Table.Summary.Row,null,k.default.createElement(g.Table.Summary.Cell,{index:0,colSpan:2},k.default.createElement(g.Switch,{checkedChildren:"Fixed Top",unCheckedChildren:"Fixed Top",checked:a,onChange:function(){n(!a)}})),k.default.createElement(g.Table.Summary.Cell,{index:2,colSpan:8},"Scroll Context"),k.default.createElement(g.Table.Summary.Cell,{index:10},"Fix Right")))},sticky:!0})},R=N;return Z.createElement(R)}}},4247:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","summary"]," \u8BBE\u7F6E\u603B\u7ED3\u680F\u3002\u4F7F\u7528 ",["code","Table.Summary.Cell"]," \u540C\u6B65 Column \u7684\u56FA\u5B9A\u72B6\u6001\u3002\u4F60\u53EF\u4EE5\u901A\u8FC7\u914D\u7F6E ",["code","Table.Summary"]," \u7684 ",["code","fixed"]," \u5C5E\u6027\u4F7F\u5176\u56FA\u5B9A(",["code","4.16.0"]," \u652F\u6301)\u3002"]],"en-US":[["p","Set summary content by ",["code","summary"]," prop. Sync column fixed status with ",["code","Table.Summary.Cell"],". You can fixed it by set ",["code","Table.Summary"]," ",["code","fixed"]," prop(since ",["code","4.16.0"],")."]]},meta:{order:29,title:{"en-US":"Summary","zh-CN":"\u603B\u7ED3\u680F"},filename:"components/table/demo/summary.md",id:"components-table-demo-summary"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Table<span class="token punctuation">,</span> Typography } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> { Text } <span class="token operator">=</span> Typography<span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  borrow<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  repayment<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
}

interface FixedDataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>Key<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  description<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Borrow'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'borrow'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Repayment'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'repayment'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    borrow<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    repayment<span class="token punctuation">:</span> <span class="token number">33</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    borrow<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    repayment<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    borrow<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    repayment<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    borrow<span class="token punctuation">:</span> <span class="token number">75</span><span class="token punctuation">,</span>
    repayment<span class="token punctuation">:</span> <span class="token number">45</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> fixedColumns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>FixedDataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Description'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'description'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> fixedData<span class="token punctuation">:</span> FixedDataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>let i <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">; i &lt; 20; i += 1) {</span>
  fixedData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> i<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'Light'</span><span class="token punctuation">,</span> <span class="token string">'Bamboo'</span><span class="token punctuation">,</span> <span class="token string">'Little'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i % <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string">'Everything that has a beginning, has an end.'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;></span>
    <span class="token operator">&lt;</span>Table
      columns<span class="token operator">=</span>{columns}
      dataSource<span class="token operator">=</span>{data}
      pagination<span class="token operator">=</span>{<span class="token boolean">false</span>}
      bordered
      summary<span class="token operator">=</span>{pageData <span class="token operator">=</span><span class="token operator">></span> {
        let totalBorrow <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">;</span>
        let totalRepayment <span class="token operator">=</span> <span class="token number">0</span><span class="token comment" spellcheck="true">;</span>

        pageData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ borrow<span class="token punctuation">,</span> repayment }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          totalBorrow <span class="token operator">+=</span> borrow<span class="token comment" spellcheck="true">;</span>
          totalRepayment <span class="token operator">+=</span> repayment<span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

        return <span class="token punctuation">(</span>
          <span class="token operator">&lt;></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
              <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">0</span>}<span class="token operator">></span>Total<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
              <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">1</span>}<span class="token operator">></span>
                <span class="token operator">&lt;</span>Text type<span class="token operator">=</span><span class="token string">"danger"</span><span class="token operator">></span>{totalBorrow}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
              <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">2</span>}<span class="token operator">></span>
                <span class="token operator">&lt;</span>Text<span class="token operator">></span>{totalRepayment}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
              <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">0</span>}<span class="token operator">></span>Balance<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
              <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">1</span>} colSpan<span class="token operator">=</span>{<span class="token number">2</span>}<span class="token operator">></span>
                <span class="token operator">&lt;</span>Text type<span class="token operator">=</span><span class="token string">"danger"</span><span class="token operator">></span>{totalBorrow <span class="token operator">-</span> totalRepayment}<span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>
              <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
        <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }}
    <span class="token operator">/</span><span class="token operator">></span>

    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>

    <span class="token operator">&lt;</span>Table
      columns<span class="token operator">=</span>{fixedColumns}
      dataSource<span class="token operator">=</span>{fixedData}
      pagination<span class="token operator">=</span>{<span class="token boolean">false</span>}
      scroll<span class="token operator">=</span>{{ x<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">500</span> }}
      bordered
      summary<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary fixed<span class="token operator">></span>
          <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">0</span>}<span class="token operator">></span>Summary<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
            <span class="token operator">&lt;</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell index<span class="token operator">=</span>{<span class="token number">1</span>}<span class="token operator">></span>This is a summary content<span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Cell<span class="token operator">></span>
          <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token punctuation">.</span>Row<span class="token operator">></span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>Table<span class="token punctuation">.</span>Summary<span class="token operator">></span>
      <span class="token punctuation">)</span>}
    <span class="token operator">/</span><span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Text <span class="token punctuation">}</span> <span class="token operator">=</span> Typography<span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> string<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  borrow<span class="token operator">:</span> number<span class="token punctuation">;</span>
  repayment<span class="token operator">:</span> number<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">FixedDataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>Key<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  description<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Borrow'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'borrow'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Repayment'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'repayment'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    borrow<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    repayment<span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    borrow<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    repayment<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    borrow<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    repayment<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    borrow<span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span>
    repayment<span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fixedColumns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>FixedDataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    fixed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Description'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'description'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fixedData<span class="token operator">:</span> FixedDataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fixedData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> i<span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Light'</span><span class="token punctuation">,</span> <span class="token string">'Bamboo'</span><span class="token punctuation">,</span> <span class="token string">'Little'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">'Everything that has a beginning, has an end.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>pageData <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> totalBorrow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> totalRepayment <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        pageData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> borrow<span class="token punctuation">,</span> repayment <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          totalBorrow <span class="token operator">+=</span> borrow<span class="token punctuation">;</span>
          totalRepayment <span class="token operator">+=</span> repayment<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Total<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Balance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow <span class="token operator">-</span> totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedColumns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedData<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> x<span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">500</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary</span></span> <span class="token attr-name">fixed</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Summary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>This is a summary content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Typography <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Text <span class="token punctuation">}</span> <span class="token operator">=</span> Typography<span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Borrow'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'borrow'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Repayment'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'repayment'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borrow</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">repayment</span><span class="token operator">:</span> <span class="token number">33</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borrow</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">repayment</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borrow</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">repayment</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'4'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Red'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">borrow</span><span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span>
    <span class="token literal-property property">repayment</span><span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fixedColumns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fixed</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Description'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'description'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fixedData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  fixedData<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> i<span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'Light'</span><span class="token punctuation">,</span> <span class="token string">'Bamboo'</span><span class="token punctuation">,</span> <span class="token string">'Little'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'Everything that has a beginning, has an end.'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">pageData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> totalBorrow <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> totalRepayment <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        pageData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> borrow<span class="token punctuation">,</span> repayment <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          totalBorrow <span class="token operator">+=</span> borrow<span class="token punctuation">;</span>
          totalRepayment <span class="token operator">+=</span> repayment<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Total<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Balance<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span> <span class="token attr-name">colSpan</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>totalBorrow <span class="token operator">-</span> totalRepayment<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">></span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
      <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedColumns<span class="token punctuation">}</span></span>
      <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fixedData<span class="token punctuation">}</span></span>
      <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
        <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">bordered</span>
      <span class="token attr-name">summary</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary</span></span> <span class="token attr-name">fixed</span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Summary<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table.Summary.Cell</span></span> <span class="token attr-name">index</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>This is a summary content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Cell</span></span><span class="token punctuation">></span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary.Row</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Table.Summary</span></span><span class="token punctuation">></span></span>
      <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55),C=l(12),g=k(l(0));function k(Y){return Y&&Y.__esModule?Y:{default:Y}}for(var r=C.Typography.Text,z=[{title:"Name",dataIndex:"name"},{title:"Borrow",dataIndex:"borrow"},{title:"Repayment",dataIndex:"repayment"}],B=[{key:"1",name:"John Brown",borrow:10,repayment:33},{key:"2",name:"Jim Green",borrow:100,repayment:0},{key:"3",name:"Joe Black",borrow:10,repayment:10},{key:"4",name:"Jim Red",borrow:75,repayment:45}],D=[{title:"Name",dataIndex:"name",fixed:!0,width:100},{title:"Description",dataIndex:"description"}],P=[],T=0;T<20;T+=1)P.push({key:T,name:["Light","Bamboo","Little"][T%3],description:"Everything that has a beginning, has an end."});var H=function(){return g.default.createElement(g.default.Fragment,null,g.default.createElement(C.Table,{columns:z,dataSource:B,pagination:!1,bordered:!0,summary:function(S){var N=0,R=0;return S.forEach(function(t){var e=t.borrow,h=t.repayment;N+=e,R+=h}),g.default.createElement(g.default.Fragment,null,g.default.createElement(C.Table.Summary.Row,null,g.default.createElement(C.Table.Summary.Cell,{index:0},"Total"),g.default.createElement(C.Table.Summary.Cell,{index:1},g.default.createElement(r,{type:"danger"},N)),g.default.createElement(C.Table.Summary.Cell,{index:2},g.default.createElement(r,null,R))),g.default.createElement(C.Table.Summary.Row,null,g.default.createElement(C.Table.Summary.Cell,{index:0},"Balance"),g.default.createElement(C.Table.Summary.Cell,{index:1,colSpan:2},g.default.createElement(r,{type:"danger"},N-R))))}}),g.default.createElement("br",null),g.default.createElement(C.Table,{columns:D,dataSource:P,pagination:!1,scroll:{x:2e3,y:500},bordered:!0,summary:function(){return g.default.createElement(C.Table.Summary,{fixed:!0},g.default.createElement(C.Table.Summary.Row,null,g.default.createElement(C.Table.Summary.Cell,{index:0},"Summary"),g.default.createElement(C.Table.Summary.Cell,{index:1},"This is a summary content")))}}))},E=H;return Z.createElement(E)},style:`
  #components-table-demo-summary tfoot th,
  #components-table-demo-summary tfoot td {
    background: #fafafa;
  }
  [data-theme="dark"] #components-table-demo-summary tfoot th,
  [data-theme="dark"] #components-table-demo-summary tfoot td {
    background: #1d1d1d;
  }
`}},4248:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u8868\u683C\u652F\u6301\u6811\u5F62\u6570\u636E\u7684\u5C55\u793A\uFF0C\u5F53\u6570\u636E\u4E2D\u6709 ",["code","children"]," \u5B57\u6BB5\u65F6\u4F1A\u81EA\u52A8\u5C55\u793A\u4E3A\u6811\u5F62\u8868\u683C\uFF0C\u5982\u679C\u4E0D\u9700\u8981\u6216\u914D\u7F6E\u4E3A\u5176\u4ED6\u5B57\u6BB5\u53EF\u4EE5\u7528 ",["code","childrenColumnName"]," \u8FDB\u884C\u914D\u7F6E\u3002"],["p","\u53EF\u4EE5\u901A\u8FC7\u8BBE\u7F6E ",["code","indentSize"]," \u4EE5\u63A7\u5236\u6BCF\u4E00\u5C42\u7684\u7F29\u8FDB\u5BBD\u5EA6\u3002"]],"en-US":[["p","Display tree structure data in Table when there is field key ",["code","children"]," in dataSource, try to customize ",["code","childrenColumnName"]," property to avoid tree table structure."],["p","You can control the indent width by setting ",["code","indentSize"],"."]]},meta:{order:17,title:{"en-US":"Tree data","zh-CN":"\u6811\u5F62\u6570\u636E\u5C55\u793A"},filename:"components/table/demo/tree-data.md",id:"components-table-demo-tree-data"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Space<span class="token punctuation">,</span> <span class="token keyword">Switch</span><span class="token punctuation">,</span> Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import type { ColumnsType } from <span class="token string">'infrad/lib/table'</span><span class="token comment" spellcheck="true">;</span>
import type { TableRowSelection } from <span class="token string">'infrad/lib/table/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface DataType {
  key<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token comment" spellcheck="true">;</span>
  name<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  age<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
  address<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  children<span class="token operator">?</span><span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> columns<span class="token punctuation">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'12%'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    title<span class="token punctuation">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
    key<span class="token punctuation">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data<span class="token punctuation">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'John Brown sr.'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
      {
        key<span class="token punctuation">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
        age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
        address<span class="token punctuation">:</span> <span class="token string">'New York No. 2 Lake Park'</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        key<span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'John Brown jr.'</span><span class="token punctuation">,</span>
        age<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
        address<span class="token punctuation">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            key<span class="token punctuation">:</span> <span class="token number">121</span><span class="token punctuation">,</span>
            name<span class="token punctuation">:</span> <span class="token string">'Jimmy Brown'</span><span class="token punctuation">,</span>
            age<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
            address<span class="token punctuation">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
      {
        key<span class="token punctuation">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        name<span class="token punctuation">:</span> <span class="token string">'Jim Green sr.'</span><span class="token punctuation">,</span>
        age<span class="token punctuation">:</span> <span class="token number">72</span><span class="token punctuation">,</span>
        address<span class="token punctuation">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
        children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
          {
            key<span class="token punctuation">:</span> <span class="token number">131</span><span class="token punctuation">,</span>
            name<span class="token punctuation">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
            age<span class="token punctuation">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            address<span class="token punctuation">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
            children<span class="token punctuation">:</span> <span class="token punctuation">[</span>
              {
                key<span class="token punctuation">:</span> <span class="token number">1311</span><span class="token punctuation">,</span>
                name<span class="token punctuation">:</span> <span class="token string">'Jim Green jr.'</span><span class="token punctuation">,</span>
                age<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
                address<span class="token punctuation">:</span> <span class="token string">'London No. 3 Lake Park'</span><span class="token punctuation">,</span>
              }<span class="token punctuation">,</span>
              {
                key<span class="token punctuation">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>
                name<span class="token punctuation">:</span> <span class="token string">'Jimmy Green sr.'</span><span class="token punctuation">,</span>
                age<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
                address<span class="token punctuation">:</span> <span class="token string">'London No. 4 Lake Park'</span><span class="token punctuation">,</span>
              }<span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          }<span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    key<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token punctuation">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token operator">/</span><span class="token operator">/</span> rowSelection objects indicates the need <span class="token keyword">for</span> row selection
<span class="token keyword">const</span> rowSelection<span class="token punctuation">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> {
  onChange<span class="token punctuation">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\`selectedRowKeys<span class="token punctuation">:</span> \${selectedRowKeys}\`<span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
  onSelect<span class="token punctuation">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
  onSelectAll<span class="token punctuation">:</span> <span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>checkStrictly<span class="token punctuation">,</span> setCheckStrictly<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Space align<span class="token operator">=</span><span class="token string">"center"</span> style<span class="token operator">=</span>{{ marginBottom<span class="token punctuation">:</span> <span class="token number">16</span> }}<span class="token operator">></span>
        CheckStrictly<span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token keyword">Switch</span> checked<span class="token operator">=</span>{checkStrictly} onChange<span class="token operator">=</span>{setCheckStrictly} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        columns<span class="token operator">=</span>{columns}
        rowSelection<span class="token operator">=</span>{{ <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>rowSelection<span class="token punctuation">,</span> checkStrictly }}
        dataSource<span class="token operator">=</span>{data}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> ColumnsType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> TableRowSelection <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad/lib/table/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DataType</span> <span class="token punctuation">{</span>
  key<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span>
  name<span class="token operator">:</span> string<span class="token punctuation">;</span>
  age<span class="token operator">:</span> number<span class="token punctuation">;</span>
  address<span class="token operator">:</span> string<span class="token punctuation">;</span>
  children<span class="token operator">?</span><span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> columns<span class="token operator">:</span> ColumnsType<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'12%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    title<span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    dataIndex<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    width<span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
    key<span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data<span class="token operator">:</span> DataType<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'John Brown sr.'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        key<span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
        address<span class="token operator">:</span> <span class="token string">'New York No. 2 Lake Park'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        key<span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'John Brown jr.'</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
        address<span class="token operator">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            key<span class="token operator">:</span> <span class="token number">121</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">'Jimmy Brown'</span><span class="token punctuation">,</span>
            age<span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
            address<span class="token operator">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        key<span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        name<span class="token operator">:</span> <span class="token string">'Jim Green sr.'</span><span class="token punctuation">,</span>
        age<span class="token operator">:</span> <span class="token number">72</span><span class="token punctuation">,</span>
        address<span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
        children<span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            key<span class="token operator">:</span> <span class="token number">131</span><span class="token punctuation">,</span>
            name<span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
            age<span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            address<span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
            children<span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                key<span class="token operator">:</span> <span class="token number">1311</span><span class="token punctuation">,</span>
                name<span class="token operator">:</span> <span class="token string">'Jim Green jr.'</span><span class="token punctuation">,</span>
                age<span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
                address<span class="token operator">:</span> <span class="token string">'London No. 3 Lake Park'</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                key<span class="token operator">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>
                name<span class="token operator">:</span> <span class="token string">'Jimmy Green sr.'</span><span class="token punctuation">,</span>
                age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
                address<span class="token operator">:</span> <span class="token string">'London No. 4 Lake Park'</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    key<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">// rowSelection objects indicates the need for row selection</span>
<span class="token keyword">const</span> rowSelection<span class="token operator">:</span> TableRowSelection<span class="token operator">&lt;</span>DataType<span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span>selectedRowKeys<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onSelectAll</span><span class="token operator">:</span> <span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>checkStrictly<span class="token punctuation">,</span> setCheckStrictly<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginBottom<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        CheckStrictly<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checkStrictly<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setCheckStrictly<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span> checkStrictly <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Space<span class="token punctuation">,</span> Switch<span class="token punctuation">,</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'name'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'age'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'12%'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">'address'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown sr.'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 1 Lake Park'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
        <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 2 Lake Park'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'John Brown jr.'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
        <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">121</span><span class="token punctuation">,</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jimmy Brown'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
            <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'New York No. 3 Lake Park'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green sr.'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">72</span><span class="token punctuation">,</span>
        <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 1 Lake Park'</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">131</span><span class="token punctuation">,</span>
            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span>
            <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 2 Lake Park'</span><span class="token punctuation">,</span>
            <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
              <span class="token punctuation">{</span>
                <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1311</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jim Green jr.'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 3 Lake Park'</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
              <span class="token punctuation">{</span>
                <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1312</span><span class="token punctuation">,</span>
                <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Jimmy Green sr.'</span><span class="token punctuation">,</span>
                <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
                <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'London No. 4 Lake Park'</span><span class="token punctuation">,</span>
              <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'Joe Black'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token string">'Sidney No. 1 Lake Park'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// rowSelection objects indicates the need for row selection</span>

<span class="token keyword">const</span> rowSelection <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selectedRowKeys<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">selectedRowKeys: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedRowKeys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">'selectedRows: '</span><span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onSelect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>record<span class="token punctuation">,</span> selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onSelectAll</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>selected<span class="token punctuation">,</span> selectedRows<span class="token punctuation">,</span> changeRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>checkStrictly<span class="token punctuation">,</span> setCheckStrictly<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span>
        <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token literal-property property">CheckStrictly</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Switch</span></span> <span class="token attr-name">checked</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>checkStrictly<span class="token punctuation">}</span></span> <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>setCheckStrictly<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowSelection</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token operator">...</span>rowSelection<span class="token punctuation">,</span> checkStrictly <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(a){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(n){return typeof n}:function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(a)}var g=l(12),k=z(l(0));function r(a){if(typeof WeakMap!="function")return null;var n=new WeakMap,c=new WeakMap;return(r=function(J){return J?c:n})(a)}function z(a,n){if(!n&&a&&a.__esModule)return a;if(a===null||C(a)!=="object"&&typeof a!="function")return{default:a};var c=r(n);if(c&&c.has(a))return c.get(a);var y={},J=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var b in a)if(b!=="default"&&Object.prototype.hasOwnProperty.call(a,b)){var p=J?Object.getOwnPropertyDescriptor(a,b):null;p&&(p.get||p.set)?Object.defineProperty(y,b,p):y[b]=a[b]}return y.default=a,c&&c.set(a,y),y}function B(a,n){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var y=Object.getOwnPropertySymbols(a);n&&(y=y.filter(function(J){return Object.getOwnPropertyDescriptor(a,J).enumerable})),c.push.apply(c,y)}return c}function D(a){for(var n=1;n<arguments.length;n++){var c=arguments[n]!=null?arguments[n]:{};n%2?B(Object(c),!0).forEach(function(y){P(a,y,c[y])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(c)):B(Object(c)).forEach(function(y){Object.defineProperty(a,y,Object.getOwnPropertyDescriptor(c,y))})}return a}function P(a,n,c){return n in a?Object.defineProperty(a,n,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[n]=c,a}function T(a,n){return S(a)||W(a,n)||E(a,n)||H()}function H(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function E(a,n){if(!!a){if(typeof a=="string")return Y(a,n);var c=Object.prototype.toString.call(a).slice(8,-1);if(c==="Object"&&a.constructor&&(c=a.constructor.name),c==="Map"||c==="Set")return Array.from(a);if(c==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return Y(a,n)}}function Y(a,n){(n==null||n>a.length)&&(n=a.length);for(var c=0,y=new Array(n);c<n;c++)y[c]=a[c];return y}function W(a,n){var c=a==null?null:typeof Symbol!="undefined"&&a[Symbol.iterator]||a["@@iterator"];if(c!=null){var y=[],J=!0,b=!1,p,w;try{for(c=c.call(a);!(J=(p=c.next()).done)&&(y.push(p.value),!(n&&y.length===n));J=!0);}catch(m){b=!0,w=m}finally{try{!J&&c.return!=null&&c.return()}finally{if(b)throw w}}return y}}function S(a){if(Array.isArray(a))return a}var N=[{title:"Name",dataIndex:"name",key:"name"},{title:"Age",dataIndex:"age",key:"age",width:"12%"},{title:"Address",dataIndex:"address",width:"30%",key:"address"}],R=[{key:1,name:"John Brown sr.",age:60,address:"New York No. 1 Lake Park",children:[{key:11,name:"John Brown",age:42,address:"New York No. 2 Lake Park"},{key:12,name:"John Brown jr.",age:30,address:"New York No. 3 Lake Park",children:[{key:121,name:"Jimmy Brown",age:16,address:"New York No. 3 Lake Park"}]},{key:13,name:"Jim Green sr.",age:72,address:"London No. 1 Lake Park",children:[{key:131,name:"Jim Green",age:42,address:"London No. 2 Lake Park",children:[{key:1311,name:"Jim Green jr.",age:25,address:"London No. 3 Lake Park"},{key:1312,name:"Jimmy Green sr.",age:18,address:"London No. 4 Lake Park"}]}]}]},{key:2,name:"Joe Black",age:32,address:"Sidney No. 1 Lake Park"}],t={onChange:function(n,c){console.log("selectedRowKeys: ".concat(n),"selectedRows: ",c)},onSelect:function(n,c,y){console.log(n,c,y)},onSelectAll:function(n,c,y){console.log(n,c,y)}},e=function(){var n=(0,k.useState)(!1),c=T(n,2),y=c[0],J=c[1];return k.default.createElement(k.default.Fragment,null,k.default.createElement(g.Space,{align:"center",style:{marginBottom:16}},"CheckStrictly: ",k.default.createElement(g.Switch,{checked:y,onChange:J})),k.default.createElement(g.Table,{columns:N,rowSelection:D(D({},t),{},{checkStrictly:y}),dataSource:R}))},h=e;return Z.createElement(h)}}},4249:function(kn,dn,l){kn.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","react-window"]," \u5F15\u5165\u865A\u62DF\u6EDA\u52A8\u65B9\u6848\uFF0C\u5B9E\u73B0 100000 \u6761\u6570\u636E\u7684\u9AD8\u6027\u80FD\u8868\u683C\u3002"]],"en-US":[["p","Integrate virtual scroll with ",["code","react-window"]," to achieve a high performance table of 100,000 data."]]},meta:{order:30,title:{"en-US":"Virtual list","zh-CN":"\u865A\u62DF\u5217\u8868"},filename:"components/table/demo/virtual-list.md",id:"components-table-demo-virtual-list"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import classNames from <span class="token string">'classnames'</span><span class="token comment" spellcheck="true">;</span>
import { Table } from <span class="token string">'infrad'</span><span class="token comment" spellcheck="true">;</span>
import ResizeObserver from <span class="token string">'rc-resize-observer'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import { VariableSizeGrid as Grid } from <span class="token string">'react-window'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> VirtualTable <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">:</span> Parameters<span class="token operator">&lt;</span>typeof Table<span class="token operator">></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> { columns<span class="token punctuation">,</span> scroll } <span class="token operator">=</span> props<span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns!<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ width }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> !width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns!<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>column <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> {
      return column<span class="token comment" spellcheck="true">;</span>
    }

    return {
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>column<span class="token punctuation">,</span>
      width<span class="token punctuation">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> obj <span class="token operator">=</span> {}<span class="token comment" spellcheck="true">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'scrollLeft'</span><span class="token punctuation">,</span> {
      get<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> {
          return gridRef<span class="token punctuation">.</span>current<span class="token operator">?</span><span class="token punctuation">.</span>state<span class="token operator">?</span><span class="token punctuation">.</span>scrollLeft<span class="token comment" spellcheck="true">;</span>
        }
        return <span class="token keyword">null</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">,</span>
      set<span class="token punctuation">:</span> <span class="token punctuation">(</span>scrollLeft<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> {
          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }
      }<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    return obj<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> resetVirtualGrid <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span>{
      columnIndex<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      shouldForceUpdate<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> renderVirtualList <span class="token operator">=</span> <span class="token punctuation">(</span>rawData<span class="token punctuation">:</span> object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> { scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll }<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> totalHeight <span class="token operator">=</span> rawData<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">54</span><span class="token comment" spellcheck="true">;</span>

    return <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>Grid
        ref<span class="token operator">=</span>{gridRef}
        className<span class="token operator">=</span><span class="token string">"virtual-grid"</span>
        columnCount<span class="token operator">=</span>{mergedColumns<span class="token punctuation">.</span>length}
        columnWidth<span class="token operator">=</span>{<span class="token punctuation">(</span>index<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">const</span> { width } <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
          return totalHeight <span class="token operator">></span> scroll!<span class="token punctuation">.</span>y! <span class="token operator">&amp;</span><span class="token operator">&amp;</span> index <span class="token operator">==</span><span class="token operator">=</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token operator">?</span> <span class="token punctuation">(</span>width as number<span class="token punctuation">)</span> <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">:</span> <span class="token punctuation">(</span>width as number<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }}
        height<span class="token operator">=</span>{scroll!<span class="token punctuation">.</span>y as number}
        rowCount<span class="token operator">=</span>{rawData<span class="token punctuation">.</span>length}
        rowHeight<span class="token operator">=</span>{<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token number">54</span>}
        width<span class="token operator">=</span>{tableWidth}
        onScroll<span class="token operator">=</span>{<span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">:</span> { scrollLeft<span class="token punctuation">:</span> number }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token function">onScroll</span><span class="token punctuation">(</span>{ scrollLeft }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }}
      <span class="token operator">></span>
        {<span class="token punctuation">(</span>{
          columnIndex<span class="token punctuation">,</span>
          rowIndex<span class="token punctuation">,</span>
          style<span class="token punctuation">,</span>
        }<span class="token punctuation">:</span> {
          columnIndex<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
          rowIndex<span class="token punctuation">:</span> number<span class="token comment" spellcheck="true">;</span>
          style<span class="token punctuation">:</span> React<span class="token punctuation">.</span>CSSProperties<span class="token comment" spellcheck="true">;</span>
        }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>div
            className<span class="token operator">=</span>{<span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">'virtual-table-cell'</span><span class="token punctuation">,</span> {
              <span class="token string">'virtual-table-cell-last'</span><span class="token punctuation">:</span> columnIndex <span class="token operator">==</span><span class="token operator">=</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            }<span class="token punctuation">)</span>}
            style<span class="token operator">=</span>{style}
          <span class="token operator">></span>
            {<span class="token punctuation">(</span>rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span> as any<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span>mergedColumns as any<span class="token punctuation">)</span><span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span>}
          <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
        <span class="token punctuation">)</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Grid<span class="token operator">></span>
    <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ResizeObserver
      onResize<span class="token operator">=</span>{<span class="token punctuation">(</span>{ width }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Table
        {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}
        className<span class="token operator">=</span><span class="token string">"virtual-table"</span>
        columns<span class="token operator">=</span>{mergedColumns}
        pagination<span class="token operator">=</span>{<span class="token boolean">false</span>}
        components<span class="token operator">=</span>{{
          body<span class="token punctuation">:</span> renderVirtualList<span class="token punctuation">,</span>
        }}
      <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ResizeObserver<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token operator">/</span><span class="token operator">/</span> Usage
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  { title<span class="token punctuation">:</span> <span class="token string">'A'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">150</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'B'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'D'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'E'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">200</span> }<span class="token punctuation">,</span>
  { title<span class="token punctuation">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> dataIndex<span class="token punctuation">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">100</span> }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>{ length<span class="token punctuation">:</span> <span class="token number">100000</span> }<span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{ key }<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>VirtualTable columns<span class="token operator">=</span>{columns} dataSource<span class="token operator">=</span>{data} scroll<span class="token operator">=</span>{{ y<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token string">'100vw'</span> }} <span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">'classnames'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ResizeObserver <span class="token keyword">from</span> <span class="token string">'rc-resize-observer'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> VariableSizeGrid <span class="token keyword">as</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-window'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">VirtualTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token keyword">typeof</span> Table<span class="token operator">></span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> columns<span class="token punctuation">,</span> scroll <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> width <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>column <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> column<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>column<span class="token punctuation">,</span>
      width<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'scrollLeft'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> gridRef<span class="token punctuation">.</span>current<span class="token operator">?.</span>state<span class="token operator">?.</span>scrollLeft<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span>scrollLeft<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">resetVirtualGrid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      columnIndex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      shouldForceUpdate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">renderVirtualList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>rawData<span class="token operator">:</span> object<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll <span class="token punctuation">}</span><span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token punctuation">;</span>
    <span class="token keyword">const</span> totalHeight <span class="token operator">=</span> rawData<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">54</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>gridRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>virtual-grid<span class="token punctuation">"</span></span>
        <span class="token attr-name">columnCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>
        <span class="token attr-name">columnWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>index<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> width <span class="token punctuation">}</span> <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> totalHeight <span class="token operator">></span> scroll<span class="token operator">!</span><span class="token punctuation">.</span>y<span class="token operator">!</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token operator">?</span> <span class="token punctuation">(</span>width <span class="token keyword">as</span> number<span class="token punctuation">)</span> <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token operator">:</span> <span class="token punctuation">(</span>width <span class="token keyword">as</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token operator">!</span><span class="token punctuation">.</span>y <span class="token keyword">as</span> number<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rawData<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowHeight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">54</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableWidth<span class="token punctuation">}</span></span>
        <span class="token attr-name">onScroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span> scrollLeft<span class="token operator">:</span> number <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">onScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          columnIndex<span class="token punctuation">,</span>
          rowIndex<span class="token punctuation">,</span>
          style<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          columnIndex<span class="token operator">:</span> number<span class="token punctuation">;</span>
          rowIndex<span class="token operator">:</span> number<span class="token punctuation">;</span>
          style<span class="token operator">:</span> React<span class="token punctuation">.</span>CSSProperties<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
            <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">'virtual-table-cell'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
              <span class="token string-property property">'virtual-table-cell-last'</span><span class="token operator">:</span> columnIndex <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token punctuation">{</span><span class="token punctuation">(</span>rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span> <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">(</span>mergedColumns <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">}</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ResizeObserver</span></span>
      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> width <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>virtual-table<span class="token punctuation">"</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          body<span class="token operator">:</span> renderVirtualList<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ResizeObserver</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Usage</span>
<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'A'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">150</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'B'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'D'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'E'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> title<span class="token operator">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span> dataIndex<span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> data <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> length<span class="token operator">:</span> <span class="token number">100000</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>_<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span> key <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualTable</span></span> <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span> <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span> <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> y<span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> x<span class="token operator">:</span> <span class="token string">'100vw'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> classNames <span class="token keyword">from</span> <span class="token string">'classnames'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Table <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'infrad'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ResizeObserver <span class="token keyword">from</span> <span class="token string">'rc-resize-observer'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> VariableSizeGrid <span class="token keyword">as</span> Grid <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-window'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">VirtualTable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> columns<span class="token punctuation">,</span> scroll <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">,</span> setTableWidth<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> widthColumnCount <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">!</span>width<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> mergedColumns <span class="token operator">=</span> columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">column</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> column<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>column<span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>tableWidth <span class="token operator">/</span> widthColumnCount<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> gridRef <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>connectObject<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'scrollLeft'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> gridRef<span class="token punctuation">.</span>current<span class="token operator">?.</span>state<span class="token operator">?.</span>scrollLeft<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">scrollLeft</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>gridRef<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            scrollLeft<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">resetVirtualGrid</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    gridRef<span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">resetAfterIndices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">columnIndex</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">shouldForceUpdate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> resetVirtualGrid<span class="token punctuation">,</span> <span class="token punctuation">[</span>tableWidth<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">renderVirtualList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">rawData<span class="token punctuation">,</span> <span class="token punctuation">{</span> scrollbarSize<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> onScroll <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    ref<span class="token punctuation">.</span>current <span class="token operator">=</span> connectObject<span class="token punctuation">;</span>
    <span class="token keyword">const</span> totalHeight <span class="token operator">=</span> rawData<span class="token punctuation">.</span>length <span class="token operator">*</span> <span class="token number">54</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Grid</span></span>
        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>gridRef<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>virtual-grid<span class="token punctuation">"</span></span>
        <span class="token attr-name">columnCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>
        <span class="token attr-name">columnWidth</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> <span class="token punctuation">{</span> width <span class="token punctuation">}</span> <span class="token operator">=</span> mergedColumns<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
          <span class="token keyword">return</span> totalHeight <span class="token operator">></span> scroll<span class="token punctuation">.</span>y <span class="token operator">&amp;&amp;</span> index <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token operator">?</span> width <span class="token operator">-</span> scrollbarSize <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token operator">:</span> width<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>scroll<span class="token punctuation">.</span>y<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>rawData<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span>
        <span class="token attr-name">rowHeight</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token number">54</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">width</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tableWidth<span class="token punctuation">}</span></span>
        <span class="token attr-name">onScroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> scrollLeft <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token function">onScroll</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            scrollLeft<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> columnIndex<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> style <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
            <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span><span class="token string">'virtual-table-cell'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
              <span class="token string-property property">'virtual-table-cell-last'</span><span class="token operator">:</span> columnIndex <span class="token operator">===</span> mergedColumns<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
            <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>style<span class="token punctuation">}</span></span>
          <span class="token punctuation">></span></span>
            <span class="token punctuation">{</span>rawData<span class="token punctuation">[</span>rowIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>mergedColumns<span class="token punctuation">[</span>columnIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>dataIndex<span class="token punctuation">]</span><span class="token punctuation">}</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Grid</span></span><span class="token punctuation">></span></span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ResizeObserver</span></span>
      <span class="token attr-name">onResize</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> width <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setTableWidth</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>
        <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span>
        <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>virtual-table<span class="token punctuation">"</span></span>
        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>mergedColumns<span class="token punctuation">}</span></span>
        <span class="token attr-name">pagination</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">components</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">body</span><span class="token operator">:</span> renderVirtualList<span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ResizeObserver</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Usage</span>

<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'A'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'B'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'C'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'D'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'E'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'F'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">'key'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">100000</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">VirtualTable</span></span>
    <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>
    <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span></span>
    <span class="token attr-name">scroll</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token string">'100vw'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">/></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var Z=l(0),U=l(55);function C(b){return C=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(p){return typeof p}:function(p){return p&&typeof Symbol=="function"&&p.constructor===Symbol&&p!==Symbol.prototype?"symbol":typeof p},C(b)}var g=T(l(7)),k=l(12),r=T(l(51)),z=P(l(0)),B=l(4416);function D(b){if(typeof WeakMap!="function")return null;var p=new WeakMap,w=new WeakMap;return(D=function(L){return L?w:p})(b)}function P(b,p){if(!p&&b&&b.__esModule)return b;if(b===null||C(b)!=="object"&&typeof b!="function")return{default:b};var w=D(p);if(w&&w.has(b))return w.get(b);var m={},L=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var f in b)if(f!=="default"&&Object.prototype.hasOwnProperty.call(b,f)){var u=L?Object.getOwnPropertyDescriptor(b,f):null;u&&(u.get||u.set)?Object.defineProperty(m,f,u):m[f]=b[f]}return m.default=b,w&&w.set(b,m),m}function T(b){return b&&b.__esModule?b:{default:b}}function H(){return H=Object.assign?Object.assign.bind():function(b){for(var p=1;p<arguments.length;p++){var w=arguments[p];for(var m in w)Object.prototype.hasOwnProperty.call(w,m)&&(b[m]=w[m])}return b},H.apply(this,arguments)}function E(b,p){var w=Object.keys(b);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(b);p&&(m=m.filter(function(L){return Object.getOwnPropertyDescriptor(b,L).enumerable})),w.push.apply(w,m)}return w}function Y(b){for(var p=1;p<arguments.length;p++){var w=arguments[p]!=null?arguments[p]:{};p%2?E(Object(w),!0).forEach(function(m){W(b,m,w[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(b,Object.getOwnPropertyDescriptors(w)):E(Object(w)).forEach(function(m){Object.defineProperty(b,m,Object.getOwnPropertyDescriptor(w,m))})}return b}function W(b,p,w){return p in b?Object.defineProperty(b,p,{value:w,enumerable:!0,configurable:!0,writable:!0}):b[p]=w,b}function S(b,p){return h(b)||e(b,p)||R(b,p)||N()}function N(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function R(b,p){if(!!b){if(typeof b=="string")return t(b,p);var w=Object.prototype.toString.call(b).slice(8,-1);if(w==="Object"&&b.constructor&&(w=b.constructor.name),w==="Map"||w==="Set")return Array.from(b);if(w==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(w))return t(b,p)}}function t(b,p){(p==null||p>b.length)&&(p=b.length);for(var w=0,m=new Array(p);w<p;w++)m[w]=b[w];return m}function e(b,p){var w=b==null?null:typeof Symbol!="undefined"&&b[Symbol.iterator]||b["@@iterator"];if(w!=null){var m=[],L=!0,f=!1,u,O;try{for(w=w.call(b);!(L=(u=w.next()).done)&&(m.push(u.value),!(p&&m.length===p));L=!0);}catch(K){f=!0,O=K}finally{try{!L&&w.return!=null&&w.return()}finally{if(f)throw O}}return m}}function h(b){if(Array.isArray(b))return b}var a=function(p){var w=p.columns,m=p.scroll,L=(0,z.useState)(0),f=S(L,2),u=f[0],O=f[1],K=w.filter(function(gn){var fn=gn.width;return!fn}).length,Q=w.map(function(gn){return gn.width?gn:Y(Y({},gn),{},{width:Math.floor(u/K)})}),j=(0,z.useRef)(),G=(0,z.useState)(function(){var gn={};return Object.defineProperty(gn,"scrollLeft",{get:function(){if(j.current){var yn,wn;return(yn=j.current)===null||yn===void 0||(wn=yn.state)===null||wn===void 0?void 0:wn.scrollLeft}return null},set:function(yn){j.current&&j.current.scrollTo({scrollLeft:yn})}}),gn}),nn=S(G,1),an=nn[0],cn=function(){j.current.resetAfterIndices({columnIndex:0,shouldForceUpdate:!0})};(0,z.useEffect)(function(){return cn},[u]);var mn=function(fn,yn){var wn=yn.scrollbarSize,Cn=yn.ref,Pn=yn.onScroll;Cn.current=an;var Ln=fn.length*54;return z.default.createElement(B.VariableSizeGrid,{ref:j,className:"virtual-grid",columnCount:Q.length,columnWidth:function(An){var En=Q[An].width;return Ln>m.y&&An===Q.length-1?En-wn-1:En},height:m.y,rowCount:fn.length,rowHeight:function(){return 54},width:u,onScroll:function(An){var En=An.scrollLeft;Pn({scrollLeft:En})}},function(Tn){var An=Tn.columnIndex,En=Tn.rowIndex,Mn=Tn.style;return z.default.createElement("div",{className:(0,g.default)("virtual-table-cell",{"virtual-table-cell-last":An===Q.length-1}),style:Mn},fn[En][Q[An].dataIndex])})};return z.default.createElement(r.default,{onResize:function(fn){var yn=fn.width;O(yn)}},z.default.createElement(k.Table,H({},p,{className:"virtual-table",columns:Q,pagination:!1,components:{body:mn}})))},n=[{title:"A",dataIndex:"key",width:150},{title:"B",dataIndex:"key"},{title:"C",dataIndex:"key"},{title:"D",dataIndex:"key"},{title:"E",dataIndex:"key",width:200},{title:"F",dataIndex:"key",width:100}],c=Array.from({length:1e5},function(b,p){return{key:p}}),y=function(){return z.default.createElement(a,{columns:n,dataSource:c,scroll:{y:300,x:"100vw"}})},J=y;return Z.createElement(J)},style:`
  .virtual-table .ant-table-container:before,
  .virtual-table .ant-table-container:after {
    display: none;
  }
  .virtual-table-cell {
    box-sizing: border-box;
    padding: 16px;
    border-bottom: 1px solid #e8e8e8;
    background: #FFF;
  }
 [data-theme="dark"]  .virtual-table-cell {
    box-sizing: border-box;
    padding: 16px;
    border-bottom: 1px solid #303030;
    background: #141414;
  }`}},4416:function(kn,dn,l){"use strict";l.r(dn),l.d(dn,"FixedSizeGrid",function(){return Pn}),l.d(dn,"FixedSizeList",function(){return Ln}),l.d(dn,"VariableSizeGrid",function(){return O}),l.d(dn,"VariableSizeList",function(){return Cn}),l.d(dn,"areEqual",function(){return Mn}),l.d(dn,"shouldComponentUpdate",function(){return Jn});var _=l(10),Z=l(30),U=l(519);function C(q,x){q.prototype=Object.create(x.prototype),q.prototype.constructor=q,Object(U.a)(q,x)}var g=Number.isNaN||function(x){return typeof x=="number"&&x!==x};function k(q,x){return!!(q===x||g(q)&&g(x))}function r(q,x){if(q.length!==x.length)return!1;for(var M=0;M<q.length;M++)if(!k(q[M],x[M]))return!1;return!0}function z(q,x){x===void 0&&(x=r);var M,I=[],d,o=!1;function i(){for(var v=[],A=0;A<arguments.length;A++)v[A]=arguments[A];return o&&M===this&&x(v,I)||(d=q.apply(this,v),o=!0,M=this,I=v),d}return i}var B=z,D=l(0),P=l(521),T=typeof performance=="object"&&typeof performance.now=="function",H=T?function(){return performance.now()}:function(){return Date.now()};function E(q){cancelAnimationFrame(q.id)}function Y(q,x){var M=H();function I(){H()-M>=x?q.call(null):d.id=requestAnimationFrame(I)}var d={id:requestAnimationFrame(I)};return d}var W=-1;function S(q){if(q===void 0&&(q=!1),W===-1||q){var x=document.createElement("div"),M=x.style;M.width="50px",M.height="50px",M.overflow="scroll",document.body.appendChild(x),W=x.offsetWidth-x.clientWidth,document.body.removeChild(x)}return W}var N=null;function R(q){if(q===void 0&&(q=!1),N===null||q){var x=document.createElement("div"),M=x.style;M.width="50px",M.height="50px",M.overflow="scroll",M.direction="rtl";var I=document.createElement("div"),d=I.style;return d.width="100px",d.height="100px",x.appendChild(I),document.body.appendChild(x),x.scrollLeft>0?N="positive-descending":(x.scrollLeft=1,x.scrollLeft===0?N="negative":N="positive-ascending"),document.body.removeChild(x),N}return N}var t=150,e=function(x){var M=x.columnIndex,I=x.data,d=x.rowIndex;return d+":"+M},h=null,a=null,n=null;function c(q){var x,M=q.getColumnOffset,I=q.getColumnStartIndexForOffset,d=q.getColumnStopIndexForStartIndex,o=q.getColumnWidth,i=q.getEstimatedTotalHeight,v=q.getEstimatedTotalWidth,A=q.getOffsetForColumnAndAlignment,V=q.getOffsetForRowAndAlignment,sn=q.getRowHeight,tn=q.getRowOffset,s=q.getRowStartIndexForOffset,pn=q.getRowStopIndexForStartIndex,X=q.initInstanceProps,F=q.shouldResetStyleCacheOnItemSizeChange,on=q.validateProps;return x=function(en){C(ln,en);function ln(xn){var $;return $=en.call(this,xn)||this,$._instanceProps=X($.props,Object(Z.a)($)),$._resetIsScrollingTimeoutId=null,$._outerRef=void 0,$.state={instance:Object(Z.a)($),isScrolling:!1,horizontalScrollDirection:"forward",scrollLeft:typeof $.props.initialScrollLeft=="number"?$.props.initialScrollLeft:0,scrollTop:typeof $.props.initialScrollTop=="number"?$.props.initialScrollTop:0,scrollUpdateWasRequested:!1,verticalScrollDirection:"forward"},$._callOnItemsRendered=void 0,$._callOnItemsRendered=B(function(rn,un,bn,Sn,vn,On,In,Dn){return $.props.onItemsRendered({overscanColumnStartIndex:rn,overscanColumnStopIndex:un,overscanRowStartIndex:bn,overscanRowStopIndex:Sn,visibleColumnStartIndex:vn,visibleColumnStopIndex:On,visibleRowStartIndex:In,visibleRowStopIndex:Dn})}),$._callOnScroll=void 0,$._callOnScroll=B(function(rn,un,bn,Sn,vn){return $.props.onScroll({horizontalScrollDirection:bn,scrollLeft:rn,scrollTop:un,verticalScrollDirection:Sn,scrollUpdateWasRequested:vn})}),$._getItemStyle=void 0,$._getItemStyle=function(rn,un){var bn=$.props,Sn=bn.columnWidth,vn=bn.direction,On=bn.rowHeight,In=$._getItemStyleCache(F&&Sn,F&&vn,F&&On),Dn=rn+":"+un,jn;if(In.hasOwnProperty(Dn))jn=In[Dn];else{var Nn=M($.props,un,$._instanceProps),Rn=vn==="rtl";In[Dn]=jn={position:"absolute",left:Rn?void 0:Nn,right:Rn?Nn:void 0,top:tn($.props,rn,$._instanceProps),height:sn($.props,rn,$._instanceProps),width:o($.props,un,$._instanceProps)}}return jn},$._getItemStyleCache=void 0,$._getItemStyleCache=B(function(rn,un,bn){return{}}),$._onScroll=function(rn){var un=rn.currentTarget,bn=un.clientHeight,Sn=un.clientWidth,vn=un.scrollLeft,On=un.scrollTop,In=un.scrollHeight,Dn=un.scrollWidth;$.setState(function(jn){if(jn.scrollLeft===vn&&jn.scrollTop===On)return null;var Nn=$.props.direction,Rn=vn;if(Nn==="rtl")switch(R()){case"negative":Rn=-vn;break;case"positive-descending":Rn=Dn-Sn-vn;break}Rn=Math.max(0,Math.min(Rn,Dn-Sn));var Bn=Math.max(0,Math.min(On,In-bn));return{isScrolling:!0,horizontalScrollDirection:jn.scrollLeft<vn?"forward":"backward",scrollLeft:Rn,scrollTop:Bn,verticalScrollDirection:jn.scrollTop<On?"forward":"backward",scrollUpdateWasRequested:!1}},$._resetIsScrollingDebounced)},$._outerRefSetter=function(rn){var un=$.props.outerRef;$._outerRef=rn,typeof un=="function"?un(rn):un!=null&&typeof un=="object"&&un.hasOwnProperty("current")&&(un.current=rn)},$._resetIsScrollingDebounced=function(){$._resetIsScrollingTimeoutId!==null&&E($._resetIsScrollingTimeoutId),$._resetIsScrollingTimeoutId=Y($._resetIsScrolling,t)},$._resetIsScrolling=function(){$._resetIsScrollingTimeoutId=null,$.setState({isScrolling:!1},function(){$._getItemStyleCache(-1)})},$}ln.getDerivedStateFromProps=function($,rn){return y($,rn),on($),null};var hn=ln.prototype;return hn.scrollTo=function($){var rn=$.scrollLeft,un=$.scrollTop;rn!==void 0&&(rn=Math.max(0,rn)),un!==void 0&&(un=Math.max(0,un)),this.setState(function(bn){return rn===void 0&&(rn=bn.scrollLeft),un===void 0&&(un=bn.scrollTop),bn.scrollLeft===rn&&bn.scrollTop===un?null:{horizontalScrollDirection:bn.scrollLeft<rn?"forward":"backward",scrollLeft:rn,scrollTop:un,scrollUpdateWasRequested:!0,verticalScrollDirection:bn.scrollTop<un?"forward":"backward"}},this._resetIsScrollingDebounced)},hn.scrollToItem=function($){var rn=$.align,un=rn===void 0?"auto":rn,bn=$.columnIndex,Sn=$.rowIndex,vn=this.props,On=vn.columnCount,In=vn.height,Dn=vn.rowCount,jn=vn.width,Nn=this.state,Rn=Nn.scrollLeft,Bn=Nn.scrollTop,Fn=S();bn!==void 0&&(bn=Math.max(0,Math.min(bn,On-1))),Sn!==void 0&&(Sn=Math.max(0,Math.min(Sn,Dn-1)));var Kn=i(this.props,this._instanceProps),Un=v(this.props,this._instanceProps),Gn=Un>jn?Fn:0,Yn=Kn>In?Fn:0;this.scrollTo({scrollLeft:bn!==void 0?A(this.props,bn,un,Rn,this._instanceProps,Yn):Rn,scrollTop:Sn!==void 0?V(this.props,Sn,un,Bn,this._instanceProps,Gn):Bn})},hn.componentDidMount=function(){var $=this.props,rn=$.initialScrollLeft,un=$.initialScrollTop;if(this._outerRef!=null){var bn=this._outerRef;typeof rn=="number"&&(bn.scrollLeft=rn),typeof un=="number"&&(bn.scrollTop=un)}this._callPropsCallbacks()},hn.componentDidUpdate=function(){var $=this.props.direction,rn=this.state,un=rn.scrollLeft,bn=rn.scrollTop,Sn=rn.scrollUpdateWasRequested;if(Sn&&this._outerRef!=null){var vn=this._outerRef;if($==="rtl")switch(R()){case"negative":vn.scrollLeft=-un;break;case"positive-ascending":vn.scrollLeft=un;break;default:var On=vn.clientWidth,In=vn.scrollWidth;vn.scrollLeft=In-On-un;break}else vn.scrollLeft=Math.max(0,un);vn.scrollTop=Math.max(0,bn)}this._callPropsCallbacks()},hn.componentWillUnmount=function(){this._resetIsScrollingTimeoutId!==null&&E(this._resetIsScrollingTimeoutId)},hn.render=function(){var $=this.props,rn=$.children,un=$.className,bn=$.columnCount,Sn=$.direction,vn=$.height,On=$.innerRef,In=$.innerElementType,Dn=$.innerTagName,jn=$.itemData,Nn=$.itemKey,Rn=Nn===void 0?e:Nn,Bn=$.outerElementType,Fn=$.outerTagName,Kn=$.rowCount,Un=$.style,Gn=$.useIsScrolling,Yn=$.width,$n=this.state.isScrolling,Hn=this._getHorizontalRangeToRender(),qn=Hn[0],_n=Hn[1],Vn=this._getVerticalRangeToRender(),ns=Vn[0],ss=Vn[1],Qn=[];if(bn>0&&Kn)for(var Xn=ns;Xn<=ss;Xn++)for(var Zn=qn;Zn<=_n;Zn++)Qn.push(Object(D.createElement)(rn,{columnIndex:Zn,data:jn,isScrolling:Gn?$n:void 0,key:Rn({columnIndex:Zn,data:jn,rowIndex:Xn}),rowIndex:Xn,style:this._getItemStyle(Xn,Zn)}));var Wn=i(this.props,this._instanceProps),zn=v(this.props,this._instanceProps);return Object(D.createElement)(Bn||Fn||"div",{className:un,onScroll:this._onScroll,ref:this._outerRefSetter,style:Object(_.a)({position:"relative",height:vn,width:Yn,overflow:"auto",WebkitOverflowScrolling:"touch",willChange:"transform",direction:Sn},Un)},Object(D.createElement)(In||Dn||"div",{children:Qn,ref:On,style:{height:Wn,pointerEvents:$n?"none":void 0,width:zn}}))},hn._callPropsCallbacks=function(){var $=this.props,rn=$.columnCount,un=$.onItemsRendered,bn=$.onScroll,Sn=$.rowCount;if(typeof un=="function"&&rn>0&&Sn>0){var vn=this._getHorizontalRangeToRender(),On=vn[0],In=vn[1],Dn=vn[2],jn=vn[3],Nn=this._getVerticalRangeToRender(),Rn=Nn[0],Bn=Nn[1],Fn=Nn[2],Kn=Nn[3];this._callOnItemsRendered(On,In,Rn,Bn,Dn,jn,Fn,Kn)}if(typeof bn=="function"){var Un=this.state,Gn=Un.horizontalScrollDirection,Yn=Un.scrollLeft,$n=Un.scrollTop,Hn=Un.scrollUpdateWasRequested,qn=Un.verticalScrollDirection;this._callOnScroll(Yn,$n,Gn,qn,Hn)}},hn._getHorizontalRangeToRender=function(){var $=this.props,rn=$.columnCount,un=$.overscanColumnCount,bn=$.overscanColumnsCount,Sn=$.overscanCount,vn=$.rowCount,On=this.state,In=On.horizontalScrollDirection,Dn=On.isScrolling,jn=On.scrollLeft,Nn=un||bn||Sn||1;if(rn===0||vn===0)return[0,0,0,0];var Rn=I(this.props,jn,this._instanceProps),Bn=d(this.props,Rn,jn,this._instanceProps),Fn=!Dn||In==="backward"?Math.max(1,Nn):1,Kn=!Dn||In==="forward"?Math.max(1,Nn):1;return[Math.max(0,Rn-Fn),Math.max(0,Math.min(rn-1,Bn+Kn)),Rn,Bn]},hn._getVerticalRangeToRender=function(){var $=this.props,rn=$.columnCount,un=$.overscanCount,bn=$.overscanRowCount,Sn=$.overscanRowsCount,vn=$.rowCount,On=this.state,In=On.isScrolling,Dn=On.verticalScrollDirection,jn=On.scrollTop,Nn=bn||Sn||un||1;if(rn===0||vn===0)return[0,0,0,0];var Rn=s(this.props,jn,this._instanceProps),Bn=pn(this.props,Rn,jn,this._instanceProps),Fn=!In||Dn==="backward"?Math.max(1,Nn):1,Kn=!In||Dn==="forward"?Math.max(1,Nn):1;return[Math.max(0,Rn-Fn),Math.max(0,Math.min(vn-1,Bn+Kn)),Rn,Bn]},ln}(D.PureComponent),x.defaultProps={direction:"ltr",itemData:void 0,useIsScrolling:!1},x}var y=function(x,M){var I=x.children,d=x.direction,o=x.height,i=x.innerTagName,v=x.outerTagName,A=x.overscanColumnsCount,V=x.overscanCount,sn=x.overscanRowsCount,tn=x.width,s=M.instance},J=50,b=function(x,M){var I=x.rowCount,d=M.rowMetadataMap,o=M.estimatedRowHeight,i=M.lastMeasuredRowIndex,v=0;if(i>=I&&(i=I-1),i>=0){var A=d[i];v=A.offset+A.size}var V=I-i-1,sn=V*o;return v+sn},p=function(x,M){var I=x.columnCount,d=M.columnMetadataMap,o=M.estimatedColumnWidth,i=M.lastMeasuredColumnIndex,v=0;if(i>=I&&(i=I-1),i>=0){var A=d[i];v=A.offset+A.size}var V=I-i-1,sn=V*o;return v+sn},w=function(x,M,I,d){var o,i,v;if(x==="column"?(o=d.columnMetadataMap,i=M.columnWidth,v=d.lastMeasuredColumnIndex):(o=d.rowMetadataMap,i=M.rowHeight,v=d.lastMeasuredRowIndex),I>v){var A=0;if(v>=0){var V=o[v];A=V.offset+V.size}for(var sn=v+1;sn<=I;sn++){var tn=i(sn);o[sn]={offset:A,size:tn},A+=tn}x==="column"?d.lastMeasuredColumnIndex=I:d.lastMeasuredRowIndex=I}return o[I]},m=function(x,M,I,d){var o,i;x==="column"?(o=I.columnMetadataMap,i=I.lastMeasuredColumnIndex):(o=I.rowMetadataMap,i=I.lastMeasuredRowIndex);var v=i>0?o[i].offset:0;return v>=d?L(x,M,I,i,0,d):f(x,M,I,Math.max(0,i),d)},L=function(x,M,I,d,o,i){for(;o<=d;){var v=o+Math.floor((d-o)/2),A=w(x,M,v,I).offset;if(A===i)return v;A<i?o=v+1:A>i&&(d=v-1)}return o>0?o-1:0},f=function(x,M,I,d,o){for(var i=x==="column"?M.columnCount:M.rowCount,v=1;d<i&&w(x,M,d,I).offset<o;)d+=v,v*=2;return L(x,M,I,Math.min(d,i-1),Math.floor(d/2),o)},u=function(x,M,I,d,o,i,v){var A=x==="column"?M.width:M.height,V=w(x,M,I,i),sn=x==="column"?p(M,i):b(M,i),tn=Math.max(0,Math.min(sn-A,V.offset)),s=Math.max(0,V.offset-A+v+V.size);switch(d==="smart"&&(o>=s-A&&o<=tn+A?d="auto":d="center"),d){case"start":return tn;case"end":return s;case"center":return Math.round(s+(tn-s)/2);case"auto":default:return o>=s&&o<=tn?o:s>tn||o<s?s:tn}},O=c({getColumnOffset:function(x,M,I){return w("column",x,M,I).offset},getColumnStartIndexForOffset:function(x,M,I){return m("column",x,I,M)},getColumnStopIndexForStartIndex:function(x,M,I,d){for(var o=x.columnCount,i=x.width,v=w("column",x,M,d),A=I+i,V=v.offset+v.size,sn=M;sn<o-1&&V<A;)sn++,V+=w("column",x,sn,d).size;return sn},getColumnWidth:function(x,M,I){return I.columnMetadataMap[M].size},getEstimatedTotalHeight:b,getEstimatedTotalWidth:p,getOffsetForColumnAndAlignment:function(x,M,I,d,o,i){return u("column",x,M,I,d,o,i)},getOffsetForRowAndAlignment:function(x,M,I,d,o,i){return u("row",x,M,I,d,o,i)},getRowOffset:function(x,M,I){return w("row",x,M,I).offset},getRowHeight:function(x,M,I){return I.rowMetadataMap[M].size},getRowStartIndexForOffset:function(x,M,I){return m("row",x,I,M)},getRowStopIndexForStartIndex:function(x,M,I,d){for(var o=x.rowCount,i=x.height,v=w("row",x,M,d),A=I+i,V=v.offset+v.size,sn=M;sn<o-1&&V<A;)sn++,V+=w("row",x,sn,d).size;return sn},initInstanceProps:function(x,M){var I=x,d=I.estimatedColumnWidth,o=I.estimatedRowHeight,i={columnMetadataMap:{},estimatedColumnWidth:d||J,estimatedRowHeight:o||J,lastMeasuredColumnIndex:-1,lastMeasuredRowIndex:-1,rowMetadataMap:{}};return M.resetAfterColumnIndex=function(v,A){A===void 0&&(A=!0),M.resetAfterIndices({columnIndex:v,shouldForceUpdate:A})},M.resetAfterRowIndex=function(v,A){A===void 0&&(A=!0),M.resetAfterIndices({rowIndex:v,shouldForceUpdate:A})},M.resetAfterIndices=function(v){var A=v.columnIndex,V=v.rowIndex,sn=v.shouldForceUpdate,tn=sn===void 0?!0:sn;typeof A=="number"&&(i.lastMeasuredColumnIndex=Math.min(i.lastMeasuredColumnIndex,A-1)),typeof V=="number"&&(i.lastMeasuredRowIndex=Math.min(i.lastMeasuredRowIndex,V-1)),M._getItemStyleCache(-1),tn&&M.forceUpdate()},i},shouldResetStyleCacheOnItemSizeChange:!1,validateProps:function(x){var M=x.columnWidth,I=x.rowHeight}}),K=150,Q=function(x,M){return x},j=null,G=null;function nn(q){var x,M=q.getItemOffset,I=q.getEstimatedTotalSize,d=q.getItemSize,o=q.getOffsetForIndexAndAlignment,i=q.getStartIndexForOffset,v=q.getStopIndexForStartIndex,A=q.initInstanceProps,V=q.shouldResetStyleCacheOnItemSizeChange,sn=q.validateProps;return x=function(tn){C(s,tn);function s(X){var F;return F=tn.call(this,X)||this,F._instanceProps=A(F.props,Object(Z.a)(F)),F._outerRef=void 0,F._resetIsScrollingTimeoutId=null,F.state={instance:Object(Z.a)(F),isScrolling:!1,scrollDirection:"forward",scrollOffset:typeof F.props.initialScrollOffset=="number"?F.props.initialScrollOffset:0,scrollUpdateWasRequested:!1},F._callOnItemsRendered=void 0,F._callOnItemsRendered=B(function(on,en,ln,hn){return F.props.onItemsRendered({overscanStartIndex:on,overscanStopIndex:en,visibleStartIndex:ln,visibleStopIndex:hn})}),F._callOnScroll=void 0,F._callOnScroll=B(function(on,en,ln){return F.props.onScroll({scrollDirection:on,scrollOffset:en,scrollUpdateWasRequested:ln})}),F._getItemStyle=void 0,F._getItemStyle=function(on){var en=F.props,ln=en.direction,hn=en.itemSize,xn=en.layout,$=F._getItemStyleCache(V&&hn,V&&xn,V&&ln),rn;if($.hasOwnProperty(on))rn=$[on];else{var un=M(F.props,on,F._instanceProps),bn=d(F.props,on,F._instanceProps),Sn=ln==="horizontal"||xn==="horizontal",vn=ln==="rtl",On=Sn?un:0;$[on]=rn={position:"absolute",left:vn?void 0:On,right:vn?On:void 0,top:Sn?0:un,height:Sn?"100%":bn,width:Sn?bn:"100%"}}return rn},F._getItemStyleCache=void 0,F._getItemStyleCache=B(function(on,en,ln){return{}}),F._onScrollHorizontal=function(on){var en=on.currentTarget,ln=en.clientWidth,hn=en.scrollLeft,xn=en.scrollWidth;F.setState(function($){if($.scrollOffset===hn)return null;var rn=F.props.direction,un=hn;if(rn==="rtl")switch(R()){case"negative":un=-hn;break;case"positive-descending":un=xn-ln-hn;break}return un=Math.max(0,Math.min(un,xn-ln)),{isScrolling:!0,scrollDirection:$.scrollOffset<hn?"forward":"backward",scrollOffset:un,scrollUpdateWasRequested:!1}},F._resetIsScrollingDebounced)},F._onScrollVertical=function(on){var en=on.currentTarget,ln=en.clientHeight,hn=en.scrollHeight,xn=en.scrollTop;F.setState(function($){if($.scrollOffset===xn)return null;var rn=Math.max(0,Math.min(xn,hn-ln));return{isScrolling:!0,scrollDirection:$.scrollOffset<rn?"forward":"backward",scrollOffset:rn,scrollUpdateWasRequested:!1}},F._resetIsScrollingDebounced)},F._outerRefSetter=function(on){var en=F.props.outerRef;F._outerRef=on,typeof en=="function"?en(on):en!=null&&typeof en=="object"&&en.hasOwnProperty("current")&&(en.current=on)},F._resetIsScrollingDebounced=function(){F._resetIsScrollingTimeoutId!==null&&E(F._resetIsScrollingTimeoutId),F._resetIsScrollingTimeoutId=Y(F._resetIsScrolling,K)},F._resetIsScrolling=function(){F._resetIsScrollingTimeoutId=null,F.setState({isScrolling:!1},function(){F._getItemStyleCache(-1,null)})},F}s.getDerivedStateFromProps=function(F,on){return an(F,on),sn(F),null};var pn=s.prototype;return pn.scrollTo=function(F){F=Math.max(0,F),this.setState(function(on){return on.scrollOffset===F?null:{scrollDirection:on.scrollOffset<F?"forward":"backward",scrollOffset:F,scrollUpdateWasRequested:!0}},this._resetIsScrollingDebounced)},pn.scrollToItem=function(F,on){on===void 0&&(on="auto");var en=this.props.itemCount,ln=this.state.scrollOffset;F=Math.max(0,Math.min(F,en-1)),this.scrollTo(o(this.props,F,on,ln,this._instanceProps))},pn.componentDidMount=function(){var F=this.props,on=F.direction,en=F.initialScrollOffset,ln=F.layout;if(typeof en=="number"&&this._outerRef!=null){var hn=this._outerRef;on==="horizontal"||ln==="horizontal"?hn.scrollLeft=en:hn.scrollTop=en}this._callPropsCallbacks()},pn.componentDidUpdate=function(){var F=this.props,on=F.direction,en=F.layout,ln=this.state,hn=ln.scrollOffset,xn=ln.scrollUpdateWasRequested;if(xn&&this._outerRef!=null){var $=this._outerRef;if(on==="horizontal"||en==="horizontal")if(on==="rtl")switch(R()){case"negative":$.scrollLeft=-hn;break;case"positive-ascending":$.scrollLeft=hn;break;default:var rn=$.clientWidth,un=$.scrollWidth;$.scrollLeft=un-rn-hn;break}else $.scrollLeft=hn;else $.scrollTop=hn}this._callPropsCallbacks()},pn.componentWillUnmount=function(){this._resetIsScrollingTimeoutId!==null&&E(this._resetIsScrollingTimeoutId)},pn.render=function(){var F=this.props,on=F.children,en=F.className,ln=F.direction,hn=F.height,xn=F.innerRef,$=F.innerElementType,rn=F.innerTagName,un=F.itemCount,bn=F.itemData,Sn=F.itemKey,vn=Sn===void 0?Q:Sn,On=F.layout,In=F.outerElementType,Dn=F.outerTagName,jn=F.style,Nn=F.useIsScrolling,Rn=F.width,Bn=this.state.isScrolling,Fn=ln==="horizontal"||On==="horizontal",Kn=Fn?this._onScrollHorizontal:this._onScrollVertical,Un=this._getRangeToRender(),Gn=Un[0],Yn=Un[1],$n=[];if(un>0)for(var Hn=Gn;Hn<=Yn;Hn++)$n.push(Object(D.createElement)(on,{data:bn,key:vn(Hn,bn),index:Hn,isScrolling:Nn?Bn:void 0,style:this._getItemStyle(Hn)}));var qn=I(this.props,this._instanceProps);return Object(D.createElement)(In||Dn||"div",{className:en,onScroll:Kn,ref:this._outerRefSetter,style:Object(_.a)({position:"relative",height:hn,width:Rn,overflow:"auto",WebkitOverflowScrolling:"touch",willChange:"transform",direction:ln},jn)},Object(D.createElement)($||rn||"div",{children:$n,ref:xn,style:{height:Fn?"100%":qn,pointerEvents:Bn?"none":void 0,width:Fn?qn:"100%"}}))},pn._callPropsCallbacks=function(){if(typeof this.props.onItemsRendered=="function"){var F=this.props.itemCount;if(F>0){var on=this._getRangeToRender(),en=on[0],ln=on[1],hn=on[2],xn=on[3];this._callOnItemsRendered(en,ln,hn,xn)}}if(typeof this.props.onScroll=="function"){var $=this.state,rn=$.scrollDirection,un=$.scrollOffset,bn=$.scrollUpdateWasRequested;this._callOnScroll(rn,un,bn)}},pn._getRangeToRender=function(){var F=this.props,on=F.itemCount,en=F.overscanCount,ln=this.state,hn=ln.isScrolling,xn=ln.scrollDirection,$=ln.scrollOffset;if(on===0)return[0,0,0,0];var rn=i(this.props,$,this._instanceProps),un=v(this.props,rn,$,this._instanceProps),bn=!hn||xn==="backward"?Math.max(1,en):1,Sn=!hn||xn==="forward"?Math.max(1,en):1;return[Math.max(0,rn-bn),Math.max(0,Math.min(on-1,un+Sn)),rn,un]},s}(D.PureComponent),x.defaultProps={direction:"ltr",itemData:void 0,layout:"vertical",overscanCount:2,useIsScrolling:!1},x}var an=function(x,M){var I=x.children,d=x.direction,o=x.height,i=x.layout,v=x.innerTagName,A=x.outerTagName,V=x.width,sn=M.instance;if(!1)var tn},cn=50,mn=function(x,M,I){var d=x,o=d.itemSize,i=I.itemMetadataMap,v=I.lastMeasuredIndex;if(M>v){var A=0;if(v>=0){var V=i[v];A=V.offset+V.size}for(var sn=v+1;sn<=M;sn++){var tn=o(sn);i[sn]={offset:A,size:tn},A+=tn}I.lastMeasuredIndex=M}return i[M]},gn=function(x,M,I){var d=M.itemMetadataMap,o=M.lastMeasuredIndex,i=o>0?d[o].offset:0;return i>=I?fn(x,M,o,0,I):yn(x,M,Math.max(0,o),I)},fn=function(x,M,I,d,o){for(;d<=I;){var i=d+Math.floor((I-d)/2),v=mn(x,i,M).offset;if(v===o)return i;v<o?d=i+1:v>o&&(I=i-1)}return d>0?d-1:0},yn=function(x,M,I,d){for(var o=x.itemCount,i=1;I<o&&mn(x,I,M).offset<d;)I+=i,i*=2;return fn(x,M,Math.min(I,o-1),Math.floor(I/2),d)},wn=function(x,M){var I=x.itemCount,d=M.itemMetadataMap,o=M.estimatedItemSize,i=M.lastMeasuredIndex,v=0;if(i>=I&&(i=I-1),i>=0){var A=d[i];v=A.offset+A.size}var V=I-i-1,sn=V*o;return v+sn},Cn=nn({getItemOffset:function(x,M,I){return mn(x,M,I).offset},getItemSize:function(x,M,I){return I.itemMetadataMap[M].size},getEstimatedTotalSize:wn,getOffsetForIndexAndAlignment:function(x,M,I,d,o){var i=x.direction,v=x.height,A=x.layout,V=x.width,sn=i==="horizontal"||A==="horizontal",tn=sn?V:v,s=mn(x,M,o),pn=wn(x,o),X=Math.max(0,Math.min(pn-tn,s.offset)),F=Math.max(0,s.offset-tn+s.size);switch(I==="smart"&&(d>=F-tn&&d<=X+tn?I="auto":I="center"),I){case"start":return X;case"end":return F;case"center":return Math.round(F+(X-F)/2);case"auto":default:return d>=F&&d<=X?d:d<F?F:X}},getStartIndexForOffset:function(x,M,I){return gn(x,I,M)},getStopIndexForStartIndex:function(x,M,I,d){for(var o=x.direction,i=x.height,v=x.itemCount,A=x.layout,V=x.width,sn=o==="horizontal"||A==="horizontal",tn=sn?V:i,s=mn(x,M,d),pn=I+tn,X=s.offset+s.size,F=M;F<v-1&&X<pn;)F++,X+=mn(x,F,d).size;return F},initInstanceProps:function(x,M){var I=x,d=I.estimatedItemSize,o={itemMetadataMap:{},estimatedItemSize:d||cn,lastMeasuredIndex:-1};return M.resetAfterIndex=function(i,v){v===void 0&&(v=!0),o.lastMeasuredIndex=Math.min(o.lastMeasuredIndex,i-1),M._getItemStyleCache(-1),v&&M.forceUpdate()},o},shouldResetStyleCacheOnItemSizeChange:!1,validateProps:function(x){var M=x.itemSize}}),Pn=c({getColumnOffset:function(x,M){var I=x.columnWidth;return M*I},getColumnWidth:function(x,M){var I=x.columnWidth;return I},getRowOffset:function(x,M){var I=x.rowHeight;return M*I},getRowHeight:function(x,M){var I=x.rowHeight;return I},getEstimatedTotalHeight:function(x){var M=x.rowCount,I=x.rowHeight;return I*M},getEstimatedTotalWidth:function(x){var M=x.columnCount,I=x.columnWidth;return I*M},getOffsetForColumnAndAlignment:function(x,M,I,d,o,i){var v=x.columnCount,A=x.columnWidth,V=x.width,sn=Math.max(0,v*A-V),tn=Math.min(sn,M*A),s=Math.max(0,M*A-V+i+A);switch(I==="smart"&&(d>=s-V&&d<=tn+V?I="auto":I="center"),I){case"start":return tn;case"end":return s;case"center":var pn=Math.round(s+(tn-s)/2);return pn<Math.ceil(V/2)?0:pn>sn+Math.floor(V/2)?sn:pn;case"auto":default:return d>=s&&d<=tn?d:s>tn||d<s?s:tn}},getOffsetForRowAndAlignment:function(x,M,I,d,o,i){var v=x.rowHeight,A=x.height,V=x.rowCount,sn=Math.max(0,V*v-A),tn=Math.min(sn,M*v),s=Math.max(0,M*v-A+i+v);switch(I==="smart"&&(d>=s-A&&d<=tn+A?I="auto":I="center"),I){case"start":return tn;case"end":return s;case"center":var pn=Math.round(s+(tn-s)/2);return pn<Math.ceil(A/2)?0:pn>sn+Math.floor(A/2)?sn:pn;case"auto":default:return d>=s&&d<=tn?d:s>tn||d<s?s:tn}},getColumnStartIndexForOffset:function(x,M){var I=x.columnWidth,d=x.columnCount;return Math.max(0,Math.min(d-1,Math.floor(M/I)))},getColumnStopIndexForStartIndex:function(x,M,I){var d=x.columnWidth,o=x.columnCount,i=x.width,v=M*d,A=Math.ceil((i+I-v)/d);return Math.max(0,Math.min(o-1,M+A-1))},getRowStartIndexForOffset:function(x,M){var I=x.rowHeight,d=x.rowCount;return Math.max(0,Math.min(d-1,Math.floor(M/I)))},getRowStopIndexForStartIndex:function(x,M,I){var d=x.rowHeight,o=x.rowCount,i=x.height,v=M*d,A=Math.ceil((i+I-v)/d);return Math.max(0,Math.min(o-1,M+A-1))},initInstanceProps:function(x){},shouldResetStyleCacheOnItemSizeChange:!0,validateProps:function(x){var M=x.columnWidth,I=x.rowHeight}}),Ln=nn({getItemOffset:function(x,M){var I=x.itemSize;return M*I},getItemSize:function(x,M){var I=x.itemSize;return I},getEstimatedTotalSize:function(x){var M=x.itemCount,I=x.itemSize;return I*M},getOffsetForIndexAndAlignment:function(x,M,I,d){var o=x.direction,i=x.height,v=x.itemCount,A=x.itemSize,V=x.layout,sn=x.width,tn=o==="horizontal"||V==="horizontal",s=tn?sn:i,pn=Math.max(0,v*A-s),X=Math.min(pn,M*A),F=Math.max(0,M*A-s+A);switch(I==="smart"&&(d>=F-s&&d<=X+s?I="auto":I="center"),I){case"start":return X;case"end":return F;case"center":{var on=Math.round(F+(X-F)/2);return on<Math.ceil(s/2)?0:on>pn+Math.floor(s/2)?pn:on}case"auto":default:return d>=F&&d<=X?d:d<F?F:X}},getStartIndexForOffset:function(x,M){var I=x.itemCount,d=x.itemSize;return Math.max(0,Math.min(I-1,Math.floor(M/d)))},getStopIndexForStartIndex:function(x,M,I){var d=x.direction,o=x.height,i=x.itemCount,v=x.itemSize,A=x.layout,V=x.width,sn=d==="horizontal"||A==="horizontal",tn=M*v,s=sn?V:o,pn=Math.ceil((s+I-tn)/v);return Math.max(0,Math.min(i-1,M+pn-1))},initInstanceProps:function(x){},shouldResetStyleCacheOnItemSizeChange:!0,validateProps:function(x){var M=x.itemSize}});function Tn(q,x){for(var M in q)if(!(M in x))return!0;for(var I in x)if(q[I]!==x[I])return!0;return!1}var An=["style"],En=["style"];function Mn(q,x){var M=q.style,I=Object(P.a)(q,An),d=x.style,o=Object(P.a)(x,En);return!Tn(M,d)&&!Tn(I,o)}function Jn(q,x){return!Mn(this.props,q)||Tn(this.state,x)}},4418:function(kn,dn,l){"use strict";l.r(dn),l.d(dn,"SortableContainer",function(){return x}),l.d(dn,"sortableContainer",function(){return x}),l.d(dn,"SortableElement",function(){return d}),l.d(dn,"sortableElement",function(){return d}),l.d(dn,"SortableHandle",function(){return fn}),l.d(dn,"sortableHandle",function(){return fn}),l.d(dn,"arrayMove",function(){return t});var _=l(10),Z=l(9),U=l(8);function C(o){for(var i=1;i<arguments.length;i++){var v=arguments[i]!=null?Object(arguments[i]):{},A=Object.keys(v);typeof Object.getOwnPropertySymbols=="function"&&A.push.apply(A,Object.getOwnPropertySymbols(v).filter(function(V){return Object.getOwnPropertyDescriptor(v,V).enumerable})),A.forEach(function(V){Object(U.a)(o,V,v[V])})}return o}var g=l(24),k=l(25),r=l(520),z=l(442),B=l(28),D=l(30),P=l(0),T=l(55),H=l(45),E=l.n(H),Y=l(14),W=l(11),S=l.n(W),N=function(){function o(){Object(g.a)(this,o),Object(U.a)(this,"refs",{})}return Object(k.a)(o,[{key:"add",value:function(v,A){this.refs[v]||(this.refs[v]=[]),this.refs[v].push(A)}},{key:"remove",value:function(v,A){var V=this.getIndex(v,A);V!==-1&&this.refs[v].splice(V,1)}},{key:"isActive",value:function(){return this.active}},{key:"getActive",value:function(){var v=this;return this.refs[this.active.collection].find(function(A){var V=A.node;return V.sortableInfo.index==v.active.index})}},{key:"getIndex",value:function(v,A){return this.refs[v].indexOf(A)}},{key:"getOrderedRefs",value:function(){var v=arguments.length>0&&arguments[0]!==void 0?arguments[0]:this.active.collection;return this.refs[v].sort(R)}}]),o}();function R(o,i){var v=o.node.sortableInfo.index,A=i.node.sortableInfo.index;return v-A}function t(o,i,v){return o=o.slice(),o.splice(v<0?o.length+v:v,0,o.splice(i,1)[0]),o}function e(o,i){return Object.keys(o).reduce(function(v,A){return i.indexOf(A)===-1&&(v[A]=o[A]),v},{})}var h={end:["touchend","touchcancel","mouseup"],move:["touchmove","mousemove"],start:["touchstart","mousedown"]},a=function(){if(typeof window=="undefined"||typeof document=="undefined")return"";var o=window.getComputedStyle(document.documentElement,"")||["-moz-hidden-iframe"],i=(Array.prototype.slice.call(o).join("").match(/-(moz|webkit|ms)-/)||o.OLink===""&&["","o"])[1];switch(i){case"ms":return"ms";default:return i&&i.length?i[0].toUpperCase()+i.substr(1):""}}();function n(o,i){Object.keys(i).forEach(function(v){o.style[v]=i[v]})}function c(o,i){o.style["".concat(a,"Transform")]=i==null?"":"translate3d(".concat(i.x,"px,").concat(i.y,"px,0)")}function y(o,i){o.style["".concat(a,"TransitionDuration")]=i==null?"":"".concat(i,"ms")}function J(o,i){for(;o;){if(i(o))return o;o=o.parentNode}return null}function b(o,i,v){return Math.max(o,Math.min(v,i))}function p(o){return o.substr(-2)==="px"?parseFloat(o):0}function w(o){var i=window.getComputedStyle(o);return{bottom:p(i.marginBottom),left:p(i.marginLeft),right:p(i.marginRight),top:p(i.marginTop)}}function m(o,i){var v=i.displayName||i.name;return v?"".concat(o,"(").concat(v,")"):o}function L(o,i){var v=o.getBoundingClientRect();return{top:v.top+i.top,left:v.left+i.left}}function f(o){return o.touches&&o.touches.length?{x:o.touches[0].pageX,y:o.touches[0].pageY}:o.changedTouches&&o.changedTouches.length?{x:o.changedTouches[0].pageX,y:o.changedTouches[0].pageY}:{x:o.pageX,y:o.pageY}}function u(o){return o.touches&&o.touches.length||o.changedTouches&&o.changedTouches.length}function O(o,i){var v=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{left:0,top:0};if(!!o){var A={left:v.left+o.offsetLeft,top:v.top+o.offsetTop};return o.parentNode===i?A:O(o.parentNode,i,A)}}function K(o,i,v){return o<v&&o>i?o-1:o>v&&o<i?o+1:o}function Q(o){var i=o.lockOffset,v=o.width,A=o.height,V=i,sn=i,tn="px";if(typeof i=="string"){var s=/^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(i);E()(s!==null,'lockOffset value should be a number or a string of a number followed by "px" or "%". Given %s',i),V=parseFloat(i),sn=parseFloat(i),tn=s[1]}return E()(isFinite(V)&&isFinite(sn),"lockOffset value should be a finite. Given %s",i),tn==="%"&&(V=V*v/100,sn=sn*A/100),{x:V,y:sn}}function j(o){var i=o.height,v=o.width,A=o.lockOffset,V=Array.isArray(A)?A:[A,A];E()(V.length===2,"lockOffset prop of SortableContainer should be a single value or an array of exactly two values. Given %s",A);var sn=Object(Z.a)(V,2),tn=sn[0],s=sn[1];return[Q({height:i,lockOffset:tn,width:v}),Q({height:i,lockOffset:s,width:v})]}function G(o){var i=window.getComputedStyle(o),v=/(auto|scroll)/,A=["overflow","overflowX","overflowY"];return A.find(function(V){return v.test(i[V])})}function nn(o){return o instanceof HTMLElement?G(o)?o:nn(o.parentNode):null}function an(o){var i=window.getComputedStyle(o);return i.display==="grid"?{x:p(i.gridColumnGap),y:p(i.gridRowGap)}:{x:0,y:0}}var cn={TAB:9,ESC:27,SPACE:32,LEFT:37,UP:38,RIGHT:39,DOWN:40},mn={Anchor:"A",Button:"BUTTON",Canvas:"CANVAS",Input:"INPUT",Option:"OPTION",Textarea:"TEXTAREA",Select:"SELECT"};function gn(o){var i="input, textarea, select, canvas, [contenteditable]",v=o.querySelectorAll(i),A=o.cloneNode(!0),V=Object(Y.a)(A.querySelectorAll(i));return V.forEach(function(sn,tn){if(sn.type!=="file"&&(sn.value=v[tn].value),sn.type==="radio"&&sn.name&&(sn.name="__sortableClone__".concat(sn.name)),sn.tagName===mn.Canvas&&v[tn].width>0&&v[tn].height>0){var s=sn.getContext("2d");s.drawImage(v[tn],0,0)}}),A}function fn(o){var i,v,A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{withRef:!1};return v=i=function(V){Object(B.a)(sn,V);function sn(){var tn,s;Object(g.a)(this,sn);for(var pn=arguments.length,X=new Array(pn),F=0;F<pn;F++)X[F]=arguments[F];return s=Object(r.a)(this,(tn=Object(z.a)(sn)).call.apply(tn,[this].concat(X))),Object(U.a)(Object(D.a)(Object(D.a)(s)),"wrappedInstance",Object(P.createRef)()),s}return Object(k.a)(sn,[{key:"componentDidMount",value:function(){var s=Object(T.findDOMNode)(this);s.sortableHandle=!0}},{key:"getWrappedInstance",value:function(){return E()(A.withRef,"To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call"),this.wrappedInstance.current}},{key:"render",value:function(){var s=A.withRef?this.wrappedInstance:null;return Object(P.createElement)(o,Object(_.a)({ref:s},this.props))}}]),sn}(P.Component),Object(U.a)(i,"displayName",m("sortableHandle",o)),v}function yn(o){return o.sortableHandle!=null}var wn=function(){function o(i,v){Object(g.a)(this,o),this.container=i,this.onScrollCallback=v}return Object(k.a)(o,[{key:"clear",value:function(){this.interval!=null&&(clearInterval(this.interval),this.interval=null)}},{key:"update",value:function(v){var A=this,V=v.translate,sn=v.minTranslate,tn=v.maxTranslate,s=v.width,pn=v.height,X={x:0,y:0},F={x:1,y:1},on={x:10,y:10},en=this.container,ln=en.scrollTop,hn=en.scrollLeft,xn=en.scrollHeight,$=en.scrollWidth,rn=en.clientHeight,un=en.clientWidth,bn=ln===0,Sn=xn-ln-rn===0,vn=hn===0,On=$-hn-un===0;V.y>=tn.y-pn/2&&!Sn?(X.y=1,F.y=on.y*Math.abs((tn.y-pn/2-V.y)/pn)):V.x>=tn.x-s/2&&!On?(X.x=1,F.x=on.x*Math.abs((tn.x-s/2-V.x)/s)):V.y<=sn.y+pn/2&&!bn?(X.y=-1,F.y=on.y*Math.abs((V.y-pn/2-sn.y)/pn)):V.x<=sn.x+s/2&&!vn&&(X.x=-1,F.x=on.x*Math.abs((V.x-s/2-sn.x)/s)),this.interval&&(this.clear(),this.isAutoScrolling=!1),(X.x!==0||X.y!==0)&&(this.interval=setInterval(function(){A.isAutoScrolling=!0;var In={left:F.x*X.x,top:F.y*X.y};A.container.scrollTop+=In.top,A.container.scrollLeft+=In.left,A.onScrollCallback(In)},5))}}]),o}();function Cn(o){var i=o.node;return{height:i.offsetHeight,width:i.offsetWidth}}function Pn(o){var i=[mn.Input,mn.Textarea,mn.Select,mn.Option,mn.Button];return!!(i.indexOf(o.target.tagName)!==-1||J(o.target,function(v){return v.contentEditable==="true"}))}var Ln={axis:S.a.oneOf(["x","y","xy"]),contentWindow:S.a.any,disableAutoscroll:S.a.bool,distance:S.a.number,getContainer:S.a.func,getHelperDimensions:S.a.func,helperClass:S.a.string,helperContainer:S.a.oneOfType([S.a.func,typeof HTMLElement=="undefined"?S.a.any:S.a.instanceOf(HTMLElement)]),hideSortableGhost:S.a.bool,keyboardSortingTransitionDuration:S.a.number,lockAxis:S.a.string,lockOffset:S.a.oneOfType([S.a.number,S.a.string,S.a.arrayOf(S.a.oneOfType([S.a.number,S.a.string]))]),lockToContainerEdges:S.a.bool,onSortEnd:S.a.func,onSortMove:S.a.func,onSortOver:S.a.func,onSortStart:S.a.func,pressDelay:S.a.number,pressThreshold:S.a.number,keyCodes:S.a.shape({lift:S.a.arrayOf(S.a.number),drop:S.a.arrayOf(S.a.number),cancel:S.a.arrayOf(S.a.number),up:S.a.arrayOf(S.a.number),down:S.a.arrayOf(S.a.number)}),shouldCancelStart:S.a.func,transitionDuration:S.a.number,updateBeforeSortStart:S.a.func,useDragHandle:S.a.bool,useWindowAsScrollContainer:S.a.bool},Tn={lift:[cn.SPACE],drop:[cn.SPACE],cancel:[cn.ESC],up:[cn.UP,cn.LEFT],down:[cn.DOWN,cn.RIGHT]},An={axis:"y",disableAutoscroll:!1,distance:0,getHelperDimensions:Cn,hideSortableGhost:!0,lockOffset:"50%",lockToContainerEdges:!1,pressDelay:0,pressThreshold:5,keyCodes:Tn,shouldCancelStart:Pn,transitionDuration:300,useWindowAsScrollContainer:!1},En=Object.keys(Ln);function Mn(o){E()(!(o.distance&&o.pressDelay),"Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.")}function Jn(o,i){try{var v=o()}catch(A){return i(!0,A)}return v&&v.then?v.then(i.bind(null,!1),i.bind(null,!0)):i(!1,value)}var q=Object(P.createContext)({manager:{}});function x(o){var i,v,A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{withRef:!1};return v=i=function(V){Object(B.a)(sn,V);function sn(tn){var s;Object(g.a)(this,sn),s=Object(r.a)(this,Object(z.a)(sn).call(this,tn)),Object(U.a)(Object(D.a)(Object(D.a)(s)),"state",{}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleStart",function(X){var F=s.props,on=F.distance,en=F.shouldCancelStart;if(!(X.button===2||en(X))){s.touched=!0,s.position=f(X);var ln=J(X.target,function(bn){return bn.sortableInfo!=null});if(ln&&ln.sortableInfo&&s.nodeIsChild(ln)&&!s.state.sorting){var hn=s.props.useDragHandle,xn=ln.sortableInfo,$=xn.index,rn=xn.collection,un=xn.disabled;if(un||hn&&!J(X.target,yn))return;s.manager.active={collection:rn,index:$},!u(X)&&X.target.tagName===mn.Anchor&&X.preventDefault(),on||(s.props.pressDelay===0?s.handlePress(X):s.pressTimer=setTimeout(function(){return s.handlePress(X)},s.props.pressDelay))}}}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"nodeIsChild",function(X){return X.sortableInfo.manager===s.manager}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleMove",function(X){var F=s.props,on=F.distance,en=F.pressThreshold;if(!s.state.sorting&&s.touched&&!s._awaitingUpdateBeforeSortStart){var ln=f(X),hn={x:s.position.x-ln.x,y:s.position.y-ln.y},xn=Math.abs(hn.x)+Math.abs(hn.y);s.delta=hn,!on&&(!en||xn>=en)?(clearTimeout(s.cancelTimer),s.cancelTimer=setTimeout(s.cancel,0)):on&&xn>=on&&s.manager.isActive()&&s.handlePress(X)}}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleEnd",function(){s.touched=!1,s.cancel()}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"cancel",function(){var X=s.props.distance,F=s.state.sorting;F||(X||clearTimeout(s.pressTimer),s.manager.active=null)}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handlePress",function(X){try{var F=s.manager.getActive(),on=function(){if(F){var en=function(){var Nn=vn.sortableInfo.index,Rn=w(vn),Bn=an(s.container),Fn=s.scrollContainer.getBoundingClientRect(),Kn=xn({index:Nn,node:vn,collection:On});if(s.node=vn,s.margin=Rn,s.gridGap=Bn,s.width=Kn.width,s.height=Kn.height,s.marginOffset={x:s.margin.left+s.margin.right+s.gridGap.x,y:Math.max(s.margin.top,s.margin.bottom,s.gridGap.y)},s.boundingClientRect=vn.getBoundingClientRect(),s.containerBoundingRect=Fn,s.index=Nn,s.newIndex=Nn,s.axis={x:hn.indexOf("x")>=0,y:hn.indexOf("y")>=0},s.offsetEdge=O(vn,s.container),In?s.initialOffset=f(C({},X,{pageX:s.boundingClientRect.left,pageY:s.boundingClientRect.top})):s.initialOffset=f(X),s.initialScroll={left:s.scrollContainer.scrollLeft,top:s.scrollContainer.scrollTop},s.initialWindowScroll={left:window.pageXOffset,top:window.pageYOffset},s.helper=s.helperContainer.appendChild(gn(vn)),n(s.helper,{boxSizing:"border-box",height:"".concat(s.height,"px"),left:"".concat(s.boundingClientRect.left-Rn.left,"px"),pointerEvents:"none",position:"fixed",top:"".concat(s.boundingClientRect.top-Rn.top,"px"),width:"".concat(s.width,"px")}),In&&s.helper.focus(),rn&&(s.sortableGhost=vn,n(vn,{opacity:0,visibility:"hidden"})),s.minTranslate={},s.maxTranslate={},In){var Un=Sn?{top:0,left:0,width:s.contentWindow.innerWidth,height:s.contentWindow.innerHeight}:s.containerBoundingRect,Gn=Un.top,Yn=Un.left,$n=Un.width,Hn=Un.height,qn=Gn+Hn,_n=Yn+$n;s.axis.x&&(s.minTranslate.x=Yn-s.boundingClientRect.left,s.maxTranslate.x=_n-(s.boundingClientRect.left+s.width)),s.axis.y&&(s.minTranslate.y=Gn-s.boundingClientRect.top,s.maxTranslate.y=qn-(s.boundingClientRect.top+s.height))}else s.axis.x&&(s.minTranslate.x=(Sn?0:Fn.left)-s.boundingClientRect.left-s.width/2,s.maxTranslate.x=(Sn?s.contentWindow.innerWidth:Fn.left+Fn.width)-s.boundingClientRect.left-s.width/2),s.axis.y&&(s.minTranslate.y=(Sn?0:Fn.top)-s.boundingClientRect.top-s.height/2,s.maxTranslate.y=(Sn?s.contentWindow.innerHeight:Fn.top+Fn.height)-s.boundingClientRect.top-s.height/2);$&&$.split(" ").forEach(function(Vn){return s.helper.classList.add(Vn)}),s.listenerNode=X.touches?X.target:s.contentWindow,In?(s.listenerNode.addEventListener("wheel",s.handleKeyEnd,!0),s.listenerNode.addEventListener("mousedown",s.handleKeyEnd,!0),s.listenerNode.addEventListener("keydown",s.handleKeyDown)):(h.move.forEach(function(Vn){return s.listenerNode.addEventListener(Vn,s.handleSortMove,!1)}),h.end.forEach(function(Vn){return s.listenerNode.addEventListener(Vn,s.handleSortEnd,!1)})),s.setState({sorting:!0,sortingIndex:Nn}),bn&&bn({node:vn,index:Nn,collection:On,isKeySorting:In,nodes:s.manager.getOrderedRefs(),helper:s.helper},X),In&&s.keyMove(0)},ln=s.props,hn=ln.axis,xn=ln.getHelperDimensions,$=ln.helperClass,rn=ln.hideSortableGhost,un=ln.updateBeforeSortStart,bn=ln.onSortStart,Sn=ln.useWindowAsScrollContainer,vn=F.node,On=F.collection,In=s.manager.isKeySorting,Dn=function(){if(typeof un=="function"){s._awaitingUpdateBeforeSortStart=!0;var jn=Jn(function(){var Nn=vn.sortableInfo.index;return Promise.resolve(un({collection:On,index:Nn,node:vn,isKeySorting:In},X)).then(function(){})},function(Nn,Rn){if(s._awaitingUpdateBeforeSortStart=!1,Nn)throw Rn;return Rn});if(jn&&jn.then)return jn.then(function(){})}}();return Dn&&Dn.then?Dn.then(en):en(Dn)}}();return Promise.resolve(on&&on.then?on.then(function(){}):void 0)}catch(en){return Promise.reject(en)}}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleSortMove",function(X){var F=s.props.onSortMove;typeof X.preventDefault=="function"&&X.cancelable&&X.preventDefault(),s.updateHelperPosition(X),s.animateNodes(),s.autoscroll(),F&&F(X)}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleSortEnd",function(X){var F=s.props,on=F.hideSortableGhost,en=F.onSortEnd,ln=s.manager,hn=ln.active.collection,xn=ln.isKeySorting,$=s.manager.getOrderedRefs();s.listenerNode&&(xn?(s.listenerNode.removeEventListener("wheel",s.handleKeyEnd,!0),s.listenerNode.removeEventListener("mousedown",s.handleKeyEnd,!0),s.listenerNode.removeEventListener("keydown",s.handleKeyDown)):(h.move.forEach(function(vn){return s.listenerNode.removeEventListener(vn,s.handleSortMove)}),h.end.forEach(function(vn){return s.listenerNode.removeEventListener(vn,s.handleSortEnd)}))),s.helper.parentNode.removeChild(s.helper),on&&s.sortableGhost&&n(s.sortableGhost,{opacity:"",visibility:""});for(var rn=0,un=$.length;rn<un;rn++){var bn=$[rn],Sn=bn.node;bn.edgeOffset=null,bn.boundingClientRect=null,c(Sn,null),y(Sn,null),bn.translate=null}s.autoScroller.clear(),s.manager.active=null,s.manager.isKeySorting=!1,s.setState({sorting:!1,sortingIndex:null}),typeof en=="function"&&en({collection:hn,newIndex:s.newIndex,oldIndex:s.index,isKeySorting:xn,nodes:$},X),s.touched=!1}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"autoscroll",function(){var X=s.props.disableAutoscroll,F=s.manager.isKeySorting;if(X){s.autoScroller.clear();return}if(F){var on=C({},s.translate),en=0,ln=0;s.axis.x&&(on.x=Math.min(s.maxTranslate.x,Math.max(s.minTranslate.x,s.translate.x)),en=s.translate.x-on.x),s.axis.y&&(on.y=Math.min(s.maxTranslate.y,Math.max(s.minTranslate.y,s.translate.y)),ln=s.translate.y-on.y),s.translate=on,c(s.helper,s.translate),s.scrollContainer.scrollLeft+=en,s.scrollContainer.scrollTop+=ln;return}s.autoScroller.update({height:s.height,maxTranslate:s.maxTranslate,minTranslate:s.minTranslate,translate:s.translate,width:s.width})}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"onAutoScroll",function(X){s.translate.x+=X.left,s.translate.y+=X.top,s.animateNodes()}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleKeyDown",function(X){var F=X.keyCode,on=s.props,en=on.shouldCancelStart,ln=on.keyCodes,hn=ln===void 0?{}:ln,xn=C({},Tn,hn);s.manager.active&&!s.manager.isKeySorting||!s.manager.active&&(!xn.lift.includes(F)||en(X)||!s.isValidSortingTarget(X))||(X.stopPropagation(),X.preventDefault(),xn.lift.includes(F)&&!s.manager.active?s.keyLift(X):xn.drop.includes(F)&&s.manager.active?s.keyDrop(X):xn.cancel.includes(F)?(s.newIndex=s.manager.active.index,s.keyDrop(X)):xn.up.includes(F)?s.keyMove(-1):xn.down.includes(F)&&s.keyMove(1))}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"keyLift",function(X){var F=X.target,on=J(F,function(xn){return xn.sortableInfo!=null}),en=on.sortableInfo,ln=en.index,hn=en.collection;s.initialFocusedNode=F,s.manager.isKeySorting=!0,s.manager.active={index:ln,collection:hn},s.handlePress(X)}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"keyMove",function(X){var F=s.manager.getOrderedRefs(),on=F[F.length-1].node.sortableInfo.index,en=s.newIndex+X,ln=s.newIndex;if(!(en<0||en>on)){s.prevIndex=ln,s.newIndex=en;var hn=K(s.newIndex,s.prevIndex,s.index),xn=F.find(function(In){var Dn=In.node;return Dn.sortableInfo.index===hn}),$=xn.node,rn=s.containerScrollDelta,un=xn.boundingClientRect||L($,rn),bn=xn.translate||{x:0,y:0},Sn={top:un.top+bn.y-rn.top,left:un.left+bn.x-rn.left},vn=ln<en,On={x:vn&&s.axis.x?$.offsetWidth-s.width:0,y:vn&&s.axis.y?$.offsetHeight-s.height:0};s.handleSortMove({pageX:Sn.left+On.x,pageY:Sn.top+On.y,ignoreTransition:X===0})}}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"keyDrop",function(X){s.handleSortEnd(X),s.initialFocusedNode&&s.initialFocusedNode.focus()}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"handleKeyEnd",function(X){s.manager.active&&s.keyDrop(X)}),Object(U.a)(Object(D.a)(Object(D.a)(s)),"isValidSortingTarget",function(X){var F=s.props.useDragHandle,on=X.target,en=J(on,function(ln){return ln.sortableInfo!=null});return en&&en.sortableInfo&&!en.sortableInfo.disabled&&(F?yn(on):on.sortableInfo)});var pn=new N;return Mn(tn),s.manager=pn,s.wrappedInstance=Object(P.createRef)(),s.sortableContextValue={manager:pn},s.events={end:s.handleEnd,move:s.handleMove,start:s.handleStart},s}return Object(k.a)(sn,[{key:"componentDidMount",value:function(){var s=this,pn=this.props.useWindowAsScrollContainer,X=this.getContainer();Promise.resolve(X).then(function(F){s.container=F,s.document=s.container.ownerDocument||document;var on=s.props.contentWindow||s.document.defaultView||window;s.contentWindow=typeof on=="function"?on():on,s.scrollContainer=pn?s.document.scrollingElement||s.document.documentElement:nn(s.container)||s.container,s.autoScroller=new wn(s.scrollContainer,s.onAutoScroll),Object.keys(s.events).forEach(function(en){return h[en].forEach(function(ln){return s.container.addEventListener(ln,s.events[en],!1)})}),s.container.addEventListener("keydown",s.handleKeyDown)})}},{key:"componentWillUnmount",value:function(){var s=this;this.helper&&this.helper.parentNode&&this.helper.parentNode.removeChild(this.helper),this.container&&(Object.keys(this.events).forEach(function(pn){return h[pn].forEach(function(X){return s.container.removeEventListener(X,s.events[pn])})}),this.container.removeEventListener("keydown",this.handleKeyDown))}},{key:"updateHelperPosition",value:function(s){var pn=this.props,X=pn.lockAxis,F=pn.lockOffset,on=pn.lockToContainerEdges,en=pn.transitionDuration,ln=pn.keyboardSortingTransitionDuration,hn=ln===void 0?en:ln,xn=this.manager.isKeySorting,$=s.ignoreTransition,rn=f(s),un={x:rn.x-this.initialOffset.x,y:rn.y-this.initialOffset.y};if(un.y-=window.pageYOffset-this.initialWindowScroll.top,un.x-=window.pageXOffset-this.initialWindowScroll.left,this.translate=un,on){var bn=j({height:this.height,lockOffset:F,width:this.width}),Sn=Object(Z.a)(bn,2),vn=Sn[0],On=Sn[1],In={x:this.width/2-vn.x,y:this.height/2-vn.y},Dn={x:this.width/2-On.x,y:this.height/2-On.y};un.x=b(this.minTranslate.x+In.x,this.maxTranslate.x-Dn.x,un.x),un.y=b(this.minTranslate.y+In.y,this.maxTranslate.y-Dn.y,un.y)}X==="x"?un.y=0:X==="y"&&(un.x=0),xn&&hn&&!$&&y(this.helper,hn),c(this.helper,un)}},{key:"animateNodes",value:function(){var s=this.props,pn=s.transitionDuration,X=s.hideSortableGhost,F=s.onSortOver,on=this.containerScrollDelta,en=this.windowScrollDelta,ln=this.manager.getOrderedRefs(),hn={left:this.offsetEdge.left+this.translate.x+on.left,top:this.offsetEdge.top+this.translate.y+on.top},xn=this.manager.isKeySorting,$=this.newIndex;this.newIndex=null;for(var rn=0,un=ln.length;rn<un;rn++){var bn=ln[rn].node,Sn=bn.sortableInfo.index,vn=bn.offsetWidth,On=bn.offsetHeight,In={height:this.height>On?On/2:this.height/2,width:this.width>vn?vn/2:this.width/2},Dn=xn&&Sn>this.index&&Sn<=$,jn=xn&&Sn<this.index&&Sn>=$,Nn={x:0,y:0},Rn=ln[rn].edgeOffset;Rn||(Rn=O(bn,this.container),ln[rn].edgeOffset=Rn,xn&&(ln[rn].boundingClientRect=L(bn,on)));var Bn=rn<ln.length-1&&ln[rn+1],Fn=rn>0&&ln[rn-1];if(Bn&&!Bn.edgeOffset&&(Bn.edgeOffset=O(Bn.node,this.container),xn&&(Bn.boundingClientRect=L(Bn.node,on))),Sn===this.index){X&&(this.sortableGhost=bn,n(bn,{opacity:0,visibility:"hidden"}));continue}pn&&y(bn,pn),this.axis.x?this.axis.y?jn||Sn<this.index&&(hn.left+en.left-In.width<=Rn.left&&hn.top+en.top<=Rn.top+In.height||hn.top+en.top+In.height<=Rn.top)?(Nn.x=this.width+this.marginOffset.x,Rn.left+Nn.x>this.containerBoundingRect.width-In.width&&Bn&&(Nn.x=Bn.edgeOffset.left-Rn.left,Nn.y=Bn.edgeOffset.top-Rn.top),this.newIndex===null&&(this.newIndex=Sn)):(Dn||Sn>this.index&&(hn.left+en.left+In.width>=Rn.left&&hn.top+en.top+In.height>=Rn.top||hn.top+en.top+In.height>=Rn.top+On))&&(Nn.x=-(this.width+this.marginOffset.x),Rn.left+Nn.x<this.containerBoundingRect.left+In.width&&Fn&&(Nn.x=Fn.edgeOffset.left-Rn.left,Nn.y=Fn.edgeOffset.top-Rn.top),this.newIndex=Sn):Dn||Sn>this.index&&hn.left+en.left+In.width>=Rn.left?(Nn.x=-(this.width+this.marginOffset.x),this.newIndex=Sn):(jn||Sn<this.index&&hn.left+en.left<=Rn.left+In.width)&&(Nn.x=this.width+this.marginOffset.x,this.newIndex==null&&(this.newIndex=Sn)):this.axis.y&&(Dn||Sn>this.index&&hn.top+en.top+In.height>=Rn.top?(Nn.y=-(this.height+this.marginOffset.y),this.newIndex=Sn):(jn||Sn<this.index&&hn.top+en.top<=Rn.top+In.height)&&(Nn.y=this.height+this.marginOffset.y,this.newIndex==null&&(this.newIndex=Sn))),c(bn,Nn),ln[rn].translate=Nn}this.newIndex==null&&(this.newIndex=this.index),xn&&(this.newIndex=$);var Kn=xn?this.prevIndex:$;F&&this.newIndex!==Kn&&F({collection:this.manager.active.collection,index:this.index,newIndex:this.newIndex,oldIndex:Kn,isKeySorting:xn,nodes:ln,helper:this.helper})}},{key:"getWrappedInstance",value:function(){return E()(A.withRef,"To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call"),this.wrappedInstance.current}},{key:"getContainer",value:function(){var s=this.props.getContainer;return typeof s!="function"?Object(T.findDOMNode)(this):s(A.withRef?this.getWrappedInstance():void 0)}},{key:"render",value:function(){var s=A.withRef?this.wrappedInstance:null;return Object(P.createElement)(q.Provider,{value:this.sortableContextValue},Object(P.createElement)(o,Object(_.a)({ref:s},e(this.props,En))))}},{key:"helperContainer",get:function(){var s=this.props.helperContainer;return typeof s=="function"?s():this.props.helperContainer||this.document.body}},{key:"containerScrollDelta",get:function(){var s=this.props.useWindowAsScrollContainer;return s?{left:0,top:0}:{left:this.scrollContainer.scrollLeft-this.initialScroll.left,top:this.scrollContainer.scrollTop-this.initialScroll.top}}},{key:"windowScrollDelta",get:function(){return{left:this.contentWindow.pageXOffset-this.initialWindowScroll.left,top:this.contentWindow.pageYOffset-this.initialWindowScroll.top}}}]),sn}(P.Component),Object(U.a)(i,"displayName",m("sortableList",o)),Object(U.a)(i,"defaultProps",An),Object(U.a)(i,"propTypes",Ln),v}var M={index:S.a.number.isRequired,collection:S.a.oneOfType([S.a.number,S.a.string]),disabled:S.a.bool},I=Object.keys(M);function d(o){var i,v,A=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{withRef:!1};return v=i=function(V){Object(B.a)(sn,V);function sn(){var tn,s;Object(g.a)(this,sn);for(var pn=arguments.length,X=new Array(pn),F=0;F<pn;F++)X[F]=arguments[F];return s=Object(r.a)(this,(tn=Object(z.a)(sn)).call.apply(tn,[this].concat(X))),Object(U.a)(Object(D.a)(Object(D.a)(s)),"wrappedInstance",Object(P.createRef)()),s}return Object(k.a)(sn,[{key:"componentDidMount",value:function(){this.register()}},{key:"componentDidUpdate",value:function(s){this.node&&(s.index!==this.props.index&&(this.node.sortableInfo.index=this.props.index),s.disabled!==this.props.disabled&&(this.node.sortableInfo.disabled=this.props.disabled)),s.collection!==this.props.collection&&(this.unregister(s.collection),this.register())}},{key:"componentWillUnmount",value:function(){this.unregister()}},{key:"register",value:function(){var s=this.props,pn=s.collection,X=s.disabled,F=s.index,on=Object(T.findDOMNode)(this);on.sortableInfo={collection:pn,disabled:X,index:F,manager:this.context.manager},this.node=on,this.ref={node:on},this.context.manager.add(pn,this.ref)}},{key:"unregister",value:function(){var s=arguments.length>0&&arguments[0]!==void 0?arguments[0]:this.props.collection;this.context.manager.remove(s,this.ref)}},{key:"getWrappedInstance",value:function(){return E()(A.withRef,"To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call"),this.wrappedInstance.current}},{key:"render",value:function(){var s=A.withRef?this.wrappedInstance:null;return Object(P.createElement)(o,Object(_.a)({ref:s},e(this.props,I)))}}]),sn}(P.Component),Object(U.a)(i,"displayName",m("sortableElement",o)),Object(U.a)(i,"contextType",q),Object(U.a)(i,"propTypes",M),Object(U.a)(i,"defaultProps",{collection:0}),v}}}]);
